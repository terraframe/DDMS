/*******************************************************************************
 * Copyright (C) 2018 IVCC
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 ******************************************************************************/
package dss.vector.solutions.intervention.monitor;

@com.runwaysdk.business.ClassSignature(hash = 1295334956)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to ITNCommunityDistributionView.java
 *
 * @author Autogenerated by RunwaySDK
 */
public abstract class ITNCommunityDistributionViewBase extends com.runwaysdk.business.View implements com.runwaysdk.generation.loader.Reloadable
{
  public final static String CLASS = "dss.vector.solutions.intervention.monitor.ITNCommunityDistributionView";
  public static java.lang.String AGENTFIRSTNAME = "agentFirstName";
  public static java.lang.String AGENTSURNAME = "agentSurname";
  public static java.lang.String BATCHNUMBER = "batchNumber";
  public static java.lang.String CONCRETEID = "concreteId";
  public static java.lang.String CURRENCYRECEIVED = "currencyReceived";
  public static java.lang.String DISPLAYNETS = "displayNets";
  public static java.lang.String DISPLAYTARGETGROUPS = "displayTargetGroups";
  public static java.lang.String DISTRIBUTIONLOCATION = "distributionLocation";
  public static java.lang.String ENDDATE = "endDate";
  public static java.lang.String ENTRYTYPE = "entryType";
  public static java.lang.String HASBATCHNUMBER = "hasBatchNumber";
  public static java.lang.String HOUSEHOLDADDRESS = "householdAddress";
  public static java.lang.String HOUSEHOLDNAME = "householdName";
  public static java.lang.String HOUSEHOLDSURNAME = "householdSurname";
  public static java.lang.String ID = "id";
  public static java.lang.String ITNSRECEIVED = "itnsReceived";
  public static java.lang.String NUMBERRETRIEVED = "numberRetrieved";
  public static java.lang.String PRETREATED = "pretreated";
  public static java.lang.String RESIDENTS = "residents";
  public static java.lang.String RETRIEVED = "retrieved";
  public static java.lang.String SOLD = "sold";
  public static java.lang.String STARTDATE = "startDate";
  private static final long serialVersionUID = 1295334956;
  
  public ITNCommunityDistributionViewBase()
  {
    super();
  }
  
  public String getAgentFirstName()
  {
    return getValue(AGENTFIRSTNAME);
  }
  
  public void validateAgentFirstName()
  {
    this.validateAttribute(AGENTFIRSTNAME);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeVirtualDAOIF getAgentFirstNameMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.intervention.monitor.ITNCommunityDistributionView.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeVirtualDAOIF)mdClassIF.definesAttribute(AGENTFIRSTNAME);
  }
  
  public void setAgentFirstName(String value)
  {
    if(value == null)
    {
      setValue(AGENTFIRSTNAME, "");
    }
    else
    {
      setValue(AGENTFIRSTNAME, value);
    }
  }
  
  public String getAgentSurname()
  {
    return getValue(AGENTSURNAME);
  }
  
  public void validateAgentSurname()
  {
    this.validateAttribute(AGENTSURNAME);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeVirtualDAOIF getAgentSurnameMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.intervention.monitor.ITNCommunityDistributionView.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeVirtualDAOIF)mdClassIF.definesAttribute(AGENTSURNAME);
  }
  
  public void setAgentSurname(String value)
  {
    if(value == null)
    {
      setValue(AGENTSURNAME, "");
    }
    else
    {
      setValue(AGENTSURNAME, value);
    }
  }
  
  public String getBatchNumber()
  {
    return getValue(BATCHNUMBER);
  }
  
  public void validateBatchNumber()
  {
    this.validateAttribute(BATCHNUMBER);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeVirtualDAOIF getBatchNumberMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.intervention.monitor.ITNCommunityDistributionView.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeVirtualDAOIF)mdClassIF.definesAttribute(BATCHNUMBER);
  }
  
  public void setBatchNumber(String value)
  {
    if(value == null)
    {
      setValue(BATCHNUMBER, "");
    }
    else
    {
      setValue(BATCHNUMBER, value);
    }
  }
  
  public String getConcreteId()
  {
    return getValue(CONCRETEID);
  }
  
  public void validateConcreteId()
  {
    this.validateAttribute(CONCRETEID);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF getConcreteIdMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.intervention.monitor.ITNCommunityDistributionView.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF)mdClassIF.definesAttribute(CONCRETEID);
  }
  
  public void setConcreteId(String value)
  {
    if(value == null)
    {
      setValue(CONCRETEID, "");
    }
    else
    {
      setValue(CONCRETEID, value);
    }
  }
  
  public java.math.BigDecimal getCurrencyReceived()
  {
    return com.runwaysdk.constants.MdAttributeDecimalUtil.getTypeSafeValue(getValue(CURRENCYRECEIVED));
  }
  
  public void validateCurrencyReceived()
  {
    this.validateAttribute(CURRENCYRECEIVED);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeVirtualDAOIF getCurrencyReceivedMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.intervention.monitor.ITNCommunityDistributionView.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeVirtualDAOIF)mdClassIF.definesAttribute(CURRENCYRECEIVED);
  }
  
  public void setCurrencyReceived(java.math.BigDecimal value)
  {
    if(value == null)
    {
      setValue(CURRENCYRECEIVED, "");
    }
    else
    {
      setValue(CURRENCYRECEIVED, value.toString());
    }
  }
  
  public dss.vector.solutions.ontology.Term getDisplayNets()
  {
    if (getValue(DISPLAYNETS).trim().equals(""))
    {
      return null;
    }
    else
    {
      return dss.vector.solutions.ontology.Term.get(getValue(DISPLAYNETS));
    }
  }
  
  public String getDisplayNetsId()
  {
    return getValue(DISPLAYNETS);
  }
  
  public void validateDisplayNets()
  {
    this.validateAttribute(DISPLAYNETS);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeReferenceDAOIF getDisplayNetsMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.intervention.monitor.ITNCommunityDistributionView.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeReferenceDAOIF)mdClassIF.definesAttribute(DISPLAYNETS);
  }
  
  public void setDisplayNets(dss.vector.solutions.ontology.Term value)
  {
    if(value == null)
    {
      setValue(DISPLAYNETS, "");
    }
    else
    {
      setValue(DISPLAYNETS, value.getId());
    }
  }
  
  public dss.vector.solutions.ontology.Term getDisplayTargetGroups()
  {
    if (getValue(DISPLAYTARGETGROUPS).trim().equals(""))
    {
      return null;
    }
    else
    {
      return dss.vector.solutions.ontology.Term.get(getValue(DISPLAYTARGETGROUPS));
    }
  }
  
  public String getDisplayTargetGroupsId()
  {
    return getValue(DISPLAYTARGETGROUPS);
  }
  
  public void validateDisplayTargetGroups()
  {
    this.validateAttribute(DISPLAYTARGETGROUPS);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeReferenceDAOIF getDisplayTargetGroupsMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.intervention.monitor.ITNCommunityDistributionView.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeReferenceDAOIF)mdClassIF.definesAttribute(DISPLAYTARGETGROUPS);
  }
  
  public void setDisplayTargetGroups(dss.vector.solutions.ontology.Term value)
  {
    if(value == null)
    {
      setValue(DISPLAYTARGETGROUPS, "");
    }
    else
    {
      setValue(DISPLAYTARGETGROUPS, value.getId());
    }
  }
  
  public String getDistributionLocation()
  {
    return getValue(DISTRIBUTIONLOCATION);
  }
  
  public void validateDistributionLocation()
  {
    this.validateAttribute(DISTRIBUTIONLOCATION);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF getDistributionLocationMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.intervention.monitor.ITNCommunityDistributionView.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF)mdClassIF.definesAttribute(DISTRIBUTIONLOCATION);
  }
  
  public void setDistributionLocation(String value)
  {
    if(value == null)
    {
      setValue(DISTRIBUTIONLOCATION, "");
    }
    else
    {
      setValue(DISTRIBUTIONLOCATION, value);
    }
  }
  
  public java.util.Date getEndDate()
  {
    return com.runwaysdk.constants.MdAttributeDateUtil.getTypeSafeValue(getValue(ENDDATE));
  }
  
  public void validateEndDate()
  {
    this.validateAttribute(ENDDATE);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeVirtualDAOIF getEndDateMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.intervention.monitor.ITNCommunityDistributionView.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeVirtualDAOIF)mdClassIF.definesAttribute(ENDDATE);
  }
  
  public void setEndDate(java.util.Date value)
  {
    if(value == null)
    {
      setValue(ENDDATE, "");
    }
    else
    {
      setValue(ENDDATE, new java.text.SimpleDateFormat(com.runwaysdk.constants.Constants.DATE_FORMAT).format(value));
    }
  }
  
  public Boolean getEntryType()
  {
    return com.runwaysdk.constants.MdAttributeBooleanUtil.getTypeSafeValue(getValue(ENTRYTYPE));
  }
  
  public void validateEntryType()
  {
    this.validateAttribute(ENTRYTYPE);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeVirtualDAOIF getEntryTypeMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.intervention.monitor.ITNCommunityDistributionView.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeVirtualDAOIF)mdClassIF.definesAttribute(ENTRYTYPE);
  }
  
  public void setEntryType(Boolean value)
  {
    if(value == null)
    {
      setValue(ENTRYTYPE, "");
    }
    else
    {
      setValue(ENTRYTYPE, java.lang.Boolean.toString(value));
    }
  }
  
  public Boolean getHasBatchNumber()
  {
    return com.runwaysdk.constants.MdAttributeBooleanUtil.getTypeSafeValue(getValue(HASBATCHNUMBER));
  }
  
  public void validateHasBatchNumber()
  {
    this.validateAttribute(HASBATCHNUMBER);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeVirtualDAOIF getHasBatchNumberMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.intervention.monitor.ITNCommunityDistributionView.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeVirtualDAOIF)mdClassIF.definesAttribute(HASBATCHNUMBER);
  }
  
  public void setHasBatchNumber(Boolean value)
  {
    if(value == null)
    {
      setValue(HASBATCHNUMBER, "");
    }
    else
    {
      setValue(HASBATCHNUMBER, java.lang.Boolean.toString(value));
    }
  }
  
  public String getHouseholdAddress()
  {
    return getValue(HOUSEHOLDADDRESS);
  }
  
  public void validateHouseholdAddress()
  {
    this.validateAttribute(HOUSEHOLDADDRESS);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF getHouseholdAddressMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.intervention.monitor.ITNCommunityDistributionView.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF)mdClassIF.definesAttribute(HOUSEHOLDADDRESS);
  }
  
  public void setHouseholdAddress(String value)
  {
    if(value == null)
    {
      setValue(HOUSEHOLDADDRESS, "");
    }
    else
    {
      setValue(HOUSEHOLDADDRESS, value);
    }
  }
  
  public String getHouseholdName()
  {
    return getValue(HOUSEHOLDNAME);
  }
  
  public void validateHouseholdName()
  {
    this.validateAttribute(HOUSEHOLDNAME);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeVirtualDAOIF getHouseholdNameMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.intervention.monitor.ITNCommunityDistributionView.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeVirtualDAOIF)mdClassIF.definesAttribute(HOUSEHOLDNAME);
  }
  
  public void setHouseholdName(String value)
  {
    if(value == null)
    {
      setValue(HOUSEHOLDNAME, "");
    }
    else
    {
      setValue(HOUSEHOLDNAME, value);
    }
  }
  
  public String getHouseholdSurname()
  {
    return getValue(HOUSEHOLDSURNAME);
  }
  
  public void validateHouseholdSurname()
  {
    this.validateAttribute(HOUSEHOLDSURNAME);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeVirtualDAOIF getHouseholdSurnameMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.intervention.monitor.ITNCommunityDistributionView.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeVirtualDAOIF)mdClassIF.definesAttribute(HOUSEHOLDSURNAME);
  }
  
  public void setHouseholdSurname(String value)
  {
    if(value == null)
    {
      setValue(HOUSEHOLDSURNAME, "");
    }
    else
    {
      setValue(HOUSEHOLDSURNAME, value);
    }
  }
  
  public String getId()
  {
    return getValue(ID);
  }
  
  public void validateId()
  {
    this.validateAttribute(ID);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF getIdMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.intervention.monitor.ITNCommunityDistributionView.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF)mdClassIF.definesAttribute(ID);
  }
  
  public Integer getItnsReceived()
  {
    return com.runwaysdk.constants.MdAttributeIntegerUtil.getTypeSafeValue(getValue(ITNSRECEIVED));
  }
  
  public void validateItnsReceived()
  {
    this.validateAttribute(ITNSRECEIVED);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeVirtualDAOIF getItnsReceivedMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.intervention.monitor.ITNCommunityDistributionView.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeVirtualDAOIF)mdClassIF.definesAttribute(ITNSRECEIVED);
  }
  
  public void setItnsReceived(Integer value)
  {
    if(value == null)
    {
      setValue(ITNSRECEIVED, "");
    }
    else
    {
      setValue(ITNSRECEIVED, java.lang.Integer.toString(value));
    }
  }
  
  public Integer getNumberRetrieved()
  {
    return com.runwaysdk.constants.MdAttributeIntegerUtil.getTypeSafeValue(getValue(NUMBERRETRIEVED));
  }
  
  public void validateNumberRetrieved()
  {
    this.validateAttribute(NUMBERRETRIEVED);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeVirtualDAOIF getNumberRetrievedMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.intervention.monitor.ITNCommunityDistributionView.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeVirtualDAOIF)mdClassIF.definesAttribute(NUMBERRETRIEVED);
  }
  
  public void setNumberRetrieved(Integer value)
  {
    if(value == null)
    {
      setValue(NUMBERRETRIEVED, "");
    }
    else
    {
      setValue(NUMBERRETRIEVED, java.lang.Integer.toString(value));
    }
  }
  
  public Boolean getPretreated()
  {
    return com.runwaysdk.constants.MdAttributeBooleanUtil.getTypeSafeValue(getValue(PRETREATED));
  }
  
  public void validatePretreated()
  {
    this.validateAttribute(PRETREATED);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeVirtualDAOIF getPretreatedMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.intervention.monitor.ITNCommunityDistributionView.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeVirtualDAOIF)mdClassIF.definesAttribute(PRETREATED);
  }
  
  public void setPretreated(Boolean value)
  {
    if(value == null)
    {
      setValue(PRETREATED, "");
    }
    else
    {
      setValue(PRETREATED, java.lang.Boolean.toString(value));
    }
  }
  
  public Integer getResidents()
  {
    return com.runwaysdk.constants.MdAttributeIntegerUtil.getTypeSafeValue(getValue(RESIDENTS));
  }
  
  public void validateResidents()
  {
    this.validateAttribute(RESIDENTS);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeVirtualDAOIF getResidentsMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.intervention.monitor.ITNCommunityDistributionView.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeVirtualDAOIF)mdClassIF.definesAttribute(RESIDENTS);
  }
  
  public void setResidents(Integer value)
  {
    if(value == null)
    {
      setValue(RESIDENTS, "");
    }
    else
    {
      setValue(RESIDENTS, java.lang.Integer.toString(value));
    }
  }
  
  public Boolean getRetrieved()
  {
    return com.runwaysdk.constants.MdAttributeBooleanUtil.getTypeSafeValue(getValue(RETRIEVED));
  }
  
  public void validateRetrieved()
  {
    this.validateAttribute(RETRIEVED);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeVirtualDAOIF getRetrievedMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.intervention.monitor.ITNCommunityDistributionView.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeVirtualDAOIF)mdClassIF.definesAttribute(RETRIEVED);
  }
  
  public void setRetrieved(Boolean value)
  {
    if(value == null)
    {
      setValue(RETRIEVED, "");
    }
    else
    {
      setValue(RETRIEVED, java.lang.Boolean.toString(value));
    }
  }
  
  public Boolean getSold()
  {
    return com.runwaysdk.constants.MdAttributeBooleanUtil.getTypeSafeValue(getValue(SOLD));
  }
  
  public void validateSold()
  {
    this.validateAttribute(SOLD);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeVirtualDAOIF getSoldMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.intervention.monitor.ITNCommunityDistributionView.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeVirtualDAOIF)mdClassIF.definesAttribute(SOLD);
  }
  
  public void setSold(Boolean value)
  {
    if(value == null)
    {
      setValue(SOLD, "");
    }
    else
    {
      setValue(SOLD, java.lang.Boolean.toString(value));
    }
  }
  
  public java.util.Date getStartDate()
  {
    return com.runwaysdk.constants.MdAttributeDateUtil.getTypeSafeValue(getValue(STARTDATE));
  }
  
  public void validateStartDate()
  {
    this.validateAttribute(STARTDATE);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeVirtualDAOIF getStartDateMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.intervention.monitor.ITNCommunityDistributionView.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeVirtualDAOIF)mdClassIF.definesAttribute(STARTDATE);
  }
  
  public void setStartDate(java.util.Date value)
  {
    if(value == null)
    {
      setValue(STARTDATE, "");
    }
    else
    {
      setValue(STARTDATE, new java.text.SimpleDateFormat(com.runwaysdk.constants.Constants.DATE_FORMAT).format(value));
    }
  }
  
  protected String getDeclaredType()
  {
    return CLASS;
  }
  
  public static ITNCommunityDistributionView get(String id)
  {
    return (ITNCommunityDistributionView) com.runwaysdk.business.View.get(id);
  }
  
  public void applyAll(dss.vector.solutions.intervention.monitor.ITNCommunityNet[] nets, dss.vector.solutions.intervention.monitor.ITNCommunityTargetGroup[] targetGroups)
  {
    String msg = "This method should never be invoked.  It should be overwritten in dss.vector.solutions.intervention.monitor.ITNCommunityDistributionView.java";
    throw new com.runwaysdk.dataaccess.metadata.ForbiddenMethodException(msg);
  }
  
  public static final void applyAll(java.lang.String id, dss.vector.solutions.intervention.monitor.ITNCommunityNet[] nets, dss.vector.solutions.intervention.monitor.ITNCommunityTargetGroup[] targetGroups)
  {
    ITNCommunityDistributionView _instance = ITNCommunityDistributionView.get(id);
    _instance.applyAll(nets, targetGroups);
  }
  
  public void deleteConcrete()
  {
    String msg = "This method should never be invoked.  It should be overwritten in dss.vector.solutions.intervention.monitor.ITNCommunityDistributionView.java";
    throw new com.runwaysdk.dataaccess.metadata.ForbiddenMethodException(msg);
  }
  
  public static final void deleteConcrete(java.lang.String id)
  {
    ITNCommunityDistributionView _instance = ITNCommunityDistributionView.get(id);
    _instance.deleteConcrete();
  }
  
  public dss.vector.solutions.intervention.monitor.ITNCommunityNet[] getITNCommunityNets()
  {
    String msg = "This method should never be invoked.  It should be overwritten in dss.vector.solutions.intervention.monitor.ITNCommunityDistributionView.java";
    throw new com.runwaysdk.dataaccess.metadata.ForbiddenMethodException(msg);
  }
  
  public static final dss.vector.solutions.intervention.monitor.ITNCommunityNet[] getITNCommunityNets(java.lang.String id)
  {
    ITNCommunityDistributionView _instance = ITNCommunityDistributionView.get(id);
    return _instance.getITNCommunityNets();
  }
  
  public dss.vector.solutions.intervention.monitor.ITNCommunityTargetGroup[] getITNCommunityTargetGroups()
  {
    String msg = "This method should never be invoked.  It should be overwritten in dss.vector.solutions.intervention.monitor.ITNCommunityDistributionView.java";
    throw new com.runwaysdk.dataaccess.metadata.ForbiddenMethodException(msg);
  }
  
  public static final dss.vector.solutions.intervention.monitor.ITNCommunityTargetGroup[] getITNCommunityTargetGroups(java.lang.String id)
  {
    ITNCommunityDistributionView _instance = ITNCommunityDistributionView.get(id);
    return _instance.getITNCommunityTargetGroups();
  }
  
  public static dss.vector.solutions.intervention.monitor.ITNCommunityDistributionViewQuery getPage(java.lang.String sortAttribute, java.lang.Boolean isAscending, java.lang.Integer pageSize, java.lang.Integer pageNumber)
  {
    String msg = "This method should never be invoked.  It should be overwritten in dss.vector.solutions.intervention.monitor.ITNCommunityDistributionView.java";
    throw new com.runwaysdk.dataaccess.metadata.ForbiddenMethodException(msg);
  }
  
  public String toString()
  {
    if (this.isNew())
    {
      return "New: "+ this.getClassDisplayLabel();
    }
    else
    {
      return super.toString();
    }
  }
}
