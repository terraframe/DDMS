/*******************************************************************************
 * Copyright (C) 2018 IVCC
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 ******************************************************************************/
package dss.vector.solutions.generator;

@com.runwaysdk.business.ClassSignature(hash = -1903711450)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to MdWebIndicator.java
 *
 * @author Autogenerated by RunwaySDK
 */
public  class MdWebIndicatorQuery extends com.runwaysdk.system.metadata.MdWebAttributeQuery
 implements com.runwaysdk.generation.loader.Reloadable
{

  public MdWebIndicatorQuery(com.runwaysdk.query.QueryFactory componentQueryFactory)
  {
    super(componentQueryFactory);
    if (this.getComponentQuery() == null)
    {
      com.runwaysdk.business.BusinessQuery businessQuery = componentQueryFactory.businessQuery(this.getClassType());

       this.setBusinessQuery(businessQuery);
    }
  }

  public MdWebIndicatorQuery(com.runwaysdk.query.ValueQuery valueQuery)
  {
    super(valueQuery);
    if (this.getComponentQuery() == null)
    {
      com.runwaysdk.business.BusinessQuery businessQuery = new com.runwaysdk.business.BusinessQuery(valueQuery, this.getClassType());

       this.setBusinessQuery(businessQuery);
    }
  }

  public String getClassType()
  {
    return dss.vector.solutions.generator.MdWebIndicator.CLASS;
  }
  public com.runwaysdk.system.metadata.AggregationFunctionQuery.IndicatorAggregateFunctionQueryIF getDenominatorAggregation()
  {
    return getDenominatorAggregation(null);

  }
 
  public com.runwaysdk.system.metadata.AggregationFunctionQuery.IndicatorAggregateFunctionQueryIF getDenominatorAggregation(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(dss.vector.solutions.generator.MdWebIndicator.DENOMINATORAGGREGATION);

    return (com.runwaysdk.system.metadata.AggregationFunctionQuery.IndicatorAggregateFunctionQueryIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.generator.MdWebIndicator.DENOMINATORAGGREGATION, mdAttributeIF, this, alias, null);

  }
 
  public com.runwaysdk.system.metadata.AggregationFunctionQuery.IndicatorAggregateFunctionQueryIF getDenominatorAggregation(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(dss.vector.solutions.generator.MdWebIndicator.DENOMINATORAGGREGATION);

    return (com.runwaysdk.system.metadata.AggregationFunctionQuery.IndicatorAggregateFunctionQueryIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.generator.MdWebIndicator.DENOMINATORAGGREGATION, mdAttributeIF, this, alias, displayLabel);

  }
  public com.runwaysdk.system.metadata.MdWebAttributeQuery.MdWebAttributeQueryReferenceIF getDenominatorField()
  {
    return getDenominatorField(null);

  }
 
  public com.runwaysdk.system.metadata.MdWebAttributeQuery.MdWebAttributeQueryReferenceIF getDenominatorField(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(dss.vector.solutions.generator.MdWebIndicator.DENOMINATORFIELD);

    return (com.runwaysdk.system.metadata.MdWebAttributeQuery.MdWebAttributeQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.generator.MdWebIndicator.DENOMINATORFIELD, mdAttributeIF, this, alias, null);

  }
 
  public com.runwaysdk.system.metadata.MdWebAttributeQuery.MdWebAttributeQueryReferenceIF getDenominatorField(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(dss.vector.solutions.generator.MdWebIndicator.DENOMINATORFIELD);

    return (com.runwaysdk.system.metadata.MdWebAttributeQuery.MdWebAttributeQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.generator.MdWebIndicator.DENOMINATORFIELD, mdAttributeIF, this, alias, displayLabel);

  }
  public com.runwaysdk.system.metadata.AggregationFunctionQuery.IndicatorAggregateFunctionQueryIF getNumeratorAggregation()
  {
    return getNumeratorAggregation(null);

  }
 
  public com.runwaysdk.system.metadata.AggregationFunctionQuery.IndicatorAggregateFunctionQueryIF getNumeratorAggregation(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(dss.vector.solutions.generator.MdWebIndicator.NUMERATORAGGREGATION);

    return (com.runwaysdk.system.metadata.AggregationFunctionQuery.IndicatorAggregateFunctionQueryIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.generator.MdWebIndicator.NUMERATORAGGREGATION, mdAttributeIF, this, alias, null);

  }
 
  public com.runwaysdk.system.metadata.AggregationFunctionQuery.IndicatorAggregateFunctionQueryIF getNumeratorAggregation(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(dss.vector.solutions.generator.MdWebIndicator.NUMERATORAGGREGATION);

    return (com.runwaysdk.system.metadata.AggregationFunctionQuery.IndicatorAggregateFunctionQueryIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.generator.MdWebIndicator.NUMERATORAGGREGATION, mdAttributeIF, this, alias, displayLabel);

  }
  public com.runwaysdk.system.metadata.MdWebAttributeQuery.MdWebAttributeQueryReferenceIF getNumeratorField()
  {
    return getNumeratorField(null);

  }
 
  public com.runwaysdk.system.metadata.MdWebAttributeQuery.MdWebAttributeQueryReferenceIF getNumeratorField(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(dss.vector.solutions.generator.MdWebIndicator.NUMERATORFIELD);

    return (com.runwaysdk.system.metadata.MdWebAttributeQuery.MdWebAttributeQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.generator.MdWebIndicator.NUMERATORFIELD, mdAttributeIF, this, alias, null);

  }
 
  public com.runwaysdk.system.metadata.MdWebAttributeQuery.MdWebAttributeQueryReferenceIF getNumeratorField(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(dss.vector.solutions.generator.MdWebIndicator.NUMERATORFIELD);

    return (com.runwaysdk.system.metadata.MdWebAttributeQuery.MdWebAttributeQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.generator.MdWebIndicator.NUMERATORFIELD, mdAttributeIF, this, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableBoolean getPercentage()
  {
    return getPercentage(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getPercentage(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getComponentQuery().get(dss.vector.solutions.generator.MdWebIndicator.PERCENTAGE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getPercentage(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getComponentQuery().get(dss.vector.solutions.generator.MdWebIndicator.PERCENTAGE, alias, displayLabel);

  }
  protected com.runwaysdk.query.AttributeReference referenceFactory( com.runwaysdk.dataaccess.MdAttributeRefDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  com.runwaysdk.dataaccess.MdBusinessDAOIF referenceMdBusinessIF, String referenceTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String userDefinedAlias, String userDefinedDisplayLabel)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals(dss.vector.solutions.generator.MdWebIndicator.DENOMINATORFIELD)) 
    {
       return new com.runwaysdk.system.metadata.MdWebAttributeQuery.MdWebAttributeQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(dss.vector.solutions.generator.MdWebIndicator.NUMERATORFIELD)) 
    {
       return new com.runwaysdk.system.metadata.MdWebAttributeQuery.MdWebAttributeQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else 
    {
      return super.referenceFactory(mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
  }

  protected com.runwaysdk.query.AttributeEnumeration enumerationFactory( com.runwaysdk.dataaccess.MdAttributeEnumerationDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  String mdEnumerationTableName, com.runwaysdk.dataaccess.MdBusinessDAOIF masterListMdBusinessIF, String masterListTalbeAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String userDefinedAlias, String userDefinedDisplayLabel)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals(dss.vector.solutions.generator.MdWebIndicator.DENOMINATORAGGREGATION)) 
    {
       return new com.runwaysdk.system.metadata.AggregationFunctionQuery.IndicatorAggregateFunctionQuery((com.runwaysdk.dataaccess.MdAttributeEnumerationDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdEnumerationTableName, masterListMdBusinessIF, masterListTalbeAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(dss.vector.solutions.generator.MdWebIndicator.NUMERATORAGGREGATION)) 
    {
       return new com.runwaysdk.system.metadata.AggregationFunctionQuery.IndicatorAggregateFunctionQuery((com.runwaysdk.dataaccess.MdAttributeEnumerationDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdEnumerationTableName, masterListMdBusinessIF, masterListTalbeAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else 
    {
      return super.enumerationFactory(mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, mdEnumerationTableName, masterListMdBusinessIF, masterListTalbeAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
  }

  /**  
   * Returns an iterator of Business objects that match the query criteria specified
   * on this query object. 
   * @return iterator of Business objects that match the query criteria specified
   * on this query object.
   */
  public com.runwaysdk.query.OIterator<? extends MdWebIndicator> getIterator()
  {
    this.checkNotUsedInValueQuery();
    String sqlStmt;
    if (_limit != null && _skip != null)
    {
      sqlStmt = this.getComponentQuery().getSQL(_limit, _skip);
    }
    else
    {
      sqlStmt = this.getComponentQuery().getSQL();
    }
    java.util.Map<String, com.runwaysdk.query.ColumnInfo> columnInfoMap = this.getComponentQuery().getColumnInfoMap();

    java.sql.ResultSet results = com.runwaysdk.dataaccess.database.Database.query(sqlStmt);
    return new com.runwaysdk.business.BusinessIterator<MdWebIndicator>(this.getComponentQuery().getMdEntityIF(), columnInfoMap, results);
  }


/**
 * Interface that masks all type unsafe query methods and defines all type safe methods.
 * This type is used when a join is performed on this class as a reference.
 **/
  public interface MdWebIndicatorQueryReferenceIF extends com.runwaysdk.generation.loader.Reloadable, com.runwaysdk.system.metadata.MdWebAttributeQuery.MdWebAttributeQueryReferenceIF
  {

  public com.runwaysdk.system.metadata.AggregationFunctionQuery.IndicatorAggregateFunctionQueryIF getDenominatorAggregation();
  public com.runwaysdk.system.metadata.AggregationFunctionQuery.IndicatorAggregateFunctionQueryIF getDenominatorAggregation(String alias);
  public com.runwaysdk.system.metadata.AggregationFunctionQuery.IndicatorAggregateFunctionQueryIF getDenominatorAggregation(String alias, String displayLabel);
    public com.runwaysdk.system.metadata.MdWebAttributeQuery.MdWebAttributeQueryReferenceIF getDenominatorField();
    public com.runwaysdk.system.metadata.MdWebAttributeQuery.MdWebAttributeQueryReferenceIF getDenominatorField(String alias);
    public com.runwaysdk.system.metadata.MdWebAttributeQuery.MdWebAttributeQueryReferenceIF getDenominatorField(String alias, String displayLabel);
  public com.runwaysdk.system.metadata.AggregationFunctionQuery.IndicatorAggregateFunctionQueryIF getNumeratorAggregation();
  public com.runwaysdk.system.metadata.AggregationFunctionQuery.IndicatorAggregateFunctionQueryIF getNumeratorAggregation(String alias);
  public com.runwaysdk.system.metadata.AggregationFunctionQuery.IndicatorAggregateFunctionQueryIF getNumeratorAggregation(String alias, String displayLabel);
    public com.runwaysdk.system.metadata.MdWebAttributeQuery.MdWebAttributeQueryReferenceIF getNumeratorField();
    public com.runwaysdk.system.metadata.MdWebAttributeQuery.MdWebAttributeQueryReferenceIF getNumeratorField(String alias);
    public com.runwaysdk.system.metadata.MdWebAttributeQuery.MdWebAttributeQueryReferenceIF getNumeratorField(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableBoolean getPercentage();
    public com.runwaysdk.query.SelectableBoolean getPercentage(String alias);
    public com.runwaysdk.query.SelectableBoolean getPercentage(String alias, String displayLabel);

    public com.runwaysdk.query.BasicCondition EQ(dss.vector.solutions.generator.MdWebIndicator mdWebIndicator);

    public com.runwaysdk.query.BasicCondition NE(dss.vector.solutions.generator.MdWebIndicator mdWebIndicator);

  }

/**
 * Implements type safe query methods.
 * This type is used when a join is performed on this class as a reference.
 **/
  public static class MdWebIndicatorQueryReference extends com.runwaysdk.system.metadata.MdWebAttributeQuery.MdWebAttributeQueryReference
 implements MdWebIndicatorQueryReferenceIF
, com.runwaysdk.generation.loader.Reloadable
  {

  public MdWebIndicatorQueryReference(com.runwaysdk.dataaccess.MdAttributeRefDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias, com.runwaysdk.dataaccess.MdBusinessDAOIF referenceMdBusinessIF, String referenceTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String alias, String displayLabel)
  {
    super(mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, alias, displayLabel);

  }


    public com.runwaysdk.query.BasicCondition EQ(dss.vector.solutions.generator.MdWebIndicator mdWebIndicator)
    {
      if(mdWebIndicator == null) return this.EQ((java.lang.String)null);
      return this.EQ(mdWebIndicator.getId());
    }

    public com.runwaysdk.query.BasicCondition NE(dss.vector.solutions.generator.MdWebIndicator mdWebIndicator)
    {
      if(mdWebIndicator == null) return this.NE((java.lang.String)null);
      return this.NE(mdWebIndicator.getId());
    }

  public com.runwaysdk.system.metadata.AggregationFunctionQuery.IndicatorAggregateFunctionQueryIF getDenominatorAggregation()
  {
    return getDenominatorAggregation(null);

  }
 
  public com.runwaysdk.system.metadata.AggregationFunctionQuery.IndicatorAggregateFunctionQueryIF getDenominatorAggregation(String alias)
  {
    return (com.runwaysdk.system.metadata.AggregationFunctionQuery.IndicatorAggregateFunctionQueryIF)this.get(dss.vector.solutions.generator.MdWebIndicator.DENOMINATORAGGREGATION, alias, null);

  }
 
  public com.runwaysdk.system.metadata.AggregationFunctionQuery.IndicatorAggregateFunctionQueryIF getDenominatorAggregation(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.metadata.AggregationFunctionQuery.IndicatorAggregateFunctionQueryIF)this.get(dss.vector.solutions.generator.MdWebIndicator.DENOMINATORAGGREGATION, alias, displayLabel);

  }
  public com.runwaysdk.system.metadata.MdWebAttributeQuery.MdWebAttributeQueryReferenceIF getDenominatorField()
  {
    return getDenominatorField(null);

  }
 
  public com.runwaysdk.system.metadata.MdWebAttributeQuery.MdWebAttributeQueryReferenceIF getDenominatorField(String alias)
  {
    return (com.runwaysdk.system.metadata.MdWebAttributeQuery.MdWebAttributeQueryReferenceIF)this.get(dss.vector.solutions.generator.MdWebIndicator.DENOMINATORFIELD, alias, null);

  }
 
  public com.runwaysdk.system.metadata.MdWebAttributeQuery.MdWebAttributeQueryReferenceIF getDenominatorField(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.metadata.MdWebAttributeQuery.MdWebAttributeQueryReferenceIF)this.get(dss.vector.solutions.generator.MdWebIndicator.DENOMINATORFIELD,  alias, displayLabel);

  }
  public com.runwaysdk.system.metadata.AggregationFunctionQuery.IndicatorAggregateFunctionQueryIF getNumeratorAggregation()
  {
    return getNumeratorAggregation(null);

  }
 
  public com.runwaysdk.system.metadata.AggregationFunctionQuery.IndicatorAggregateFunctionQueryIF getNumeratorAggregation(String alias)
  {
    return (com.runwaysdk.system.metadata.AggregationFunctionQuery.IndicatorAggregateFunctionQueryIF)this.get(dss.vector.solutions.generator.MdWebIndicator.NUMERATORAGGREGATION, alias, null);

  }
 
  public com.runwaysdk.system.metadata.AggregationFunctionQuery.IndicatorAggregateFunctionQueryIF getNumeratorAggregation(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.metadata.AggregationFunctionQuery.IndicatorAggregateFunctionQueryIF)this.get(dss.vector.solutions.generator.MdWebIndicator.NUMERATORAGGREGATION, alias, displayLabel);

  }
  public com.runwaysdk.system.metadata.MdWebAttributeQuery.MdWebAttributeQueryReferenceIF getNumeratorField()
  {
    return getNumeratorField(null);

  }
 
  public com.runwaysdk.system.metadata.MdWebAttributeQuery.MdWebAttributeQueryReferenceIF getNumeratorField(String alias)
  {
    return (com.runwaysdk.system.metadata.MdWebAttributeQuery.MdWebAttributeQueryReferenceIF)this.get(dss.vector.solutions.generator.MdWebIndicator.NUMERATORFIELD, alias, null);

  }
 
  public com.runwaysdk.system.metadata.MdWebAttributeQuery.MdWebAttributeQueryReferenceIF getNumeratorField(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.metadata.MdWebAttributeQuery.MdWebAttributeQueryReferenceIF)this.get(dss.vector.solutions.generator.MdWebIndicator.NUMERATORFIELD,  alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableBoolean getPercentage()
  {
    return getPercentage(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getPercentage(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(dss.vector.solutions.generator.MdWebIndicator.PERCENTAGE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getPercentage(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(dss.vector.solutions.generator.MdWebIndicator.PERCENTAGE, alias, displayLabel);

  }
  protected com.runwaysdk.query.AttributeReference referenceFactory( com.runwaysdk.dataaccess.MdAttributeRefDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  com.runwaysdk.dataaccess.MdBusinessDAOIF referenceMdBusinessIF, String referenceTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String userDefinedAlias, String userDefinedDisplayLabel)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals(dss.vector.solutions.generator.MdWebIndicator.DENOMINATORFIELD)) 
    {
       return new com.runwaysdk.system.metadata.MdWebAttributeQuery.MdWebAttributeQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(dss.vector.solutions.generator.MdWebIndicator.NUMERATORFIELD)) 
    {
       return new com.runwaysdk.system.metadata.MdWebAttributeQuery.MdWebAttributeQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else 
    {
      return super.referenceFactory(mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
  }

  protected com.runwaysdk.query.AttributeEnumeration enumerationFactory( com.runwaysdk.dataaccess.MdAttributeEnumerationDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  String mdEnumerationTableName, com.runwaysdk.dataaccess.MdBusinessDAOIF masterListMdBusinessIF, String masterListTalbeAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String userDefinedAlias, String userDefinedDisplayLabel)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals(dss.vector.solutions.generator.MdWebIndicator.DENOMINATORAGGREGATION)) 
    {
       return new com.runwaysdk.system.metadata.AggregationFunctionQuery.IndicatorAggregateFunctionQuery((com.runwaysdk.dataaccess.MdAttributeEnumerationDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdEnumerationTableName, masterListMdBusinessIF, masterListTalbeAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(dss.vector.solutions.generator.MdWebIndicator.NUMERATORAGGREGATION)) 
    {
       return new com.runwaysdk.system.metadata.AggregationFunctionQuery.IndicatorAggregateFunctionQuery((com.runwaysdk.dataaccess.MdAttributeEnumerationDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdEnumerationTableName, masterListMdBusinessIF, masterListTalbeAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else 
    {
      return super.enumerationFactory(mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, mdEnumerationTableName, masterListMdBusinessIF, masterListTalbeAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
  }

  }

/**
 * Interface that masks all type unsafe query methods and defines all type safe methods.
 * This type is used when a join is performed on this class as a reference.
 **/
  public interface MdWebIndicatorQueryMultiReferenceIF extends com.runwaysdk.generation.loader.Reloadable, com.runwaysdk.system.metadata.MdWebAttributeQuery.MdWebAttributeQueryMultiReferenceIF
  {

  public com.runwaysdk.system.metadata.AggregationFunctionQuery.IndicatorAggregateFunctionQueryIF getDenominatorAggregation();
  public com.runwaysdk.system.metadata.AggregationFunctionQuery.IndicatorAggregateFunctionQueryIF getDenominatorAggregation(String alias);
  public com.runwaysdk.system.metadata.AggregationFunctionQuery.IndicatorAggregateFunctionQueryIF getDenominatorAggregation(String alias, String displayLabel);
    public com.runwaysdk.system.metadata.MdWebAttributeQuery.MdWebAttributeQueryReferenceIF getDenominatorField();
    public com.runwaysdk.system.metadata.MdWebAttributeQuery.MdWebAttributeQueryReferenceIF getDenominatorField(String alias);
    public com.runwaysdk.system.metadata.MdWebAttributeQuery.MdWebAttributeQueryReferenceIF getDenominatorField(String alias, String displayLabel);
  public com.runwaysdk.system.metadata.AggregationFunctionQuery.IndicatorAggregateFunctionQueryIF getNumeratorAggregation();
  public com.runwaysdk.system.metadata.AggregationFunctionQuery.IndicatorAggregateFunctionQueryIF getNumeratorAggregation(String alias);
  public com.runwaysdk.system.metadata.AggregationFunctionQuery.IndicatorAggregateFunctionQueryIF getNumeratorAggregation(String alias, String displayLabel);
    public com.runwaysdk.system.metadata.MdWebAttributeQuery.MdWebAttributeQueryReferenceIF getNumeratorField();
    public com.runwaysdk.system.metadata.MdWebAttributeQuery.MdWebAttributeQueryReferenceIF getNumeratorField(String alias);
    public com.runwaysdk.system.metadata.MdWebAttributeQuery.MdWebAttributeQueryReferenceIF getNumeratorField(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableBoolean getPercentage();
    public com.runwaysdk.query.SelectableBoolean getPercentage(String alias);
    public com.runwaysdk.query.SelectableBoolean getPercentage(String alias, String displayLabel);

    public com.runwaysdk.query.Condition containsAny(dss.vector.solutions.generator.MdWebIndicator ... mdWebIndicator);
    public com.runwaysdk.query.Condition notContainsAny(dss.vector.solutions.generator.MdWebIndicator ... mdWebIndicator);
    public com.runwaysdk.query.Condition containsAll(dss.vector.solutions.generator.MdWebIndicator ... mdWebIndicator);
    public com.runwaysdk.query.Condition notContainsAll(dss.vector.solutions.generator.MdWebIndicator ... mdWebIndicator);
    public com.runwaysdk.query.Condition containsExactly(dss.vector.solutions.generator.MdWebIndicator ... mdWebIndicator);
  }

/**
 * Implements type safe query methods.
 * This type is used when a join is performed on this class as a reference.
 **/
  public static class MdWebIndicatorQueryMultiReference extends com.runwaysdk.system.metadata.MdWebAttributeQuery.MdWebAttributeQueryMultiReference
 implements MdWebIndicatorQueryMultiReferenceIF
, com.runwaysdk.generation.loader.Reloadable
  {

  public MdWebIndicatorQueryMultiReference(com.runwaysdk.dataaccess.MdAttributeMultiReferenceDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias, String mdMultiReferenceTableName, com.runwaysdk.dataaccess.MdBusinessDAOIF referenceMdBusinessIF, String referenceTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String alias, String displayLabel)
  {
    super(mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, mdMultiReferenceTableName, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, alias, displayLabel);

  }



    public com.runwaysdk.query.Condition containsAny(dss.vector.solutions.generator.MdWebIndicator ... mdWebIndicator)  {

      String[] itemIdArray = new String[mdWebIndicator.length]; 

      for (int i=0; i<mdWebIndicator.length; i++)
      {
        itemIdArray[i] = mdWebIndicator[i].getId();
      }

      return this.containsAny(itemIdArray);
  }

    public com.runwaysdk.query.Condition notContainsAny(dss.vector.solutions.generator.MdWebIndicator ... mdWebIndicator)  {

      String[] itemIdArray = new String[mdWebIndicator.length]; 

      for (int i=0; i<mdWebIndicator.length; i++)
      {
        itemIdArray[i] = mdWebIndicator[i].getId();
      }

      return this.notContainsAny(itemIdArray);
  }

    public com.runwaysdk.query.Condition containsAll(dss.vector.solutions.generator.MdWebIndicator ... mdWebIndicator)  {

      String[] itemIdArray = new String[mdWebIndicator.length]; 

      for (int i=0; i<mdWebIndicator.length; i++)
      {
        itemIdArray[i] = mdWebIndicator[i].getId();
      }

      return this.containsAll(itemIdArray);
  }

    public com.runwaysdk.query.Condition notContainsAll(dss.vector.solutions.generator.MdWebIndicator ... mdWebIndicator)  {

      String[] itemIdArray = new String[mdWebIndicator.length]; 

      for (int i=0; i<mdWebIndicator.length; i++)
      {
        itemIdArray[i] = mdWebIndicator[i].getId();
      }

      return this.notContainsAll(itemIdArray);
  }

    public com.runwaysdk.query.Condition containsExactly(dss.vector.solutions.generator.MdWebIndicator ... mdWebIndicator)  {

      String[] itemIdArray = new String[mdWebIndicator.length]; 

      for (int i=0; i<mdWebIndicator.length; i++)
      {
        itemIdArray[i] = mdWebIndicator[i].getId();
      }

      return this.containsExactly(itemIdArray);
  }
  public com.runwaysdk.system.metadata.AggregationFunctionQuery.IndicatorAggregateFunctionQueryIF getDenominatorAggregation()
  {
    return getDenominatorAggregation(null);

  }
 
  public com.runwaysdk.system.metadata.AggregationFunctionQuery.IndicatorAggregateFunctionQueryIF getDenominatorAggregation(String alias)
  {
    return (com.runwaysdk.system.metadata.AggregationFunctionQuery.IndicatorAggregateFunctionQueryIF)this.get(dss.vector.solutions.generator.MdWebIndicator.DENOMINATORAGGREGATION, alias, null);

  }
 
  public com.runwaysdk.system.metadata.AggregationFunctionQuery.IndicatorAggregateFunctionQueryIF getDenominatorAggregation(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.metadata.AggregationFunctionQuery.IndicatorAggregateFunctionQueryIF)this.get(dss.vector.solutions.generator.MdWebIndicator.DENOMINATORAGGREGATION, alias, displayLabel);

  }
  public com.runwaysdk.system.metadata.MdWebAttributeQuery.MdWebAttributeQueryReferenceIF getDenominatorField()
  {
    return getDenominatorField(null);

  }
 
  public com.runwaysdk.system.metadata.MdWebAttributeQuery.MdWebAttributeQueryReferenceIF getDenominatorField(String alias)
  {
    return (com.runwaysdk.system.metadata.MdWebAttributeQuery.MdWebAttributeQueryReferenceIF)this.get(dss.vector.solutions.generator.MdWebIndicator.DENOMINATORFIELD, alias, null);

  }
 
  public com.runwaysdk.system.metadata.MdWebAttributeQuery.MdWebAttributeQueryReferenceIF getDenominatorField(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.metadata.MdWebAttributeQuery.MdWebAttributeQueryReferenceIF)this.get(dss.vector.solutions.generator.MdWebIndicator.DENOMINATORFIELD,  alias, displayLabel);

  }
  public com.runwaysdk.system.metadata.AggregationFunctionQuery.IndicatorAggregateFunctionQueryIF getNumeratorAggregation()
  {
    return getNumeratorAggregation(null);

  }
 
  public com.runwaysdk.system.metadata.AggregationFunctionQuery.IndicatorAggregateFunctionQueryIF getNumeratorAggregation(String alias)
  {
    return (com.runwaysdk.system.metadata.AggregationFunctionQuery.IndicatorAggregateFunctionQueryIF)this.get(dss.vector.solutions.generator.MdWebIndicator.NUMERATORAGGREGATION, alias, null);

  }
 
  public com.runwaysdk.system.metadata.AggregationFunctionQuery.IndicatorAggregateFunctionQueryIF getNumeratorAggregation(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.metadata.AggregationFunctionQuery.IndicatorAggregateFunctionQueryIF)this.get(dss.vector.solutions.generator.MdWebIndicator.NUMERATORAGGREGATION, alias, displayLabel);

  }
  public com.runwaysdk.system.metadata.MdWebAttributeQuery.MdWebAttributeQueryReferenceIF getNumeratorField()
  {
    return getNumeratorField(null);

  }
 
  public com.runwaysdk.system.metadata.MdWebAttributeQuery.MdWebAttributeQueryReferenceIF getNumeratorField(String alias)
  {
    return (com.runwaysdk.system.metadata.MdWebAttributeQuery.MdWebAttributeQueryReferenceIF)this.get(dss.vector.solutions.generator.MdWebIndicator.NUMERATORFIELD, alias, null);

  }
 
  public com.runwaysdk.system.metadata.MdWebAttributeQuery.MdWebAttributeQueryReferenceIF getNumeratorField(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.metadata.MdWebAttributeQuery.MdWebAttributeQueryReferenceIF)this.get(dss.vector.solutions.generator.MdWebIndicator.NUMERATORFIELD,  alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableBoolean getPercentage()
  {
    return getPercentage(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getPercentage(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(dss.vector.solutions.generator.MdWebIndicator.PERCENTAGE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getPercentage(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.get(dss.vector.solutions.generator.MdWebIndicator.PERCENTAGE, alias, displayLabel);

  }
  protected com.runwaysdk.query.AttributeReference referenceFactory( com.runwaysdk.dataaccess.MdAttributeRefDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  com.runwaysdk.dataaccess.MdBusinessDAOIF referenceMdBusinessIF, String referenceTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String userDefinedAlias, String userDefinedDisplayLabel)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals(dss.vector.solutions.generator.MdWebIndicator.DENOMINATORFIELD)) 
    {
       return new com.runwaysdk.system.metadata.MdWebAttributeQuery.MdWebAttributeQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(dss.vector.solutions.generator.MdWebIndicator.NUMERATORFIELD)) 
    {
       return new com.runwaysdk.system.metadata.MdWebAttributeQuery.MdWebAttributeQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else 
    {
      return super.referenceFactory(mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
  }

  protected com.runwaysdk.query.AttributeEnumeration enumerationFactory( com.runwaysdk.dataaccess.MdAttributeEnumerationDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  String mdEnumerationTableName, com.runwaysdk.dataaccess.MdBusinessDAOIF masterListMdBusinessIF, String masterListTalbeAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String userDefinedAlias, String userDefinedDisplayLabel)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals(dss.vector.solutions.generator.MdWebIndicator.DENOMINATORAGGREGATION)) 
    {
       return new com.runwaysdk.system.metadata.AggregationFunctionQuery.IndicatorAggregateFunctionQuery((com.runwaysdk.dataaccess.MdAttributeEnumerationDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdEnumerationTableName, masterListMdBusinessIF, masterListTalbeAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(dss.vector.solutions.generator.MdWebIndicator.NUMERATORAGGREGATION)) 
    {
       return new com.runwaysdk.system.metadata.AggregationFunctionQuery.IndicatorAggregateFunctionQuery((com.runwaysdk.dataaccess.MdAttributeEnumerationDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdEnumerationTableName, masterListMdBusinessIF, masterListTalbeAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else 
    {
      return super.enumerationFactory(mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, mdEnumerationTableName, masterListMdBusinessIF, masterListTalbeAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
  }

  }
}
