
	<!--		
		SET THESE THINGS IN GEOSERVER
		<parameter value = "mdss_zambia" name = "user" />
    <parameter value = "mdss_zambia" name = "passwd" />
    <parameter value = "mdss_zambia" name = "database" />
    
    
    # Database dump executable
dataDumpExecutable=pg_dump
# Database import executable
dataImportExecutable=pg_restore
    
        export_credentials_singleton
    export_tomcat_classloader
   <target name="import_geodata" />
   		<target name="compile_generated"/>
	-->

<project name="MDSS" default="build" basedir=".">
	<taskdef resource="org/tigris/subversion/svnant/svnantlib.xml" classpath="lib/ant/svnant.jar;lib/ant/svnClientAdapter.jar;lib/ant/svnkit.jar;lib/ant/svnjavahl.jar;lib/ant/ganymed.jar;" />
	
	<property name="country" value="blank" />
	<property name="geodata.db" value="mrc_${country}" />
	<property name="deploy.db" value="mdssdeploy" />
	<property name="develop.db" value="mdssdevelop" />
	<property name="nsis.dir" location="C:/Program Files/NSIS" />
	<property name="postgres.bin" location="C:/Program Files/PostgreSQL/8.4/bin"/>
	<property name="profile.root" location="profiles" />
	<property name="stage.dir" location="C:/stage" />
	<property name="artifacts.path" location="C:/stage/tomcat6" />
  <property name="stage.classes" location = "${artifacts.path}/webapps/MDSS/WEB-INF/classes"/>


	<property name="root.user" value="postgres" />
	<property name="root.pass" value="postgres" />
	<property name="root.db" value="template_postgis" />
	<property name="max_memory_use" value="1024m" />

	<property name="domain" value="mdss.ivcc.com" /> 
	<property name="local.root" location="." />
	<property name="deploy.root" location="C:/stage/tomcat6" />
	
	<target name="build">
		
		
			<!--<antcall target="write_revision" /> 		-->
		
		<delete includeemptydirs="true">
      <fileset dir="bin" includes="**/*"/>
    </delete>

		
    <delete dir="${artifacts.path}/webapps/MDSS/classes/com" />
    <delete dir="${artifacts.path}/webapps/MDSS/classes/dss" />

		<delete dir="src/test" />		

		<propertyfile file="${profile.root}/default/common/terraframe.properties">
			<entry key="local.root" value="${local.root}" />
			<entry key="deploy.root" value="${deploy.root}" />
			<entry key="domain" value="${domain}" />
		</propertyfile>
		
		<propertyfile file="${profile.root}/default/server/server.properties">
			<entry key="logTransactions" value="false" />
		</propertyfile>
		
		
	 <replaceregexp flags="g" byline="true" 
			file="${profile.root}/default/common/terraframe.properties"
			match='\\\\' 
			replace="/" />
			
	 <replaceregexp flags="g" byline="true"
			file="${profile.root}/default/common/terraframe.properties"
			match='\\\:' 
			replace=":" />

	  <antcall target="remove_generated_universals" />
		<antcall target="copy_country_schema" />
			  
		<ant inheritall="false" antfile="deploy.xml" dir="scripts/ant/deploy">
			<property name="root.user" value="${root.user}" />
			<property name="root.pass" value="${root.pass}" />
			<property name="root.db" value="${root.db}" />
			<property name="geodata.db" value="${geodata.db}" />
			<property name="profile.root" value="${profile.root}" />
			
		  <target name="rebuild_db" />
			<target name="rebuild_model" />
			<target name="deploy" />
			<target name="import_ontology" />
			<target name="import_ontology_roots" />
			<target name="build_all_paths_ontology" />						
			<target name="build_all_paths_geodata" />
			<target name="create_universal_queries"/>
			
		</ant>
		
	  
	  <antcall target="set_Vital_properties" />
		
		<antcall target="dump_db" />
		
		<antcall target="build_installer_exe" />

		
	</target>

  <target name="set_vital_properties" depends="">
  	<delete dir="${artifacts.path}/webapps/MDSS/WEB-INF/logs" />
		<mkdir dir="${artifacts.path}/webapps/MDSS/WEB-INF/logs"/>
		
	  <touch file="${artifacts.path}/webapps/MDSS/WEB-INF/logs/seriousErrorLog.txt"/>
		<touch file="${artifacts.path}/webapps/MDSS/WEB-INF/logs/errorLog.txt"/>
		
		<propertyfile file="${stage.classes}/database.properties">
			<entry key="user" value="${deploy.db}" />
			<entry key="password" value="${deploy.db}" />
			<entry key="databaseName" value="${deploy.db}" />
			<entry key="port" value="5444" />
			<entry key="db.connection.initial" value="10" />
			<entry key="db.connection.max" value="15" />
			<entry key="databaseBinDirectory" value="C:/MDSS/PostgreSQL/8.4/bin/" />
			<entry key="dataDumpExecutable" value="pg_dump" />
			<entry key="dataImportExecutable" value="pg_restore" />
			
		</propertyfile>
		<replaceregexp flags="g" byline="true" 
			file="${stage.classes}/database.properties"
			match='\\\\' 
			replace="/" />
	 <replaceregexp flags="g" byline="true"
			file="${stage.classes}/database.properties"
			match='\\\:' 
			replace=":" />
		
		<replaceregexp byline="true" 
			file="${stage.classes}/terraframe.properties"
			match='^local.root=.*$' 
			replace="local.root=C:/MDSS/tomcat6/" />
			
		<replaceregexp byline="true" 
			file="${stage.classes}/terraframe.properties"
			match='^deploy.root=.*$' 
			replace="deploy.root=C:/MDSS/tomcat6/" />
		
		<propertyfile
			file="${stage.classes}/jawr.properties">
			<entry key="jawr.debug.on" value="false" />
		</propertyfile>
		
		<propertyfile file="${stage.classes}/MDSS.properties">
			<entry key="Country" value="MDSS" />
		</propertyfile>
	
	  <propertyfile file="${stage.classes}/server.properties">
			<entry key="logTransactions" value="true" />
			<entry key="compileTimeWeaving" value="true" />
		</propertyfile>
		
	  <propertyfile file="${stage.classes}/install.properties">
			<entry key="master" value="false" />
		</propertyfile>
		
	  <propertyfile file="${stage.classes}/local.properties">
			<entry key="environment" value="deploy" />
			<entry key="web.dir" value="${deploy.path}/webDir/" />
		</propertyfile>
  
  	  <propertyfile file="${stage.classes}/local.properties">
			<entry key="environment" value="deploy" />
			<entry key="web.dir" value="${deploy.path}/webDir/" />
		</propertyfile>
  
  
    <propertyfile file="${stage.classes}/MdssControlPanel.properties">
			<entry key="command.start" value="cmd /c C:/MDSS/tomcat6/bin/startup.bat" />
			<entry key="command.stop" value="cmd /c C:/MDSS/tomcat6/bin/shutdown.bat" />
		</propertyfile>
  
  </target>



	<target name="dump_db" depends="">
		
		<echo message="dumping the develop db to a sql file " />
		<exec executable="${postgres.bin}/pg_dump" dir="." failonerror="true"
			searchpath="true" logError="true">
			<arg line="--blobs -h 127.0.0.1 -U ${root.user} ${develop.db}" />
			<redirector output="MDSS.backup">
				<outputfilterchain>
					<!--make sql dump stop on errors -->
					<concatfilter prepend="scripts/ant/deploy/drop_deploy.sql" />
					<!--change 'mdssdevelop' to 'mdssdeploy' -->
					<tokenfilter>
						<replacestring from="${develop.db}" to="${deploy.db}" />
					</tokenfilter>
				</outputfilterchain>
			</redirector>
		</exec>
		
		<copy file="MDSS.backup" todir="${stage.dir}" overwrite="true"/>
		<delete file="MDSS.backup"/>
		
  </target>


	<target name="build_installer_exe">
	<copy file="../installer-windows/Installer.nsi" todir="${stage.dir}/" overwrite="true"/>
		<exec executable="${nsis.dir}/makensis" dir="${stage.dir}" failonerror="true"
			searchpath="true" logError="true">
			<arg line="Installer.nsi" />
			</exec>
		<copy file="${stage.dir}/InstallMDSS.exe" todir="../installer-windows/" overwrite="true"/>
    <delete file="${stage.dir}/InstallMDSS.exe"/>
    <delete file="${stage.dir}/Installer.nsi"/>
	</target>

	
	<target name="remove_generated_universals" depends="" description="Remove all java files for selected (old) generated universals">
		<patternset id="generated.artifacts">
			<include name="**/*" />
			<exclude name="Earth*" />
			<exclude name="GeoEntity*" />
			<exclude name=".svn*" />
		</patternset>

		<delete failonerror="false">
			<fileset dir="generated/client/stub/dss/vector/solutions/geo/generated/">
				<patternset refid="generated.artifacts" />
			</fileset>
		</delete>

		<delete failonerror="false">
			<fileset dir="generated/client/base/dss/vector/solutions/geo/generated/">
				<patternset refid="generated.artifacts" />
			</fileset>
		</delete>

		<delete failonerror="false">
			<fileset dir="generated/server/stub/dss/vector/solutions/geo/generated/">
				<patternset refid="generated.artifacts" />
			</fileset>
		</delete>

		<delete failonerror="false">
			<fileset dir="generated/server/base/dss/vector/solutions/geo/generated/">
				<patternset refid="generated.artifacts" />
			</fileset>
		</delete>

		<delete includeemptydirs="true" failonerror="false">
			<fileset dir="webapp/WEB-INF/dss/vector/solutions/geo/generated" defaultexcludes="false">
				<patternset refid="generated.artifacts" />
			</fileset>
		</delete>

	</target>

	<target name="copy_country_schema" depends="" description="Copy the appropriate country schema file">
		<echo message="Switching to country: ${geodata.db}" />
		<copy file="doc/country/${geodata.db}-schema(0001238646707001).xml" tofile="doc/individual/schema(0001238646707001).xml" overwrite="true" />
		<copy file="webapp/imgs/flags/${geodata.db}.gif" tofile="webapp/imgs/flags/current" overwrite="true" />
	</target>
	
	
	<target name="svn_update"  description="Writes the current svn revision info to an html file">
			<svn>
				<update target="." verbose="true" />
			</svn>
    </target>
	

	<target name="write_revision"  description="Writes the current svn revision info to an html file">
		<svn>
			<info target="local.root" verbose="true" />
		</svn>
		<echo file="webapp/revision.html" append="false">
		Last Changed Revision: ${svn.info.lastRev}
		Last Changed Date: ${svn.info.lastDate}
	    </echo>
		<echo message="Last Changed Revision: ${svn.info.lastRev}">
		</echo>
	</target>
	
</project>
