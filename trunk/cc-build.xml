
	<!--
		Delegating build script, used by cruisecontrol to build MY_PROJECT_1.
		Note that the basedir is set to the checked out project
		
		
		<parameter value = "mdss_zambia" name = "user" />
        <parameter value = "mdss_zambia" name = "passwd" />
        <parameter value = "mdss_zambia" name = "database" />
	-->

<project name="MDSS" default="build" basedir=".">
	<taskdef resource="org/tigris/subversion/svnant/svnantlib.xml" classpath="lib/ant/svnant.jar;lib/ant/svnClientAdapter.jar;lib/ant/svnkit.jar;lib/ant/svnjavahl.jar;lib/ant/ganymed.jar;" />
	
	<property name="country" value="blank" />
	<property name="geodata.db" value="mrc_${country}" />
	<property name="deploy.db" value="mdssdeploy" />
	<property name="develop.db" value="mdssdevelop" />
	<property name="nullsoft.dir" location="C:/Program Files/NSIS" />
	<property name="postgres.bin" location="C:/Program Files/PostgreSQL/8.4/bin"/>
	<property name="profile.root" location="profiles" />

	<property name="artifacts.path" location="C:/stage/tomcat6" />

	<property name="root.user" value="postgres" />
	<property name="root.pass" value="postgres" />
	<property name="root.db" value="template_postgis" />
	<property name="max_memory_use" value="1024m" />

	<property name="domain" value="dss.vector.solutions" />
	<property name="local.root" location="." />
	<property name="deploy.root" location="C:/stage/tomcat6" />
	
	<target name="build">
		<!-- Get the latest from CVS 
        <cvs command="up -d -P"/> ''
        <property name="postgres.bin" location="C:/Program Files/PostgreSQL/8.4/bin" />
        <echo message="Please set your ant memory like so: export ANT_OPTS='-Xmx1024m -XX:MaxPermSize=128M'" />
         -->
		<!--Call the target that does everything
		
		
<delete dir="${artifacts.path}/webapps/MDSS" />
		<mkdir dir="${artifacts.path}/webapps/MDSS/WEB-INF/logs"/>
		-->		
		
		
		

		
		<propertyfile file="${profile.root}/default/common/terraframe.properties">
			<entry key="local.root" value="${local.root}" />
			<entry key="deploy.root" value="${deploy.root}" />
			<entry key="domain" value="${domain}" />
		</propertyfile>
		
	<replaceregexp flags="g" byline="true" 
			file="${profile.root}/default/common/terraframe.properties"
			match='\\\\' 
			replace="/" />
			
	<replaceregexp flags="g" byline="true"
			file="${profile.root}/default/common/terraframe.properties"
			match='\\\:' 
			replace=":" />
	
		
		<!--
		<antcall target="remove_generated_universals" />
		<antcall target="copy_country_schema" />
		<antcall target="write_revision" />
    <fail />
       <property name="environment" value ="deploy"/>
		TODO: clean all bin dirs
		buildControllPannelJar
    delete test dir if building for cd
    export_credentials_singleton
    export_tomcat_classloader
   <target name="import_geodata" />
			  

		
		
		<ant inheritall="false" antfile="deploy.xml" dir="scripts/ant/deploy">
			<property name="root.user" value="${root.user}" />
			<property name="root.pass" value="${root.pass}" />
			<property name="root.db" value="${root.db}" />
			<property name="geodata.db" value="${geodata.db}" />
			<property name="profile.root" value="${profile.root}" />
			
		  <target name="rebuild_db" />
			<target name="rebuild_model" />
			<target name="deploy" />
			<target name="import_ontology" />
			<target name="import_ontology_roots" />
			<target name="build_all_paths_ontology" />					
			<target name="import_ontology" />
			<target name="import_ontology_roots" />
			<target name="build_all_paths_ontology" />	
			<target name="build_all_paths_geodata" />
			<target name="create_universal_queries"/>
		</ant>
		-->
		<antcall target="copy_dev_to_deploy" />

		<!--<delete dir="${installer.path}" />
		<mkdir dir="${installer.path}" />
	        <property name="installer.path" location="C:/stage/tomcat6/" />
	        <property name="installer.deploy_root" value="C:/stage/tomcat6/" />
		<copy todir="${installer.path}">
			<fileset dir="${artifacts.path}">
				<include name="**/*" />
			</fileset>
		</copy>-->

		<copy file="dump.sql" tofile="${artifacts.path}/MDSS.backup" />
		<delete file="./dump.sql" />
		
		
		
		<touch file="${artifacts.path}/webapps/MDSS/WEB-INF/logs/seriousErrorLog.txt"/>
		<touch file="${artifacts.path}/webapps/MDSS/WEB-INF/logs/errorLog.txt"/>
		
		<!--
		<propertyfile file="${installer.path}/webapps/MDSS/WEB-INF/classes/database.properties">
			<entry key="user" value="${deploy.db}" />
			<entry key="password" value="${deploy.db}" />
			<entry key="databaseName" value="${deploy.db}" />
		</propertyfile>
		
		
		<replaceregexp byline="true" 
			file="${installer.path}/webapps/MDSS/WEB-INF/classes/terraframe.properties"
			match='^local.root=.*$' 
			replace="local.root=${installer.deploy_root}" />
			
		<replaceregexp byline="true" 
			file="${installer.path}/webapps/MDSS/WEB-INF/classes/terraframe.properties"
			match='^deploy.root=.*$' 
			replace="deploy.root=${installer.deploy_root}" />
		
		<propertyfile
			file="${installer.path}/webapps/MDSS/WEB-INF/classes/jawr.properties">
			<entry key="jawr.debug.on" value="false" />
		</propertyfile>
		
		<propertyfile file="${installer.path}/webapps/MDSS/WEB-INF/classes/MDSS.properties">
			<entry key="Country" value="${country_uppercase}" />
		</propertyfile>
		-->
	</target>

	<target name="copy_dev_to_deploy" depends=""
		description="Rebuild Develop from scratch and then copy everything to deploy.">
		<echo message="dumping the develop db to a sql file " />
		<exec executable="${postgres.bin}/pg_dump" dir="." failonerror="true"
			searchpath="true" logError="true">
			<arg line="--blobs -h 127.0.0.1 -U ${root.user} ${develop.db}" />
			<redirector output="dump.sql">
				<outputfilterchain>
					<!--make sql dump stop on errors -->
					<concatfilter prepend="scripts/ant/deploy/drop_deploy.sql" />
					<!--change 'mdssdevelop' to 'mdssdeploy' -->
					<tokenfilter>
						<replacestring from="${develop.db}" to="${deploy.db}" />
					</tokenfilter>
				</outputfilterchain>
			</redirector>
		</exec>


		
		<!--
		<echo message="drop and recreate the deploy db" />
		<exec executable="${postgres.bin}/psql" dir="./" failonerror="true"
			searchpath="true" logError="true"
			inputstring="DROP DATABASE ${deploy.db};
			  CREATE DATABASE ${deploy.db} WITH ENCODING='UTF8' TEMPLATE=template0 OWNER=${deploy.db};">
			<arg line="-h 127.0.0.1 -U ${root.user} -d postgres" />
		</exec>

		<echo message="import the sql dump into the develop db" />
		<exec executable="${postgres.bin}/psql" dir="./" input="dump.sql"
			failonerror="true" searchpath="true" logError="true">
			<arg line="-h 127.0.0.1 -U ${root.user} -d ${deploy.db}" />
		</exec>
		<delete file="./dump.sql" />-->
	</target>
	
	

	<target name="start_tomcat" unless="dont_kill_tomcat">
		<shellscript shell="bash" dir="${deploy.root}/bin" os="Mac OS X,Linux" searchpath="true">
	    ./startup.sh
	</shellscript>
		<shellscript shell="cmd" dir="." os="Windows" searchpath="true">
		net start tomcat6
    </shellscript>
		<sleep seconds="10" />
	</target>

	
	<target name="remove_generated_universals" depends="" description="Remove all java files for selected (old) generated universals">
		<patternset id="generated.artifacts">
			<include name="**/*" />
			<exclude name="Earth*" />
			<exclude name="GeoEntity*" />
			<exclude name=".svn*" />
		</patternset>

		<delete failonerror="false">
			<fileset dir="generated/client/stub/dss/vector/solutions/geo/generated/">
				<patternset refid="generated.artifacts" />
			</fileset>
		</delete>

		<delete failonerror="false">
			<fileset dir="generated/client/base/dss/vector/solutions/geo/generated/">
				<patternset refid="generated.artifacts" />
			</fileset>
		</delete>

		<delete failonerror="false">
			<fileset dir="generated/server/stub/dss/vector/solutions/geo/generated/">
				<patternset refid="generated.artifacts" />
			</fileset>
		</delete>

		<delete failonerror="false">
			<fileset dir="generated/server/base/dss/vector/solutions/geo/generated/">
				<patternset refid="generated.artifacts" />
			</fileset>
		</delete>

		<delete includeemptydirs="true" failonerror="false">
			<fileset dir="webapp/WEB-INF/dss/vector/solutions/geo/generated" defaultexcludes="false">
				<patternset refid="generated.artifacts" />
			</fileset>
		</delete>

	</target>

	<target name="copy_country_schema" depends="" description="Copy the appropriate country schema file">
		<echo message="Switching to country: ${geodata.db}" />
		<copy file="doc/country/${geodata.db}-schema(0001238646707001).xml" tofile="doc/individual/schema(0001238646707001).xml" overwrite="true" />
		<copy file="webapp/imgs/flags/${geodata.db}.gif" tofile="webapp/imgs/flags/current" overwrite="true" />
	</target>
	
	
	<target name="svn_update"  description="Writes the current svn revision info to an html file">
			<svn>
				<update target="." verbose="true" />
			</svn>
    </target>
	

	<target name="write_revision"  description="Writes the current svn revision info to an html file">
		<svn>
			<info target="." verbose="true" />
		</svn>
		<echo file="webapp/revision.html" append="false">
		Last Changed Author: ${svn.info.author}
		Last Changed Revision: ${svn.info.lastRev}
		Last Changed Date: ${svn.info.lastDate}
	    </echo>
		<echo message="Last Changed Revision: ${svn.info.lastRev}">
		</echo>
	</target>
	
</project>
