	<project name="MDSS" default="fast_build">
	<taskdef resource="net/sf/antcontrib/antcontrib.properties" classpath="../../../lib/ant/ant-contrib-1.0b3.jar" />
	<taskdef resource="org/tigris/subversion/svnant/svnantlib.xml" classpath="../../../lib/ant/svnant.jar;../../../lib/ant/svnClientAdapter.jar;../../../lib/ant/svnkit.jar;../../../lib/ant/svnjavahl.jar;../../../lib/ant/ganymed.jar;" />

	<!-- =================================================================== -->
	<!-- These are defualt properties.                                       -->
	<!-- You can overide them in your external tools configueration.         -->
	<!-- Example: -Droot.user=postgres                                       -->
	<!-- =================================================================== -->

	<property file="../../../profiles/default/common/terraframe.properties" />

	<property name="root.user" value="postgres" />
	<property name="root.pass" value="postgres" />
	<property name="root.db" value="template_postgis" />
	<property name="max_memory_use" value="1024m" />

	<property name="deploy.path" location="${deploy.root}/webapps/MDSS/" />

	<property name="postgres.bin" location="/usr/bin/" />
	<property name="testserver.address" value="66.116.103.235" />
	<property name="testserver.username" value="administrator" />

	<property name="deploy.db" value="mdssdeploy" />
	<property name="develop.db" value="mdssdevelop" />
	<property name="geodata.db" value="mrc_blank" />

	<!--<property name="write_rev" value="false" />-->

	<!-- =================================================================== -->
	<!--         CAUTION: THIS WILL OVERWRITE EXISTING DATABASES             -->
	<!-- This the main task to run if you want to completely rebuild mdss.   -->
	<!-- =================================================================== -->
	<!-- PRECONDITIONS:                                                      -->
	<!-- you must set the auth method for 127.0.0.1/32 to "trust" in pg_hba.conf -->
	<!-- so that posgres does not require a password from localhost  -->
	<!-- Also check that "postgres.bin" is set to the location of psql and pg_dump -->
	<!-- =================================================================== -->
	<target name="fast_build" depends="alert_status,kill_tomcat,remove_generated_universals,copy_country_schema,develop_rebuild_import" description="Rebuild Develop from scratch and then copy everything to deploy.">
		<echo message="Build part 1 complete, please refresh and clean" />
	</target>
		
	<target name="fast_build_2" depends="alert_status,deploy_all,import_ontology,import_ontology_roots,develop_build_all_paths_ontology,import_geodata,develop_build_all_paths_geodata,develop_create_univeral_queries,copy_dev_to_deploy" description="Rebuild Develop from scratch and then copy everything to deploy.">
		<echo message="The build is complete, please start tomcat" />
	</target>


	<!-- Rebuild Deploy -->
	<target name="deploy_rebuild_all" depends="deploy_cleanup_files_rebuild_db, deploy_all_files, deploy_incremental_schema_update, import_geodata_deploy" description="Deploy - Everything">
	</target>

	<!-- depends="deploy_cleanup_files_rebuild_db, deploy_all_files, deploy_import_schema, deploy_update_db_source_and_classes, import_geodata_deploy" -->
	<target name="deploy_cleanup_files_rebuild_db" depends="" description="Deploy Step 1 - Cleanup Files and Rebuild MOJO">
		<java classname="org.apache.tools.ant.launch.Launcher" fork="true" failonerror="true" dir="." timeout="4000000" taskname="Deploy - Cleanup Files and Rebuild MOJO">
			<jvmarg value="-Xmx${max_memory_use}" />
			<classpath>
				<pathelement location="${ant.home}/lib/ant-launcher.jar" />
			</classpath>
			<arg value="-buildfile" />
			<arg file="deploy.xml" />
			<arg value="-Dprofile.name=deploy" />
			<arg value="-Droot.user=${root.user}" />
			<arg value="-Droot.pass=${root.pass}" />
			<arg value="-Droot.db=${root.db}" />
			<arg value="delete_generated_all" />
			<arg value="rebuild_db" />
		</java>
	</target>


	<target name="deploy_all_files" depends="" description="Deploy Step 2 - Copy All Files (including Tomcat config)">
		<java classname="org.apache.tools.ant.launch.Launcher" fork="true" failonerror="true" dir="." timeout="4000000" taskname="Copies all tomcat files">
			<jvmarg value="-Xmx${max_memory_use}" />
			<classpath>
				<pathelement location="${ant.home}/lib/ant-launcher.jar" />
			</classpath>
			<arg value="-buildfile" />
			<arg file="deploy.xml" />
			<arg value="deploy_all_files" />
		</java>
	</target>

	<target name="deploy_all_application_files" depends="" description="Deploy Step 2 - Copy Files">
		<java classname="org.apache.tools.ant.launch.Launcher" fork="true" failonerror="true" dir="." timeout="4000000" taskname="Copies all application files">
			<jvmarg value="-Xmx${max_memory_use}" />
			<classpath>
				<pathelement location="${ant.home}/lib/ant-launcher.jar" />
			</classpath>
			<arg value="-buildfile" />
			<arg file="deploy.xml" />
			<arg value="deploy_all_application_files" />
		</java>
	</target>
<!--
	<target name="deploy_incremental_schema_update" depends="" description="Deploy Step 3 - Import Most Recent Schema">
		<java classname="org.apache.tools.ant.launch.Launcher" fork="true" failonerror="true" dir="." timeout="4000000" taskname="Deploy - Import Most Recent Schema">
			<jvmarg value="-Xmx${max_memory_use}" />
			<jvmarg value="-Dmojo.keepSource=true" />
			<classpath>
				<pathelement location="${ant.home}/lib/ant-launcher.jar" />
			</classpath>
			<arg value="-buildfile" />
			<arg file="deploy.xml" />
			<arg value="-Dprofile.name=deploy" />
			<arg value="import_most_recent" />
		</java>
	</target>
-->
	<target name="deploy_incremental_schema_update" depends="" description="Deploy Step 3 - Import Most Recent Schema">
		<java classname="org.apache.tools.ant.launch.Launcher" fork="true" failonerror="true" dir="." timeout="4000000" taskname="Deploy - Import Most Recent Schema">
			<jvmarg value="-Xmx${max_memory_use}" />
			<jvmarg value="-Dmojo.keepSource=true" />
			<classpath>
				<pathelement location="${ant.home}/lib/ant-launcher.jar" />
			</classpath>
			<arg value="-buildfile" />
			<arg file="deploy.xml" />
    		<arg value="-Dprofile.name=deploy" />
			<arg value="import_most_recent" />
			<arg value="install_db_procedures" />
		</java>
	</target>

	<target name="deploy_update_db_source_and_classes" depends="" description="Deploy Step 4 - Update DB Source and Classes">
		<java classname="org.apache.tools.ant.launch.Launcher" fork="true" failonerror="true" dir="." timeout="4000000" taskname="Deploy Update DB Source and Classes">
			<jvmarg value="-Xmx${max_memory_use}" />
			<classpath>
				<pathelement location="${ant.home}/lib/ant-launcher.jar" />
			</classpath>
			<arg value="-buildfile" />
			<arg file="deploy.xml" />
			<arg value="-Dprofile.name=deploy" />
			<arg value="update_db_source_and_classes" />
		</java>
	</target>

	<target name="develop_update_db_source_and_classes" depends="" description="Deploy Step 4 - Update DB Source and Classes">
		<java classname="org.apache.tools.ant.launch.Launcher" fork="true" failonerror="true" dir="." timeout="4000000" taskname="Deploy Update DB Source and Classes">
			<jvmarg value="-Xmx${max_memory_use}" />
			<classpath>
				<pathelement location="${ant.home}/lib/ant-launcher.jar" />
			</classpath>
			<arg value="-buildfile" />
			<arg file="deploy.xml" />
			<arg value="-Dprofile.name=develop" />
			<arg value="update_db_source_and_classes" />
		</java>
	</target>


	<!-- Deploy Incremental Schema Update -->
	<target name="deploy_incremental_schema_update_and_files" depends="deploy_all_application_files, deploy_incremental_schema_update, deploy_update_db_source_and_classes" description="Deploy - Incremental Schema Update">
		<antcall target="call_reload_jsp">
		</antcall>
	</target>
	<!-- depends="deploy_delete_generated_all, deploy_all_files, deploy_import_schema, deploy_update_db_source_and_classes" -->

	<!-- Deploy Incremental File Update -->
	<target name="deploy_incremental_file_update_1" depends="deploy_all_application_files, deploy_update_db_source_and_classes" description="Deploy - Incremental File Update (including DB) ">
		<antcall target="call_reload_jsp">
		</antcall>
	</target>

	<!-- Deploy Incremental File Update -->
	<target name="deploy_incremental_file_update_2" depends="deploy_all_application_files" description="Deploy - Incremental File Update (not including DB)">
		<antcall target="call_reload_jsp">
		</antcall>
	</target>

	<!-- Deploy Presentation Files -->
	<target name="deploy_presentation_files" depends="" description="Deploy - Presentaiton Files">
		<java classname="org.apache.tools.ant.launch.Launcher" fork="true" failonerror="true" dir="." timeout="4000000" taskname="Deploy Presentaiton Files">
			<jvmarg value="-Xmx${max_memory_use}" />
			<jvmarg value="-Dmojo.keepSource=true" />
			<classpath>
				<pathelement location="${ant.home}/lib/ant-launcher.jar" />
			</classpath>
			<arg value="-buildfile" />
			<arg file="deploy.xml" />
			<arg value="deploy_presentation_files" />
		</java>
	</target>

	<!-- Development Incremental Schema Update -->
	<target name="develop_incremental_schema_update" depends="" description="Develop - Incremental Schema Update">
		<java classname="org.apache.tools.ant.launch.Launcher" fork="true" failonerror="true" dir="." timeout="4000000" taskname="Development Incremental Schema Update">
			<jvmarg value="-Xmx${max_memory_use}" />
			<jvmarg value="-Dmojo.keepSource=true" />
			<classpath>
				<pathelement location="${ant.home}/lib/ant-launcher.jar" />
			</classpath>
			<arg value="-buildfile" />
			<arg file="deploy.xml" />
			<arg value="import_most_recent" />
			<arg value="install_db_procedures" />
		</java>
	</target>

	<target name="develop_delete_generated_base" depends="" description="Develop delete generated base source and class files">
		<java classname="org.apache.tools.ant.launch.Launcher" fork="true" failonerror="true" dir="." timeout="4000000" taskname="Develop delete generated base source and class files">
			<jvmarg value="-Xmx${max_memory_use}" />
			<classpath>
				<pathelement location="${ant.home}/lib/ant-launcher.jar" />
			</classpath>
			<arg value="-buildfile" />
			<arg file="deploy.xml" />
			<arg value="delete_generated_base" />
		</java>
	</target>

	<target name="deploy_delete_generated_all" depends="" description="Deploy delete all source and class files">
		<java classname="org.apache.tools.ant.launch.Launcher" fork="true" failonerror="true" dir="." timeout="4000000" taskname="Deploy delete all source and class files">
			<jvmarg value="-Xmx${max_memory_use}" />
			<classpath>
				<pathelement location="${ant.home}/lib/ant-launcher.jar" />
			</classpath>
			<arg value="-buildfile" />
			<arg file="deploy.xml" />
			<arg value="-Dprofile.name=deploy" />
			<arg value="delete_generated_all" />
		</java>
	</target>

	<target name="develop_change_schema_version" depends="" description="Updates the schema to the given version">
		<java classname="org.apache.tools.ant.launch.Launcher" fork="true" failonerror="true" dir="." timeout="4000000" taskname="Develop change schema version">
			<jvmarg value="-Xmx${max_memory_use}" />
			<jvmarg value="-Dmojo.keepSource=true" />
			<jvmarg value="-DversionNumber=${versionNumber}" />
			<classpath>
				<pathelement location="${ant.home}/lib/ant-launcher.jar" />
			</classpath>
			<arg value="-buildfile" />
			<arg file="deploy.xml" />
			<arg value="change_schema_version" />
		</java>
	</target>

	<target name="develop_redo_last_schema_change" depends="" description="Undo and Redo the last schmea update">
		<java classname="org.apache.tools.ant.launch.Launcher" fork="true" failonerror="true" dir="." timeout="4000000" taskname="Develop change schema version">
			<jvmarg value="-Xmx${max_memory_use}" />
			<jvmarg value="-Dmojo.keepSource=true" />
			<jvmarg value="-DversionNumber=${versionNumber}" />
			<classpath>
				<pathelement location="${ant.home}/lib/ant-launcher.jar" />
			</classpath>
			<arg value="-buildfile" />
			<arg file="deploy.xml" />
			<arg value="redo_last_import" />
		</java>
	</target>

	<target name="deploy_redo_last_schema_change" depends="" description="Undo and Redo the last schmea update">
			<java classname="org.apache.tools.ant.launch.Launcher" fork="true" failonerror="true" dir="." timeout="4000000" taskname="Develop change schema version">
				<jvmarg value="-Xmx${max_memory_use}" />
				<jvmarg value="-Dmojo.keepSource=true" />
				<jvmarg value="-DversionNumber=${versionNumber}" />
				<classpath>
					<pathelement location="${ant.home}/lib/ant-launcher.jar" />
				</classpath>
				<arg value="-buildfile" />
				<arg file="deploy.xml" />
				<arg value="redo_last_import" />
			</java>
		</target>


	<target name="deploy_change_schema_version" depends="" description="Updates the schema to the given version">
		<java classname="org.apache.tools.ant.launch.Launcher" fork="true" failonerror="true" dir="." timeout="4000000" taskname="Develop change schema version">
			<jvmarg value="-Xmx${max_memory_use}" />
			<jvmarg value="-Dmojo.keepSource=true" />
			<jvmarg value="-DversionNumber=${versionNumber}" />
			<classpath>
				<pathelement location="${ant.home}/lib/ant-launcher.jar" />
			</classpath>
			<arg value="-buildfile" />
			<arg file="deploy.xml" />
			<arg value="-Dprofile.name=deploy" />
			<arg value="change_schema_version" />
		</java>
	</target>

	<target name="copy_dev_to_deploy" description="Rebuild Develop from scratch and then copy everything to deploy.">
		<echo message="dumping the develop db to a sql file " />
		<exec executable="${postgres.bin}/pg_dump" dir="./" failonerror="true" searchpath="true" logError="true">
			<arg line="--blobs -h 127.0.0.1 -U ${root.user} ${develop.db}" />
			<redirector output="dump.sql">
				<outputfilterchain>
					<!--make sql dump stop on errors -->
					<concatfilter prepend="drop_deploy.sql" />
					<!--change 'mdssdevelop' to 'mdssdeploy' -->
					<tokenfilter>
						<replacestring from="${develop.db}" to="${deploy.db}" />
					</tokenfilter>
				</outputfilterchain>
			</redirector>
		</exec>

		<echo message="drop and recreate the deploy db" />
		<exec executable="${postgres.bin}/psql" dir="./" failonerror="true" searchpath="true" logError="true" inputstring="DROP DATABASE ${deploy.db};
			  CREATE DATABASE ${deploy.db} WITH ENCODING='UTF8' TEMPLATE=template0 OWNER=${deploy.db};">
			<arg line="-h 127.0.0.1 -U ${root.user} -d postgres" />
		</exec>

		<echo message="import the sql dump into the develop db" />
		<exec executable="${postgres.bin}/psql" dir="./" input="dump.sql" failonerror="true" searchpath="true" logError="true">
			<arg line="-h 127.0.0.1 -U ${root.user} -d ${deploy.db}" />
		</exec>
		<delete file="./dump.sql" />
	</target>

	<target name="develop_rebuild_import" depends="" description="Development Rebuild All">
		<java classname="org.apache.tools.ant.launch.Launcher" fork="true" failonerror="true" dir="." timeout="4000000" taskname="Develop Rebuild All">
			<jvmarg value="-Xmx${max_memory_use}" />
			<jvmarg value="-Dmojo.keepSource=true" />
<!--
			<jvmarg value="-Dmojo.skipCodeGenAndCompile=true" />
-->
<!--
			<jvmarg value="-Xdebug" />
			<jvmarg value="-Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=y" />
-->

			<classpath>
				<pathelement location="${ant.home}/lib/ant-launcher.jar" />
			</classpath>
			<arg value="-buildfile" />
			<arg file="deploy.xml" />
			<arg value="-Droot.user=${root.user}" />
			<arg value="-Droot.pass=${root.pass}" />
			<arg value="-Droot.db=${root.db}" />

			<arg value="rebuild_db" />
<!--
			<arg value="delete_generated_base" />
-->
			<arg value="import_most_recent" />
			<arg value="install_db_procedures" />
		</java>
	</target>

	<target name="deploy_all" description="Step 2">
		<java classname="org.apache.tools.ant.launch.Launcher" fork="true" failonerror="true" dir="." timeout="4000000" taskname="(2)Deploy All">
			<jvmarg value="-Xmx${max_memory_use}" />
			<classpath>
				<pathelement location="${ant.home}/lib/ant-launcher.jar" />
			</classpath>
			<arg value="-buildfile" />
			<arg file="deploy.xml" />
			<!--<arg value="stop_tomcat_webapp" />-->
			<arg value="deploy" />
			<!--<arg value="start_tomcat_webapp" />-->
		</java>
	</target>

	<target name="update_db" depends="" description="Step 4">
		<java classname="org.apache.tools.ant.launch.Launcher" fork="true" failonerror="true" dir="." timeout="4000000" taskname="(4)Update Deploy DB With Source">
			<jvmarg value="-Xmx${max_memory_use}" />
			<classpath>
				<pathelement location="${ant.home}/lib/ant-launcher.jar" />
			</classpath>
			<arg value="-buildfile" />
			<arg file="deploy.xml" />
			<arg value="-Droot.user=${root.user}" />
			<arg value="-Droot.pass=${root.pass}" />
			<arg value="-Droot.db=${root.db}" />
			<arg value="import_most_recent" />
			<arg value="install_db_procedures" />
		</java>

		<java classname="org.apache.tools.ant.launch.Launcher" fork="true" failonerror="true" dir="." timeout="4000000" taskname="(4)Update Deploy DB With Source">
			<jvmarg value="-Xmx${max_memory_use}" />
			<classpath>
				<pathelement location="${ant.home}/lib/ant-launcher.jar" />
			</classpath>
			<arg value="-buildfile" />
			<arg file="deploy.xml" />
			<arg value="-Dprofile.name=deploy" />
			<arg value="-Droot.user=${root.user}" />
			<arg value="-Droot.pass=${root.pass}" />
			<arg value="-Droot.db=${root.db}" />
			<arg value="import_most_recent" />
			<arg value="update_db_source_and_classes" />
			<arg value="install_db_procedures" />
		</java>
	</target>



	<!-- =================================================================== -->
	<!-- These are some utility tasks and tasks for restarting things        -->
	<!-- =================================================================== -->

	<target name="kill_tomcat" unless="dont_kill_tomcat">
		<shellscript shell="bash" dir="../../../" os="Mac OS X,Linux" searchpath="true">
   	ps ax  | egrep [Tt]omcat | egrep -o ^\ ?[0-9]+ | xargs kill -9
	</shellscript>
		<shellscript shell="cmd" dir="." os="Windows" searchpath="true">
		net stop tomcat6
    </shellscript>
		<sleep seconds="5" />
	</target>

	<target name="start_tomcat" unless="dont_kill_tomcat">
		<shellscript shell="bash" dir="${deploy.root}/bin" os="Mac OS X,Linux" searchpath="true">
	    ./startup.sh
	</shellscript>
		<shellscript shell="cmd" dir="." os="Windows" searchpath="true">
		net start tomcat6
    </shellscript>
		<sleep seconds="10" />
	</target>

	<target name="alert_status" unless="alert_status.done">
		<sound>
			<success source="../build_resources/build_complete.wav" />
			<fail source="../build_resources/build_error.wav" />
		</sound>
		<property name="alert_status.done" value="true" />
	</target>


	<target name="write_revision"  description="Writes the current svn revision info to an html file">
		<svn>
			<info target="../../../" verbose="true" />
		</svn>
		<echo file="../../../webapp/revision.html" append="false">
		Last Changed Author: ${svn.info.author}
		Last Changed Revision: ${svn.info.lastRev}
		Last Changed Date: ${svn.info.lastDate}
	    </echo>
		<echo message="Last Changed Revision: ${svn.info.lastRev}">
		</echo>
	</target>


	<target name="call_reload_jsp" description="Make tomcat reload all its classes">
		<!-- get reload.jsp to force tomcat to dump its cache-->
		<get src="http://localhost:8080/MDSS/test/reload.jsp" dest="./delme.html" verbose="true" />
		<delete file="./delme.html" />
	</target>

	<!-- =================================================================== -->
	<!-- Import the geo data into the develop db                              -->
	<!-- =================================================================== -->

	<target name="import_geodata" depends="kill_tomcat" description="imports geodata.db of geodata into the develop db">
		<java classname="org.apache.tools.ant.launch.Launcher" fork="true" failonerror="true" dir="." timeout="40000000" taskname="import geodata">
			<jvmarg value="-Xmx${max_memory_use}" />
			<classpath>
				<pathelement location="${ant.home}/lib/ant-launcher.jar" />
			</classpath>
			<arg value="-buildfile" />
			<arg file="deploy.xml" />
			<arg value="-Droot.user=${root.user}" />
			<arg value="-Droot.pass=${root.pass}" />
			<arg value="-Dgeodata.db=${geodata.db}" />
			<arg value="import_geodata" />
		</java>
	</target>

		<target name="import_ontology" description="imports ontology into the develop db">
			<java classname="org.apache.tools.ant.launch.Launcher" fork="true" failonerror="true" dir="." timeout="40000000" taskname="import ontology">
				<jvmarg value="-Xmx${max_memory_use}" />
				<classpath>
					<pathelement location="${ant.home}/lib/ant-launcher.jar" />
				</classpath>
				<arg value="-buildfile" />
				<arg file="deploy.xml" />
				<arg value="-Droot.user=${root.user}" />
				<arg value="-Droot.pass=${root.pass}" />
				<arg value="-Dgeodata.db=${geodata.db}" />
				<arg value="import_ontology" />
			</java>
		</target>

		<target name="import_ontology_roots" description="imports ontology roots into the develop db">
			<java classname="org.apache.tools.ant.launch.Launcher" fork="true" failonerror="true" dir="." timeout="40000000" taskname="import ontology roots">
				<jvmarg value="-Xmx${max_memory_use}" />
				<classpath>
					<pathelement location="${ant.home}/lib/ant-launcher.jar" />
				</classpath>
				<arg value="-buildfile" />
				<arg file="deploy.xml" />
				<arg value="import_ontology_roots" />
			</java>
		</target>

	<target name="develop_build_all_paths_geodata" depends="kill_tomcat" description="builds the all paths geo entity table for development">
		<java classname="org.apache.tools.ant.launch.Launcher" fork="true" failonerror="true" dir="." timeout="4000000" taskname="develop_build_all_paths_geodata">
			<classpath>
				<pathelement location="${ant.home}/lib/ant-launcher.jar" />
			</classpath>
			<arg value="-buildfile" />
			<arg file="deploy.xml" />

			<arg value="-Droot.user=${root.user}" />
			<arg value="-Droot.pass=${root.pass}" />
			<arg value="-Dgeodata.db=${geodata.db}" />
			<arg value="build_all_paths_geodata" />
		</java>
	</target>

	<target name="develop_build_all_paths_ontology" description="builds the all paths ontology table for development">
		<java classname="org.apache.tools.ant.launch.Launcher" fork="true" failonerror="true" dir="." timeout="4000000" taskname="develop_build_all_paths_ontology">
			<classpath>
				<pathelement location="${ant.home}/lib/ant-launcher.jar" />
			</classpath>
			<arg value="-buildfile" />
			<arg file="deploy.xml" />

			<arg value="build_all_paths_ontology" />
		</java>
	</target>


	<target name="develop_create_univeral_queries" description="create the system queries for universals for development">
		<java classname="org.apache.tools.ant.launch.Launcher" fork="true" failonerror="true" dir="." timeout="4000000" taskname="develop_create_universal_queries">
			<classpath>
				<pathelement location="${ant.home}/lib/ant-launcher.jar" />
			</classpath>
			<arg value="-buildfile" />
			<arg file="deploy.xml" />

			<arg value="create_universal_queries" />
		</java>
	</target>
		
	<target name="import_geodata_deploy" depends="" description="imports geodata.db of geodata into the deploy db">
		<!--<diagnostics/>-->
		<echo message="NOTICE: your develop/server/database.properties  is backed up as database.properties.bak, if this script does not complete sucessfully you will need to restore it manualy" />
		<sleep seconds="3" />
		<!-- backup deploy properties -->
		<copy file="../../../profiles/develop/server/database.properties" tofile="../../../profiles/develop/server/database.properties.bak" />
		<!-- change develop to temporaly point to deploy -->
		<propertyfile file="../../../profiles/develop/server/database.properties">
			<entry key="user" value="mdssdeploy" />
			<entry key="password" value="mdssdeploy" />
			<entry key="databaseName" value="mdssdeploy" />
			<entry key="db.connection.initial" value="20" />
			<entry key="db.connection.max" value="30" />
		</propertyfile>
		<!-- run the importer -->
		<java classname="org.apache.tools.ant.launch.Launcher" fork="true" failonerror="true" dir="." timeout="4000000" taskname="import geodata">
			<jvmarg value="-Xmx${max_memory_use}" />
			<classpath>
				<pathelement location="${ant.home}/lib/ant-launcher.jar" />
			</classpath>
			<arg value="-buildfile" />
			<arg file="deploy.xml" />

			<arg value="-Droot.user=${root.user}" />
			<arg value="-Droot.pass=${root.pass}" />
			<arg value="-Dgeodata.db=${geodata.db}" />
			<arg value="import_geodata" />
		</java>
		<!-- change develop back to develop<replaceregexp byline="true" 		<retry retrycount="3">-->
		<move file="../../../profiles/develop/server/database.properties.bak" tofile="../../../profiles/develop/server/database.properties" />
		<antcall target="start_tomcat" />
	</target>

	<target name="deploy_build_all_paths_geodata" depends="" description="builds the all paths geo entity table for deployment">
		<!--<diagnostics/>-->
		<echo message="NOTICE: your develop/server/database.properties  is backed up as database.properties.bak, if this script does not complete sucessfully you will need to restore it manualy" />
		<sleep seconds="3" />
		<!-- backup deploy properties -->
		<copy file="../../../profiles/develop/server/database.properties" tofile="../../../profiles/develop/server/database.properties.bak" />
		<!-- change develop to temporaly point to deploy -->
		<propertyfile file="../../../profiles/develop/server/database.properties">
			<entry key="user" value="mdssdeploy" />
			<entry key="password" value="mdssdeploy" />
			<entry key="databaseName" value="mdssdeploy" />
			<entry key="db.connection.initial" value="20" />
			<entry key="db.connection.max" value="30" />
		</propertyfile>
		<!-- run the importer -->
		<java classname="org.apache.tools.ant.launch.Launcher" fork="true" failonerror="true" dir="." timeout="4000000" taskname="deploy_build_all_paths_geodata">
			<jvmarg value="-Xmx${max_memory_use}" />
			<classpath>
				<pathelement location="${ant.home}/lib/ant-launcher.jar" />
			</classpath>
			<arg value="-buildfile" />
			<arg file="deploy.xml" />
			<arg value="-Dprofile.name=deploy" />

			<arg value="-Droot.user=${root.user}" />
			<arg value="-Droot.pass=${root.pass}" />
			<arg value="-Dgeodata.db=${geodata.db}" />
			<arg value="build_all_paths_geodata" />
		</java>
		<!-- change develop back to develop<replaceregexp byline="true" 		<retry retrycount="3">-->
		<move file="../../../profiles/develop/server/database.properties.bak" tofile="../../../profiles/develop/server/database.properties" />
		<antcall target="start_tomcat" />
	</target>


	<target name="auto_localize" description="Automagicly update MDSS.properties with any new localizations">

		<!-- Change spaces to underscores-->
		<replaceregexp byline="true" match='(.*(mjl:command|c:set *var="page_title")[^>]+value="[A-Za-z0-9_]+)([^"A-Za-z0-9_])([^"]+".*)$' replace="\1_\4">
		<fileset dir="../../../webapp" includes="**/*.jsp" />
		</replaceregexp>


		<!-- Print all the places that have spaces   pattern='mjl:command?[^>]+value="[^"$ ][^" ]+( )[^" ]+"' -->
		<concat>
			<header filtering="no" trimleading="yes">
         SPACES IN KEYS :
	     =============================
	     </header>
			<filterchain>
				<containsregex pattern='(.*(mjl:command|c:set *var="page_title")[^>]+value="[A-Za-z0-9_]+)([^"A-Za-z0-9_])([^"]+".*)$' />
		</filterchain>
				<fileset dir="../../../webapp" includes="**/*.jsp" />
			</concat>

			<!-- Collect all the keys into one file-->
			<concat force="yes" destfile="MDSS.properties" append="false">
				<filterchain>
					<containsregex pattern='(fmt:message[^>]+key|var="page_title"[^>]+value|mjl:command[^>]+value)="[A-Za-z0-9_]+"' />
		</filterchain>
					<fileset dir="../../../webapp" includes="**/*.jsp" />
				</concat>

				<concat force="yes" destfile="MDSS.properties" append="true">
					<filterchain>
						<containsregex pattern='text:\s*"([A-Za-z0-9_]+)[("]' />
					</filterchain>
					<fileset dir="../../../webapp" includes="**/navMenu.js" />
				</concat>

				<!-- Collect all the mjl commands
	<concat force="yes" destfile="MDSS.properties" append="true" >
		<filterchain>
			<containsregex pattern='mjl:command?[^>]+value="([^"$ ][^" ]+)"' />
		</filterchain>
		<fileset dir="../../../webapp" includes="**/*.jsp" />
	</concat>-->

				<!--mark these keys as new-->
				<replaceregexp byline="true" file="MDSS.properties" match='^(.*text:\s*")([A-Za-z0-9_]+)([("].*)' replace="\2=\2  FOUND-A-NEW-KEY" />

				<replaceregexp byline="true" file="MDSS.properties" match='^.*(fmt:message[^>]+key|var="page_title"[^>]+value|mjl:command[^>]+value)="([^"]+)(".*)' replace="\2=\2  FOUND-A-NEW-KEY" />

	<replaceregexp byline="true" file="MDSS.properties" match='^(.*var="page_title" *value=")([^"]+)(".*)' replace="\2=\2  FOUND-A-NEW-KEY" />

	<!-- replace undercores after the equals sign with spaces		<retry retrycount="10">-->
	<replaceregexp byline="true" file="MDSS.properties" match='^([^=]+=[^_]+)(_)+' replace="\1 " />
	<replaceregexp byline="true" file="MDSS.properties" match='^([^=]+=[^_]+)(_)+' replace="\1 " />
	<replaceregexp byline="true" file="MDSS.properties" match='^([^=]+=[^_]+)(_)+' replace="\1 " />
	<replaceregexp byline="true" file="MDSS.properties" match='^([^=]+=[^_]+)(_)+' replace="\1 " />
	<replaceregexp byline="true" file="MDSS.properties" match='^([^=]+=[^_]+)(_)+' replace="\1 " />
	<replaceregexp byline="true" file="MDSS.properties" match='^([^=]+=[^_]+)(_)+' replace="\1 " />
	<replaceregexp byline="true" file="MDSS.properties" match='^([^=]+=[^_]+)(_)+' replace="\1 " />
	<replaceregexp byline="true" file="MDSS.properties" match='^([^=]+=[^_]+)(_)+' replace="\1 " />
	<replaceregexp byline="true" file="MDSS.properties" match='^([^=]+=[^_]+)(_)+' replace="\1 " />
	<replaceregexp byline="true" file="MDSS.properties" match='^([^=]+=[^_]+)(_)+' replace="\1 " />
	<replaceregexp byline="true" file="MDSS.properties" match='^([^=]+=[^_]+)(_)+' replace="\1 " />

	<!-- import existing properties -->
	<property file="../../../profiles/MDSS.properties" prefix="localized" />


	<!-- import any new properties -->
	<property file="MDSS.properties" prefix="localized" />

	<!-- write out the new properties list -->
	<echoproperties prefix="localized" destfile="MDSS.properties" />

	<!-- remove the prefix-->
	<replaceregexp byline="true" file="MDSS.properties" match='^(localized\.)(.*)$' replace="\2" />

	<!-- print out any new properties so we know it worked-->
	<concat>
	<header filtering="no" trimleading="yes">
    Found These New Properties
     ==========================
     </header>
		<fileset dir="." includes="MDSS.properties" />
		<filterchain>
			<containsregex pattern='  FOUND-A-NEW-KEY' replace="" />
		</filterchain>
	</concat>

	<!-- update the master properties file  <fail/>-->
	<move file="MDSS.properties" tofile="../../../profiles/MDSS.properties">
		<filterchain>
			<replaceregex pattern='  FOUND-A-NEW-KEY' />
		</filterchain>
	</move>

	</target>

	<target name="remove_generated_universals" depends="" description="Remove all java files for selected (old) generated universals">
		<patternset id="generated.artifacts">
			<include name="**/*" />
			<exclude name="Earth*" />
			<exclude name="GeoEntity*" />
			<exclude name=".svn*" />
		</patternset>

		<delete failonerror="false">
			<fileset dir="../../../generated/client/stub/dss/vector/solutions/geo/generated/">
				<patternset refid="generated.artifacts" />
			</fileset>
		</delete>

		<delete failonerror="false">
			<fileset dir="../../../generated/client/base/dss/vector/solutions/geo/generated/">
				<patternset refid="generated.artifacts" />
			</fileset>
		</delete>

		<delete failonerror="false">
			<fileset dir="../../../generated/server/stub/dss/vector/solutions/geo/generated/">
				<patternset refid="generated.artifacts" />
			</fileset>
		</delete>

		<delete failonerror="false">
			<fileset dir="../../../generated/server/base/dss/vector/solutions/geo/generated/">
				<patternset refid="generated.artifacts" />
			</fileset>
		</delete>

		<delete includeemptydirs="true" failonerror="false">
			<fileset dir="../../../webapp/WEB-INF/dss/vector/solutions/geo/generated" defaultexcludes="false">
				<patternset refid="generated.artifacts" />
			</fileset>
		</delete>

	</target>

	<target name="copy_country_schema" depends="" description="Copy the appropriate country schema file">
		<echo message="Switching to country: ${geodata.db}" />
		<copy file="../../../doc/country/${geodata.db}-schema(0001238646707001).xml" tofile="../../../doc/individual/schema(0001238646707001).xml" overwrite="true" />
		<copy file="../../../webapp/imgs/flags/${geodata.db}.gif" tofile="../../../webapp/imgs/flags/current" overwrite="true" />
	</target>
</project>
