<?xml version="1.0" encoding="UTF-8"?>
<project name="MDSS" default="rebuild_all">
	<taskdef resource="net/sf/antcontrib/antcontrib.properties" classpath="../../../lib/common/ant-contrib-1.0b3.jar" />

	<!-- =================================================================== -->
	<!-- These are defualt properties.                                       -->
	<!-- You can overide them in your external tools configueration.         -->
	<!-- =================================================================== -->

	<property file="../../../profiles/default/common/terraframe.properties" />

	<property name="root.user" value="postgres" />
	<property name="root.pass" value="postgres" />
	<property name="root.db" value="template_postgis" />
	<property name="max_memory_use" value="1024m" />

	<property name="deploy.path" value="${deploy.root}/webapps/MDSS/" />

	<property name="postgres.bin" value="/Library/PostgreSQL/8.3/bin" />
	<property name="testserver.address" value="66.116.103.235" />
	<property name="testserver.username" value="administrator" />


	<!-- =================================================================== -->
	<!--         CAUTION: THIS WILL OVERWRITE EXISTING DATA                  -->
	<!--This is the main task to run if you want to completely rebuild mdss. -->
	<!-- =================================================================== -->
	<target name="rebuild_all" depends="alert_status,develop_rebuild_import,deploy_all,deploy_rebuild_import,update_db,push_source">
		<echo message="The build is complete" />
	</target>

	<target name="fast_build" depends="alert_status,develop_rebuild_import,deploy_all" description="Rebuild Develop from scratch and then copy everything to deploy.">
		<shellscript shell="bash" os="Mac OS X" dir="./" searchpath="true"
			inputstring="${postgres.bin}/pg_dump --blobs -U mdssdevelop mdssdevelop > dump.sql" />
		<replaceregexp byline="true">
		  <regexp pattern="mdssdevelop"/>
		  <substitution expression="mdssdeploy"/>
		  <fileset file ="./dump.sql"/>
		 </replaceregexp>

		<shellscript shell="bash" os="Mac OS X" dir="./" searchpath="true"
					inputstring="${postgres.bin}/psql -U postgres postgres -f drop_deploy.sql" />
		<shellscript shell="bash" os="Mac OS X" dir="./" searchpath="true"
					inputstring="${postgres.bin}/psql -U mdssdeploy mdssdeploy -f dump.sql" />
		<antcall target="call_reload_jsp"/>
		<echo message="The build is complete" />
	</target>



	<!-- =================================================================== -->
	<!-- These are five tasks that rebuild MDSS.                             -->
	<!-- You can run them one at a time if you wish.                         -->
	<!-- =================================================================== -->
	<target name="develop_rebuild_import" depends="" description="Step 1">
		<java classname="org.apache.tools.ant.launch.Launcher" fork="true" failonerror="true" dir="." timeout="4000000" taskname="(1)Develop Rebuild Import">
			<jvmarg value="-Xmx${max_memory_use}" />
			<jvmarg value="-Dmojo.keepSource=true" />
			<classpath>
				<pathelement location="${ant.home}/lib/ant-launcher.jar" />
			</classpath>
			<arg value="-buildfile" />
			<arg file="deploy.xml" />
			<arg value="-Droot.user=${root.user}" />
			<arg value="-Droot.pass=${root.pass}" />
			<arg value="-Droot.db=${root.db}" />
			<arg value="rebuild_db" />
			<arg value="import_most_recent" />
		</java>
	</target>

	<target name="deploy_all" depends="write_revision" description="Step 2">
		<java classname="org.apache.tools.ant.launch.Launcher" fork="true" failonerror="true" dir="." timeout="4000000" taskname="(2)Deploy All">
			<jvmarg value="-Xmx${max_memory_use}" />
			<classpath>
				<pathelement location="${ant.home}/lib/ant-launcher.jar" />
			</classpath>
			<arg value="-buildfile" />
			<arg file="deploy.xml" />
			<arg value="stop_tomcat_webapp" />
			<arg value="deploy" />
			<arg value="start_tomcat_webapp" />
		</java>
	</target>

	<target name="deploy_rebuild_import" depends="" description="Step 3">
		<java classname="org.apache.tools.ant.launch.Launcher" fork="true" failonerror="true" dir="." timeout="4000000" taskname="(3)Deploy Rebuild Import">
			<jvmarg value="-Xmx${max_memory_use}" />
			<classpath>
				<pathelement location="${ant.home}/lib/ant-launcher.jar" />
			</classpath>
			<arg value="-buildfile" />
			<arg file="deploy.xml" />
			<arg value="-Dprofile.name=deploy" />
			<arg value="-Droot.user=${root.user}" />
			<arg value="-Droot.pass=${root.pass}" />
			<arg value="-Droot.db=${root.db}" />
			<arg value="rebuild_db" />
			<arg value="import_most_recent" />
		</java>
	</target>

	<target name="update_db" depends="" description="Step 4">
		<java classname="org.apache.tools.ant.launch.Launcher" fork="true" failonerror="true" dir="." timeout="4000000" taskname="(4)Update Deploy DB With Source">
			<jvmarg value="-Xmx${max_memory_use}" />
			<classpath>
				<pathelement location="${ant.home}/lib/ant-launcher.jar" />
			</classpath>
			<arg value="-buildfile" />
			<arg file="deploy.xml" />
			<arg value="-Droot.user=${root.user}" />
			<arg value="-Droot.pass=${root.pass}" />
			<arg value="-Droot.db=${root.db}" />
			<arg value="update_db_source_and_classes" />
		</java>
	</target>

	<target name="push_source" depends="alert_status" description="Step 5">
		<java classname="org.apache.tools.ant.launch.Launcher" fork="true" failonerror="true" dir="." timeout="4000000" taskname="(5)Push Source To Server">
			<jvmarg value="-Xmx${max_memory_use}" />
			<classpath>
				<pathelement location="${ant.home}/lib/ant-launcher.jar" />
			</classpath>
			<arg value="-buildfile" />
			<arg file="deploy.xml" />
			<arg value="push_source" />
		</java>
	</target>

	<!-- =================================================================== -->
	<!-- These are some utility tasks and tasks for restarting things        -->
	<!-- =================================================================== -->

	<target name="kill_tomcat" unless="dont_kill_tomcat">
		<shellscript shell="bash" dir="../../../" os="Mac OS X" searchpath="true">
	   	ps -x  | grep Tomcat | egrep -o ^\ ?[0-9]+ | xargs kill
		</shellscript>
		<shellscript shell="bash" dir="${deploy.root}/bin" os="Windows" searchpath="true">
			./shutdown.bat
	    </shellscript>
		<sleep seconds="5" />
	</target>

	<target name="start_tomcat" unless="dont_kill_tomcat">
		<shellscript shell="bash" dir="${deploy.root}/bin" os="Mac OS X" searchpath="true">
		    ./startup.sh
		</shellscript>
		<shellscript shell="bash" dir="${deploy.root}/bin" os="Windows" searchpath="true">
			./startup.bat
	    </shellscript>
		<sleep seconds="10" />
	</target>

	<target name="alert_status" unless="alert_status.done">
		<sound>
			<success source="../build_resources/build_complete.wav" />
			<fail source="../build_resources/build_error.wav" />
		</sound>
		<property name="alert_status.done" value="true" />
	</target>

	<!-- =================================================================== -->
	<!-- Commands to restart postgres -->
	<!-- sudo su postgres -c "./pg_ctl stop -m i -D ../data" -->
	<!-- sudo su postgres -c "./pg_ctl start -D ../data" -->
	<!-- =================================================================== -->


	<!-- =================================================================== -->
	<!-- CAUTION: THESE TASKS UPDATE THE LIVE TEST SERVER!                   -->
	<!-- =================================================================== -->

	<target name="deploy_to_test_server" depends="alert_status" description="Dumps the sql and update the svn with your currently tomcat dir">
		<shellscript shell="bash" os="Mac OS X" dir="${deploy.path}" searchpath="true" inputstring="${postgres.bin}/pg_dump --blobs -U mdssdeploy mdssdeploy > dump.sql" />
		<shellscript shell="bash" os="Mac OS X" dir="${deploy.path}" searchpath="true">
			svn add * --force
			svn ci -m"Update test servers to lastest version of MDSS"
		</shellscript>
		<echo message="SVN updated with image for test server" />
	</target>

	<target name="write_revision" description="Writes the current svn revision info to an html file">
		<shellscript shell="bash" dir="../../../" os="Mac OS X" searchpath="true">
	   	svn info|grep "Last Changed" > webapp/revision.html
		</shellscript>
	</target>

	<target name="get_root_password" description="Checks for root password and prompts for it if not found." unless="testserver.password">
		<input message="Test Server Password:" addproperty="testserver.password" />
	</target>

	<!-- lib/common/jsch-0.1.31.jar must be added to your ant classpath-->
	<target name="update_test_server" depends="get_root_password" description="logs in to the test server and preforms an update">
		<sshexec host="${testserver.address}" username="${testserver.username}" password="${testserver.password}" command="CMD /c 'C:\\Program Files\\Apache Software Foundation\\Tomcat 6.0\\webapps\\MDSS\\update.bat'" />
	</target>

	<!-- =================================================================== -->
	<!-- CAUTION: CHANGES PUSHED TO TOMCAT WITH THESE TASKS WILL BE LOST UPON RESTART!                   -->
	<!-- =================================================================== -->

	<target name="update_source" depends="alert_status" description="Step 6, use this if you have changed java code and want send changes to tomcat">
		<java classname="org.apache.tools.ant.launch.Launcher" fork="true" failonerror="true" dir="." timeout="4000000" taskname="(6)Update Source">
			<jvmarg value="-Xmx${max_memory_use}" />
			<classpath>
				<pathelement location="${ant.home}/lib/ant-launcher.jar" />
			</classpath>
			<arg value="-buildfile" />
			<arg file="deploy.xml" />
			<arg value="deploy_application_files" />
			<!--<arg value="deploy_presentation_files" /> -->
		</java>
		<antcall target="call_reload_jsp">
		</antcall>
	</target>


	<target name="call_reload_jsp" description="Make tomcat reload all its classes">
		<!-- get reload.jsp to force tomcat to dump its cache-->
		<get src="http://localhost:8080/MDSS/test/reload.jsp" dest="./delme.html" verbose="true" />
		<delete file="./delme.html" />
	</target>

	<!-- =================================================================== -->
	<!-- Import the geo data into the deploy db                              -->
	<!-- =================================================================== -->

	<target name="import_geodata" depends="" description="imports a db of geodata into the deploy db">
		<!--<diagnostics/>-->

		<!-- backup deploy properties -->
		<copy file="../../../profiles/develop/server/database.properties" tofile="../../../profiles/develop/server/database.properties.bak" />
		<!-- change develop to temporaly point to deploy -->
		<propertyfile file="../../../profiles/develop/server/database.properties">
			<entry key="user" value="mdssdeploy"/>
			<entry key="password" value="mdssdeploy"/>
			<entry key="databaseName" value="mdssdeploy"/>
		</propertyfile>
		<!-- run the importer -->
		<java classname="org.apache.tools.ant.launch.Launcher" fork="true" failonerror="true" dir="." timeout="4000000" taskname="import geodata">
			<jvmarg value="-Xmx${max_memory_use}" />
			<jvmarg value="-Dmojo.keepSource=true" />
			<classpath>
				<pathelement location="${ant.home}/lib/ant-launcher.jar" />
			</classpath>
			<arg value="-buildfile" />
			<arg file="deploy.xml" />

			<arg value="-Droot.user=${root.user}" />
			<arg value="-Droot.pass=${root.pass}" />
			<arg value="import_geodata" />
		</java>
		<!-- change develop back to develop -->
		<move file="../../../profiles/develop/server/database.properties.bak" tofile="../../../profiles/develop/server/database.properties" />

	</target>


</project>
