package csu.mrc.ivcc.mdss.entomology;

import csu.mrc.ivcc.mdss.entomology.MorphologicalSpecieGroupQuery;

/**
 *
 * @author Autogenerated by TerraFrame
 */
public class MorphologicalSpecieGroupViewQuery extends csu.mrc.ivcc.mdss.entomology.MorphologicalSpecieGroupViewQueryBase  implements com.terraframe.mojo.generation.loader.Reloadable
{
private static final long serialVersionUID = 1234793969670L;

  public MorphologicalSpecieGroupViewQuery(com.terraframe.mojo.query.QueryFactory queryFactory)
  {
    super(queryFactory);
    this.buildQuery(new DefaultMorphologicalSpecieGroupViewBuilder(queryFactory));
  }

  public MorphologicalSpecieGroupViewQuery(com.terraframe.mojo.query.QueryFactory queryFactory, com.terraframe.mojo.query.ViewQueryBuilder viewQueryBuilder)
  {
    super(queryFactory, viewQueryBuilder);
  }

  class DefaultMorphologicalSpecieGroupViewBuilder extends com.terraframe.mojo.query.ViewQueryBuilder implements com.terraframe.mojo.generation.loader.Reloadable
  {
    private MorphologicalSpecieGroupQuery groupQuery;

    public DefaultMorphologicalSpecieGroupViewBuilder(com.terraframe.mojo.query.QueryFactory queryFactory)
    {
      super(queryFactory);
      
      this.groupQuery = new MorphologicalSpecieGroupQuery(queryFactory);
    }

    protected MorphologicalSpecieGroupViewQuery getViewQuery()
    {
      return (MorphologicalSpecieGroupViewQuery)super.getViewQuery();
    }

    /**
     * build the select clause
     */
    protected void buildSelectClause()
    {
//      MorphologicalSpecieGroupViewQuery viewQuery = this.getViewQuery();
//      
//      viewQuery.map(MorphologicalSpecieGroupView.GROUPID, groupQuery.getId());
//      viewQuery.map(MorphologicalSpecieGroupView.COLLECTION, groupQuery.getCollection());
//      viewQuery.map(MorphologicalSpecieGroupView.SPECIE, groupQuery.getSpecie().getTermName());
//      viewQuery.map(MorphologicalSpecieGroupView.IDENTIFICATIONMETHOD, groupQuery.getIdentificationMethod().getTermName());
    }

    /**
     * Implement only if additional join criteria is required.
     */
    protected void buildWhereClause()
    {
    }

  }
}
