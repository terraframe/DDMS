/*******************************************************************************
 * Copyright (C) 2018 IVCC
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 ******************************************************************************/
package dss.vector.solutions.irs;

/**
 * 
 * @author Autogenerated by TerraFrame
 */
public class SprayTeamViewQuery extends dss.vector.solutions.irs.SprayTeamViewQueryBase implements com.runwaysdk.generation.loader.Reloadable
{
  private static final long serialVersionUID = -2099046258;

  public SprayTeamViewQuery(com.runwaysdk.query.QueryFactory queryFactory)
  {
    super(queryFactory);
    this.buildQuery(new DefaultSprayTeamViewBuilder(queryFactory));
  }

  public SprayTeamViewQuery(com.runwaysdk.query.QueryFactory queryFactory, com.runwaysdk.query.ViewQueryBuilder viewQueryBuilder)
  {
    super(queryFactory, viewQueryBuilder);
  }

  class DefaultSprayTeamViewBuilder extends com.runwaysdk.query.ViewQueryBuilder implements com.runwaysdk.generation.loader.Reloadable
  {
    SprayTeamQuery query;

    public DefaultSprayTeamViewBuilder(com.runwaysdk.query.QueryFactory queryFactory)
    {
      super(queryFactory);

      query = new SprayTeamQuery(queryFactory);
    }

    protected SprayTeamViewQuery getViewQuery()
    {
      return (SprayTeamViewQuery) super.getViewQuery();
    }

    /**
     * build the select clause
     */
    protected void buildSelectClause()
    {
      SprayTeamViewQuery vQuery = this.getViewQuery();

      vQuery.map(SprayTeamView.CONCRETEID, query.getId());
      vQuery.map(SprayTeamView.TEAMID, query.getTeamId());
      vQuery.map(SprayTeamView.SPRAYZONE, query.getSprayZone());

      // IMPORTANT: The operator attributes are a marker to assign permissions
      // and ontology roots. However it they are required value, and as such it
      // needs a value to work with the query api. Therefore, fill in a random
      // value knowing it will never be used.
      vQuery.map(SprayTeamView.ASSIGNEDOPERATORS, query.getId());
      vQuery.map(SprayTeamView.AVAILABLEOPERATORS, query.getId());
      vQuery.map(SprayTeamView.CURRENTOPERATORS, query.getId());
    }

    /**
     * Implement only if additional join criteria is required.
     */
    protected void buildWhereClause()
    {

    }

  }
}
