package dss.vector.solutions.surveillance;

/**
 *
 * @author Autogenerated by RunwaySDK
 */
public class CaseDiagnosisTypeViewQuery extends dss.vector.solutions.surveillance.CaseDiagnosisTypeViewQueryBase  implements com.runwaysdk.generation.loader.Reloadable
{
private static final long serialVersionUID = 1115963839;

  public CaseDiagnosisTypeViewQuery(com.runwaysdk.query.QueryFactory queryFactory)
  {
    super(queryFactory);
    this.buildQuery(new DefaultCaseDiagnosisTypeViewBuilder(queryFactory));
  }

  public CaseDiagnosisTypeViewQuery(com.runwaysdk.query.QueryFactory queryFactory, com.runwaysdk.query.ViewQueryBuilder viewQueryBuilder)
  {
    super(queryFactory, viewQueryBuilder);
  }

  class DefaultCaseDiagnosisTypeViewBuilder extends com.runwaysdk.query.ViewQueryBuilder implements com.runwaysdk.generation.loader.Reloadable
  {
    private CaseDiagnosisTypeQuery query;

    public DefaultCaseDiagnosisTypeViewBuilder(com.runwaysdk.query.QueryFactory queryFactory)
    {
      super(queryFactory);
      
      this.query = new CaseDiagnosisTypeQuery(queryFactory);
    }

    protected CaseDiagnosisTypeViewQuery getViewQuery()
    {
      return (CaseDiagnosisTypeViewQuery)super.getViewQuery();
    }

    /**
     * build the select clause
     */
    protected void buildSelectClause()
    {
      CaseDiagnosisTypeViewQuery vQuery = this.getViewQuery();
      
      vQuery.map(CaseDiagnosisTypeView.CONCRETEID, query.getId());
      vQuery.map(CaseDiagnosisTypeView.AGGREGATEDCASE, query.getAggregatedCase());
      vQuery.map(CaseDiagnosisTypeView.TERM, query.getTerm());
    }

    /**
     * Implement only if additional join criteria is required.
     */
    protected void buildWhereClause()
    {

    }

  }
}
