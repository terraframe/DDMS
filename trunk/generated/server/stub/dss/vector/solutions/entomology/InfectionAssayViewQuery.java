package dss.vector.solutions.entomology;

@com.terraframe.mojo.business.ClassSignature(hash = 1806444007)
/**
 *
 * @author Autogenerated by TerraFrame
 */
public class InfectionAssayViewQuery extends dss.vector.solutions.entomology.InfectionAssayViewQueryBase  implements com.terraframe.mojo.generation.loader.Reloadable
{
private static final long serialVersionUID = 1806444007;

  public InfectionAssayViewQuery(com.terraframe.mojo.query.QueryFactory queryFactory)
  {
    super(queryFactory);
    this.buildQuery(new DefaultInfectionAssayViewBuilder(queryFactory));
  }

  public InfectionAssayViewQuery(com.terraframe.mojo.query.QueryFactory queryFactory, com.terraframe.mojo.query.ViewQueryBuilder viewQueryBuilder)
  {
    super(queryFactory, viewQueryBuilder);
  }

  class DefaultInfectionAssayViewBuilder extends com.terraframe.mojo.query.ViewQueryBuilder implements com.terraframe.mojo.generation.loader.Reloadable
  {
    private InfectionAssayQuery query;
    
    public DefaultInfectionAssayViewBuilder(com.terraframe.mojo.query.QueryFactory queryFactory)
    {
      super(queryFactory);
      
      query = new InfectionAssayQuery(queryFactory);
    }

    protected InfectionAssayViewQuery getViewQuery()
    {
      return (InfectionAssayViewQuery)super.getViewQuery();
    }

    /**
     * build the select clause
     */
    protected void buildSelectClause()
    {
      InfectionAssayViewQuery vQuery = this.getViewQuery();
      
      vQuery.map(InfectionAssayView.CONCRETEID, query.getId());
      vQuery.map(InfectionAssayView.COLLECTION, query.getCollection());
      vQuery.map(InfectionAssayView.IDENTMETHOD, query.getIdentMethod());
      vQuery.map(InfectionAssayView.INFECTED, query.getInfected());
      vQuery.map(InfectionAssayView.MOSQUITOID, query.getMosquitoId());
      vQuery.map(InfectionAssayView.NUMBERPOSITIVE, query.getNumberPositive());
      vQuery.map(InfectionAssayView.NUMBERTESTED, query.getNumberTested());
      vQuery.map(InfectionAssayView.PARASITE, query.getParasite());
      vQuery.map(InfectionAssayView.SEX, query.getSex());
      vQuery.map(InfectionAssayView.SPECIES, query.getSpecies());
      vQuery.map(InfectionAssayView.TESTMETHOD, query.getTestMethod());
    }

    /**
     * Implement only if additional join criteria is required.
     */
    protected void buildWhereClause()
    {

    }

  }
}
