package dss.vector.solutions.entomology;

@com.terraframe.mojo.business.ClassSignature(hash = -224575762)
/**
 *
 * @author Autogenerated by TerraFrame
 */
public class MolecularAssayViewQuery extends dss.vector.solutions.entomology.MolecularAssayViewQueryBase  implements com.terraframe.mojo.generation.loader.Reloadable
{
private static final long serialVersionUID = -224575762;

  public MolecularAssayViewQuery(com.terraframe.mojo.query.QueryFactory queryFactory)
  {
    super(queryFactory);
    this.buildQuery(new DefaultMolecularAssayViewBuilder(queryFactory));
  }

  public MolecularAssayViewQuery(com.terraframe.mojo.query.QueryFactory queryFactory, com.terraframe.mojo.query.ViewQueryBuilder viewQueryBuilder)
  {
    super(queryFactory, viewQueryBuilder);
  }

  class DefaultMolecularAssayViewBuilder extends com.terraframe.mojo.query.ViewQueryBuilder implements com.terraframe.mojo.generation.loader.Reloadable
  {
    private MolecularAssayQuery query;
    
    public DefaultMolecularAssayViewBuilder(com.terraframe.mojo.query.QueryFactory queryFactory)
    {
      super(queryFactory);
      
      query = new MolecularAssayQuery(queryFactory);
    }

    protected MolecularAssayViewQuery getViewQuery()
    {
      return (MolecularAssayViewQuery)super.getViewQuery();
    }

    /**
     * build the select clause
     */
    protected void buildSelectClause()
    {
      MolecularAssayViewQuery vQuery = this.getViewQuery();
      
      vQuery.map(MolecularAssayView.CONCRETEID, query.getId());
      vQuery.map(MolecularAssayView.COLLECTION, query.getCollection());
      vQuery.map(MolecularAssayView.IDENTMETHOD, query.getIdentMethod());
      vQuery.map(MolecularAssayView.ISOFEMALE, query.getIsofemale());
      vQuery.map(MolecularAssayView.MOSQUITOID, query.getMosquitoId());
      vQuery.map(MolecularAssayView.NUMBERRR, query.getNumberRR());
      vQuery.map(MolecularAssayView.NUMBERRS, query.getNumberRS());
      vQuery.map(MolecularAssayView.NUMBERSS, query.getNumberSS());
      vQuery.map(MolecularAssayView.GENERATION, query.getGeneration());
      vQuery.map(MolecularAssayView.SEX, query.getSex());
      vQuery.map(MolecularAssayView.SPECIES, query.getSpecies());
      vQuery.map(MolecularAssayView.ASSAYMETHOD, query.getAssayMethod());
      vQuery.map(MolecularAssayView.TARGET, query.getTarget());
    }

    /**
     * Implement only if additional join criteria is required.
     */
    protected void buildWhereClause()
    {

    }

  }
}
