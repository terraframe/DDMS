package dss.vector.solutions.permission;

/**
 *
 * @author Autogenerated by RunwaySDK
 */
public class MDSSRoleViewQuery extends dss.vector.solutions.permission.MDSSRoleViewQueryBase  implements com.runwaysdk.generation.loader.Reloadable
{
private static final long serialVersionUID = -578557898;

  public MDSSRoleViewQuery(com.runwaysdk.query.QueryFactory queryFactory)
  {
    super(queryFactory);
    this.buildQuery(new DefaultMDSSRoleViewBuilder(queryFactory));
  }

  public MDSSRoleViewQuery(com.runwaysdk.query.QueryFactory queryFactory, com.runwaysdk.query.ViewQueryBuilder viewQueryBuilder)
  {
    super(queryFactory, viewQueryBuilder);
  }

  class DefaultMDSSRoleViewBuilder extends com.runwaysdk.query.ViewQueryBuilder implements com.runwaysdk.generation.loader.Reloadable
  {
    private MDSSRoleQuery query;
    
    public DefaultMDSSRoleViewBuilder(com.runwaysdk.query.QueryFactory queryFactory)
    {
      super(queryFactory);
      
      this.query = new MDSSRoleQuery(queryFactory);
    }

    protected MDSSRoleViewQuery getViewQuery()
    {
      return (MDSSRoleViewQuery)super.getViewQuery();
    }

    /**
     * build the select clause
     */
    protected void buildSelectClause()
    {
      MDSSRoleViewQuery vQuery = this.getViewQuery();
      
      vQuery.map(MDSSRoleView.CONCRETEID, query.getId());
      vQuery.map(MDSSRoleView.ROLENAME, query.getRole().getRoleName());
      vQuery.map(MDSSRoleView.DISPLAYLABEL, query.getRole().getDisplayLabel().localize());
    }

    /**
     * Implement only if additional join criteria is required.
     */
    protected void buildWhereClause()
    {

    }

  }
}
