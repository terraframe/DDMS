package dss.vector.solutions.geo;

import com.runwaysdk.query.F;
import com.runwaysdk.query.GeneratedViewQuery;
import com.runwaysdk.system.metadata.MdBusinessQuery;

import dss.vector.solutions.geo.generated.GeoEntityQuery;

/**
 *
 * @author Autogenerated by TerraFrame
 */
public class GeoEntityViewQuery extends dss.vector.solutions.geo.GeoEntityViewQueryBase  implements com.runwaysdk.generation.loader.Reloadable
{
private static final long serialVersionUID = 1238962018908L;

  private String[] ids;
  
  private GeoEntityQuery geoEntityQuery;
  
  private MdBusinessQuery mdBusinessQuery;

  public GeoEntityViewQuery(com.runwaysdk.query.QueryFactory queryFactory)
  {
    super(queryFactory);
    this.buildQuery(new DefaultGeoEntityViewBuilder(queryFactory));
  }
  
  public GeoEntityViewQuery(com.runwaysdk.query.QueryFactory queryFactory, String[] ids)
  {
    super(queryFactory);
    this.ids = ids;
    this.geoEntityQuery = new GeoEntityQuery(queryFactory);
    this.mdBusinessQuery = new MdBusinessQuery(queryFactory);
    this.buildQuery(new DefaultGeoEntityViewBuilder(queryFactory));
  }

  public GeoEntityViewQuery(com.runwaysdk.query.QueryFactory queryFactory, com.runwaysdk.query.ViewQueryBuilder viewQueryBuilder)
  {
    super(queryFactory, viewQueryBuilder);
  }

  class DefaultGeoEntityViewBuilder extends com.runwaysdk.query.ViewQueryBuilder implements com.runwaysdk.generation.loader.Reloadable
  {
    public DefaultGeoEntityViewBuilder(com.runwaysdk.query.QueryFactory queryFactory)
    {
      super(queryFactory);
    }

    protected GeoEntityViewQuery getViewQuery()
    {
      return (GeoEntityViewQuery)super.getViewQuery();
    }

    /**
     * build the select clause
     */
    protected void buildSelectClause()
    {
      GeneratedViewQuery vQuery = this.getViewQuery();

      vQuery.map(GeoEntityView.GEOENTITYID, geoEntityQuery.getId());
      vQuery.map(GeoEntityView.GEOID, geoEntityQuery.getGeoId());
      vQuery.map(GeoEntityView.ACTIVATED, geoEntityQuery.getActivated());
      vQuery.map(GeoEntityView.ENTITYNAME, geoEntityQuery.getEntityName());
      vQuery.map(GeoEntityView.ENTITYTYPE, geoEntityQuery.getType());
      vQuery.map(GeoEntityView.TYPEDISPLAYLABEL, mdBusinessQuery.getDisplayLabel().localize());
    }

    /**
     * Implement only if additional join criteria is required.
     */
    protected void buildWhereClause()
    {
      GeneratedViewQuery vQuery = this.getViewQuery();     
      
      vQuery.WHERE(F.CONCAT(mdBusinessQuery.getPackageName(),
          F.CONCAT(".", mdBusinessQuery.getTypeName())).EQ(geoEntityQuery.getType()));
      
      vQuery.WHERE(geoEntityQuery.getId().IN(ids));
    }

  }
}
