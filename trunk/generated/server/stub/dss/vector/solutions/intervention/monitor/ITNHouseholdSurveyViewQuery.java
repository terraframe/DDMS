package dss.vector.solutions.intervention.monitor;


/**
 *
 * @author Autogenerated by TerraFrame
 */
public class ITNHouseholdSurveyViewQuery extends dss.vector.solutions.intervention.monitor.ITNHouseholdSurveyViewQueryBase  implements com.terraframe.mojo.generation.loader.Reloadable
{
private static final long serialVersionUID = 1252970233288L;

  public ITNHouseholdSurveyViewQuery(com.terraframe.mojo.query.QueryFactory queryFactory)
  {
    super(queryFactory);
    this.buildQuery(new DefaultITNHouseholdSurveyViewBuilder(queryFactory));
  }

  public ITNHouseholdSurveyViewQuery(com.terraframe.mojo.query.QueryFactory queryFactory, com.terraframe.mojo.query.ViewQueryBuilder viewQueryBuilder)
  {
    super(queryFactory, viewQueryBuilder);
  }

  class DefaultITNHouseholdSurveyViewBuilder extends com.terraframe.mojo.query.ViewQueryBuilder implements com.terraframe.mojo.generation.loader.Reloadable
  {
    private ITNHouseholdSurveyQuery itnQuery;

    public DefaultITNHouseholdSurveyViewBuilder(com.terraframe.mojo.query.QueryFactory queryFactory)
    {
      super(queryFactory);
      
      itnQuery = new ITNHouseholdSurveyQuery(queryFactory);
    }

    protected ITNHouseholdSurveyViewQuery getViewQuery()
    {
      return (ITNHouseholdSurveyViewQuery)super.getViewQuery();
    }

    /**
     * build the select clause
     */
    protected void buildSelectClause()
    {
      ITNHouseholdSurveyViewQuery vQuery = this.getViewQuery();
      
      vQuery.map(ITNHouseholdSurveyView.CONCRETEID, itnQuery.getId());
      vQuery.map(ITNHouseholdSurveyView.STARTDATE, itnQuery.getStartDate());
      vQuery.map(ITNHouseholdSurveyView.ENDDATE, itnQuery.getEndDate());
      vQuery.map(ITNHouseholdSurveyView.SURVEYLOCATION, itnQuery.getSurveyLocation().getGeoId());
      vQuery.map(ITNHouseholdSurveyView.AGENTFIRSTNAME, itnQuery.getAgentFirstName());
      vQuery.map(ITNHouseholdSurveyView.AGENTSURNAME, itnQuery.getAgentSurname());
      vQuery.map(ITNHouseholdSurveyView.QUESTIONNAIRENUMBER, itnQuery.getQuestionnaireNumber());
      vQuery.map(ITNHouseholdSurveyView.RESIDENTS, itnQuery.getResidents());
      vQuery.map(ITNHouseholdSurveyView.PREGNANTRESIDENTS, itnQuery.getPregnantResidents());
      vQuery.map(ITNHouseholdSurveyView.CHILDRESIDENTS, itnQuery.getChildResidents());
      vQuery.map(ITNHouseholdSurveyView.ITNS, itnQuery.getItns());
      vQuery.map(ITNHouseholdSurveyView.DAMAGEDITNS, itnQuery.getDamagedItns());
      vQuery.map(ITNHouseholdSurveyView.HANGINGITNS, itnQuery.getHangingItns());
      vQuery.map(ITNHouseholdSurveyView.OTHERITNS, itnQuery.getOtherItns());
      vQuery.map(ITNHouseholdSurveyView.MONTHRECEIVED, itnQuery.getMonthReceived());
      vQuery.map(ITNHouseholdSurveyView.YEARRECEIVED, itnQuery.getYearReceived());
      vQuery.map(ITNHouseholdSurveyView.USEDITNS, itnQuery.getUsedItns());
      vQuery.map(ITNHouseholdSurveyView.USEDEVERYNIGHT, itnQuery.getUsedEveryNight());
      vQuery.map(ITNHouseholdSurveyView.NETSOBTAINED, itnQuery.getNetsObtained());
      vQuery.map(ITNHouseholdSurveyView.FREEPROVIDER, itnQuery.getFreeProvider());
      vQuery.map(ITNHouseholdSurveyView.BOUGHTPROVIDER, itnQuery.getBoughtProvider());
      vQuery.map(ITNHouseholdSurveyView.WASHED, itnQuery.getWashed());
      vQuery.map(ITNHouseholdSurveyView.WASHINTERVAL, itnQuery.getWashInterval());
      vQuery.map(ITNHouseholdSurveyView.WASHFREQUENCY, itnQuery.getWashFrequency());
      vQuery.map(ITNHouseholdSurveyView.RETREATED, itnQuery.getRetreated());
      vQuery.map(ITNHouseholdSurveyView.RETREATMENTPERIOD, itnQuery.getRetreatmentPeriod());
    }

    /**
     * Implement only if additional join criteria is required.
     */
    protected void buildWhereClause()
    {

    }

  }
}
