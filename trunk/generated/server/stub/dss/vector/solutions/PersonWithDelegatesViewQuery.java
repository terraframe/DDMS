package dss.vector.solutions;

@com.runwaysdk.business.ClassSignature(hash = 978492195)
/**
 *
 * @author Autogenerated by TerraFrame
 */
public class PersonWithDelegatesViewQuery extends dss.vector.solutions.PersonWithDelegatesViewQueryBase  implements com.runwaysdk.generation.loader.Reloadable
{
private static final long serialVersionUID = 978492195;

  public PersonWithDelegatesViewQuery(com.runwaysdk.query.QueryFactory queryFactory)
  {
    super(queryFactory);
    this.buildQuery(new DefaultPersonWithDelegatesViewBuilder(queryFactory));
  }

  public PersonWithDelegatesViewQuery(com.runwaysdk.query.QueryFactory queryFactory, com.runwaysdk.query.ViewQueryBuilder viewQueryBuilder)
  {
    super(queryFactory, viewQueryBuilder);
  }

  class DefaultPersonWithDelegatesViewBuilder extends com.runwaysdk.query.ViewQueryBuilder implements com.runwaysdk.generation.loader.Reloadable
  {
    private PersonQuery query;
    
    public DefaultPersonWithDelegatesViewBuilder(com.runwaysdk.query.QueryFactory queryFactory)
    {
      super(queryFactory);
      
      query = new PersonQuery(queryFactory);
    }

    protected PersonWithDelegatesViewQuery getViewQuery()
    {
      return (PersonWithDelegatesViewQuery)super.getViewQuery();
    }

    /**
     * build the select clause
     */
    protected void buildSelectClause()
    {
      PersonWithDelegatesViewQuery vQuery = this.getViewQuery();
      
      vQuery.map(PersonWithDelegatesView.PERSONID, query.getId());
      vQuery.map(PersonWithDelegatesView.IDENTIFIER, query.getIdentifier());
      vQuery.map(PersonWithDelegatesView.DATEOFBIRTH, query.getDateOfBirth());
      vQuery.map(PersonWithDelegatesView.FIRSTNAME, query.getFirstName());
      vQuery.map(PersonWithDelegatesView.LASTNAME, query.getLastName());
      vQuery.map(PersonWithDelegatesView.SEX, query.getSex());
      vQuery.map(PersonWithDelegatesView.PATIENTDELEGATE, query.getPatientDelegate());
      vQuery.map(PersonWithDelegatesView.TEAMMEMBERDELEGATE, query.getTeamMemberDelegate());
      vQuery.map(PersonWithDelegatesView.STOCKSTAFFDELEGATE, query.getStockStaffDelegate());
      vQuery.map(PersonWithDelegatesView.IPTRECIPIENTDELEGATE, query.getIptRecipientDelegate());
      vQuery.map(PersonWithDelegatesView.ITNRECIPIENTDELEGATE, query.getItnRecipientDelegate());
      vQuery.map(PersonWithDelegatesView.SUPERVISORDELEGATE, query.getSupervisorDelegate());
      vQuery.map(PersonWithDelegatesView.USERDELEGATE, query.getUserDelegate());
      vQuery.map(PersonWithDelegatesView.PHYSICIANDELEGATE, query.getPhysicianDelegate());
    }

    /**
     * Implement only if additional join criteria is required.
     */
    protected void buildWhereClause()
    {

    }

  }
}
