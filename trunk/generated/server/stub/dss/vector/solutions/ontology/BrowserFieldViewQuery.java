package dss.vector.solutions.ontology;

import com.terraframe.mojo.query.SelectableChar;
import com.terraframe.mojo.query.SelectablePrimitive;
import com.terraframe.mojo.query.ValueQuery;
import com.terraframe.mojo.system.metadata.MdAttributeReferenceQuery;
import com.terraframe.mojo.system.metadata.MdAttributeVirtualQuery;
import com.terraframe.mojo.system.metadata.MdClassQuery;

/**
 *
 * @author Autogenerated by TerraFrame
 */
public class BrowserFieldViewQuery extends dss.vector.solutions.ontology.BrowserFieldViewQueryBase  implements com.terraframe.mojo.generation.loader.Reloadable
{
private static final long serialVersionUID = 1252959713156L;

  public BrowserFieldViewQuery(com.terraframe.mojo.query.QueryFactory queryFactory)
  {
    super(queryFactory);
    this.buildQuery(new DefaultBrowserFieldViewBuilder(queryFactory));
  }

  public BrowserFieldViewQuery(com.terraframe.mojo.query.QueryFactory queryFactory, com.terraframe.mojo.query.ViewQueryBuilder viewQueryBuilder)
  {
    super(queryFactory, viewQueryBuilder);
  }

  class DefaultBrowserFieldViewBuilder extends com.terraframe.mojo.query.ViewQueryBuilder implements com.terraframe.mojo.generation.loader.Reloadable
  {
    
//    private MdAttributeQuery mdAttributeQuery;
    private MdAttributeReferenceQuery mdRefQuery;
    private MdAttributeReferenceQuery mdVirtualRefQuery;
    private MdAttributeVirtualQuery mdVirtualQuery;
    
    private MdClassQuery mdClassQuery;
    private BrowserFieldQuery fieldQuery;
    private ValueQuery unioned;
    
    private ValueQuery concreteQuery;
    private ValueQuery virtualQuery;
    
    public DefaultBrowserFieldViewBuilder(com.terraframe.mojo.query.QueryFactory queryFactory)
    {
      super(queryFactory);
      
      this.mdRefQuery = new MdAttributeReferenceQuery(queryFactory);
      this.mdVirtualRefQuery = new MdAttributeReferenceQuery(queryFactory);
      this.mdVirtualQuery = new MdAttributeVirtualQuery(queryFactory);
      
      this.mdClassQuery = new MdClassQuery(queryFactory);
      this.fieldQuery = new BrowserFieldQuery(queryFactory);
      
      this.concreteQuery = new ValueQuery(queryFactory);
      this.virtualQuery = new ValueQuery(queryFactory);
      
      this.unioned = new ValueQuery(queryFactory);
    }

    protected BrowserFieldViewQuery getViewQuery()
    {
      return (BrowserFieldViewQuery)super.getViewQuery();
    }

    protected void buildSelectClause()
    {
      BrowserFieldViewQuery query = this.getViewQuery();
      
      // join concrete attribute with display labels
      this.concreteQuery.SELECT(this.mdClassQuery.getId("classId"),
          this.mdClassQuery.getDisplayLabel().getSessionLocale("classLabel"),
          this.mdRefQuery.getId("attributeId"),
          this.mdRefQuery.getDisplayLabel().getSessionLocale("attributeLabel"),
          this.mdRefQuery.getDefaultValue("defaultValue"),
          this.mdRefQuery.getDefiningMdClass().getId("definingMdClass"));
      
      
      // join virtual attribute with display labels
      this.virtualQuery.SELECT(this.mdClassQuery.getId("classId"),
          this.mdClassQuery.getDisplayLabel().getSessionLocale("classLabel"),
          this.mdVirtualQuery.getId("attributeId"),
          this.mdVirtualQuery.getDisplayLabel().getSessionLocale("attributeLabel"),
          this.mdVirtualRefQuery.getDefaultValue("defaultValue"),
          this.mdVirtualQuery.getDefiningMdView().getId("definingMdClass"));
      
      
      // union the attribute queries
      this.unioned.UNION(this.concreteQuery, this.virtualQuery);
      
      query.map(BrowserFieldView.BROWSERFIELDID, this.fieldQuery.getId());
      
      query.map(BrowserFieldView.MDCLASSID, this.unioned.get("classId"));
      query.map(BrowserFieldView.MDCLASSLABEL, this.unioned.get("classLabel"));

      query.map(BrowserFieldView.MDATTRIBUTEID, this.unioned.get("attributeId"));
      query.map(BrowserFieldView.MDATTRIBUTELABEL, this.unioned.get("attributeLabel"));
      query.map(BrowserFieldView.DEFAULTVALUE, this.unioned.get("defaultValue"));
    }

    /**
     * Implement only if additional join criteria is required.
     */
    protected void buildWhereClause()
    {
      BrowserFieldViewQuery query = this.getViewQuery();
      this.concreteQuery.WHERE(this.mdRefQuery.getDefiningMdClass().EQ(this.mdClassQuery));
      
      this.virtualQuery.WHERE(this.mdVirtualQuery.getDefiningMdView().EQ(this.mdClassQuery));
      this.virtualQuery.AND(this.mdVirtualQuery.getMdAttributeConcrete().EQ(this.mdVirtualRefQuery));
      
      // join the MOField to the MdAttribute
      query.WHERE(this.fieldQuery.getMdAttribute().getId().EQ((SelectableChar) this.unioned.get("attributeId")));
      
      query.ORDER_BY_ASC((SelectablePrimitive) this.unioned.get("classLabel"));
    }

  }
}
