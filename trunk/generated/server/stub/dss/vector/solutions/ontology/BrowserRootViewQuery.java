package dss.vector.solutions.ontology;

import com.terraframe.mojo.system.metadata.MdAttributeQuery;

/**
 *
 * @author Autogenerated by TerraFrame
 */
public class BrowserRootViewQuery extends dss.vector.solutions.ontology.BrowserRootViewQueryBase  implements com.terraframe.mojo.generation.loader.Reloadable
{
private static final long serialVersionUID = 1252959712966L;

  public BrowserRootViewQuery(com.terraframe.mojo.query.QueryFactory queryFactory)
  {
    super(queryFactory);
    this.buildQuery(new DefaultBrowserRootViewBuilder(queryFactory));
  }

  public BrowserRootViewQuery(com.terraframe.mojo.query.QueryFactory queryFactory, com.terraframe.mojo.query.ViewQueryBuilder viewQueryBuilder)
  {
    super(queryFactory, viewQueryBuilder);
  }

  public class DefaultBrowserRootViewBuilder extends com.terraframe.mojo.query.ViewQueryBuilder implements com.terraframe.mojo.generation.loader.Reloadable
  {
    private BrowserRootQuery browserRootQuery;
    private TermQuery termQuery;
    private MdAttributeQuery mdAttributeQuery;
    private BrowserFieldQuery browserFieldQuery;

    public DefaultBrowserRootViewBuilder(com.terraframe.mojo.query.QueryFactory queryFactory)
    {
      super(queryFactory);

      this.browserRootQuery = new BrowserRootQuery(queryFactory);
      this.termQuery = new TermQuery(queryFactory);
      this.mdAttributeQuery = new MdAttributeQuery(queryFactory);
      this.browserFieldQuery = new BrowserFieldQuery(queryFactory);
    }

    protected BrowserRootViewQuery getViewQuery()
    {
      return (BrowserRootViewQuery)super.getViewQuery();
    }

    /**
     * build the select clause
     */
    protected void buildSelectClause()
    {
      BrowserRootViewQuery query = this.getViewQuery();

      // Add all to FROM to avoid cross-product
      query.valueQuery.FROM(this.browserRootQuery);
      query.valueQuery.FROM(this.termQuery);
      query.valueQuery.FROM(this.mdAttributeQuery);
      query.valueQuery.FROM(this.browserFieldQuery);

      query.map(BrowserRootView.BROWSERROOTID, this.browserRootQuery.getId());
      query.map(BrowserRootView.TERMID, this.termQuery.getId());
//      query.map(BrowserRootView.TERMNAME, this.termQuery.getName());
      query.map(BrowserRootView.TERMNAME, this.termQuery.getDisplay());
      query.map(BrowserRootView.TERMONTOLOGYID, this.termQuery.getTermId());
      query.map(BrowserRootView.SELECTABLE, this.browserRootQuery.getSelectable());
      query.map(BrowserRootView.MDATTRIBUTEID, this.mdAttributeQuery.getId());
    }

    /**
     * Implement only if additional join criteria is required.
     */
    protected void buildWhereClause()
    {
      BrowserRootViewQuery query = this.getViewQuery();

      query.WHERE(this.browserRootQuery.getTerm().EQ(this.termQuery));
      query.AND(this.browserRootQuery.field(this.browserFieldQuery));
      query.AND(this.browserFieldQuery.getMdAttribute().EQ(this.mdAttributeQuery));
    }

  }
}
