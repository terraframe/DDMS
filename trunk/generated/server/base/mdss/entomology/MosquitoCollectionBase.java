package mdss.entomology;

/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to MosquitoCollection.java
 *
 * @author Autogenerated by TerraFrame
 */
public abstract class MosquitoCollectionBase extends mdss.entomology.AbstractMosquitoCollection implements com.terraframe.mojo.generation.loader.Reloadable
{
  public final static String CLASS = "mdss.entomology.MosquitoCollection";
  public static java.lang.String COLLECTIONMETHOD = "collectionMethod";
  private static final long serialVersionUID = 1234294592300L;
  
  public MosquitoCollectionBase()
  {
    super();
  }
  
  @SuppressWarnings("unchecked")
  public java.util.List<mdss.entomology.CollectionMethod> getCollectionMethod()
  {
    return (java.util.List<mdss.entomology.CollectionMethod>) getEnumValues(COLLECTIONMETHOD);
  }
  
  public void addCollectionMethod(mdss.entomology.CollectionMethod value)
  {
    addEnumItem(COLLECTIONMETHOD, value.getId());
  }
  
  public void removeCollectionMethod(mdss.entomology.CollectionMethod value)
  {
    removeEnumItem(COLLECTIONMETHOD, value.getId());
  }
  
  public void clearCollectionMethod()
  {
    clearEnum(COLLECTIONMETHOD);
  }
  
  public void validateCollectionMethod()
  {
    this.validateAttribute(COLLECTIONMETHOD);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getCollectionMethodMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(mdss.entomology.MosquitoCollection.CLASS);
    return mdClassIF.definesAttribute(COLLECTIONMETHOD);
  }
  
  protected String getDeclaredType()
  {
    return CLASS;
  }
  
  public static MosquitoCollectionQuery getAllInstances(String sortAttribute, Boolean ascending, Integer pageSize, Integer pageNumber)
  {
    MosquitoCollectionQuery query = new MosquitoCollectionQuery(new com.terraframe.mojo.query.QueryFactory());
    com.terraframe.mojo.business.Entity.getAllInstances(query, sortAttribute, ascending, pageSize, pageNumber);
    return query;
  }
  
  public static MosquitoCollection get(String id)
  {
    return (MosquitoCollection) com.terraframe.mojo.business.Business.get(id);
  }
  
  public static mdss.entomology.MosquitoCollection searchByGeoEntityAndDate(mdss.test.GeoEntity geoEntity, java.util.Date collectionDate)
  {
    return null;
  }
  
  public static MosquitoCollection lock(java.lang.String id)
  {
    MosquitoCollection _instance = MosquitoCollection.get(id);
    _instance.lock();
    
    return _instance;
  }
  
  public static MosquitoCollection unlock(java.lang.String id)
  {
    MosquitoCollection _instance = MosquitoCollection.get(id);
    _instance.unlock();
    
    return _instance;
  }
  
  public String toString()
  {
    if (this.isNew())
    {
      return "New: "+ this.getClassDisplayLabel();
    }
    else
    {
      return super.toString();
    }
  }
}
