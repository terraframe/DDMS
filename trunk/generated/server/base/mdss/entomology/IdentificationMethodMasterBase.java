package mdss.entomology;

/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to IndentificationMethodMaster.java
 *
 * @author Autogenerated by TerraFrame
 */
public abstract class IdentificationMethodMasterBase extends com.terraframe.mojo.system.EnumerationMaster implements com.terraframe.mojo.generation.loader.Reloadable
{
  public final static String CLASS = "mdss.entomology.IndentificationMethodMaster";
  private static final long serialVersionUID = 1234294597008L;
  
  public IdentificationMethodMasterBase()
  {
    super();
  }
  
  protected String getDeclaredType()
  {
    return CLASS;
  }
  
  public static IdentificationMethodMasterQuery getAllInstances(String sortAttribute, Boolean ascending, Integer pageSize, Integer pageNumber)
  {
    IdentificationMethodMasterQuery query = new IdentificationMethodMasterQuery(new com.terraframe.mojo.query.QueryFactory());
    com.terraframe.mojo.business.Entity.getAllInstances(query, sortAttribute, ascending, pageSize, pageNumber);
    return query;
  }
  
  public static IdentificationMethodMaster get(String id)
  {
    return (IdentificationMethodMaster) com.terraframe.mojo.business.Business.get(id);
  }
  
  public static IdentificationMethodMaster getEnumeration(String enumName)
  {
    return (IdentificationMethodMaster) com.terraframe.mojo.business.Business.getEnumeration("mdss.entomology.IndentificationMethodMaster",enumName);
  }
  
  public static IdentificationMethodMaster lock(java.lang.String id)
  {
    IdentificationMethodMaster _instance = IdentificationMethodMaster.get(id);
    _instance.lock();
    
    return _instance;
  }
  
  public static IdentificationMethodMaster unlock(java.lang.String id)
  {
    IdentificationMethodMaster _instance = IdentificationMethodMaster.get(id);
    _instance.unlock();
    
    return _instance;
  }
  
  public String toString()
  {
    if (this.isNew())
    {
      return "New: "+ this.getClassDisplayLabel();
    }
    else
    {
      return super.toString();
    }
  }
}
