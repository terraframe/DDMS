package dss.vector.solutions;

@com.terraframe.mojo.business.ClassSignature(hash = 456104569)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to PersonView.java
 *
 * @author Autogenerated by TerraFrame
 */
public abstract class PersonViewBase extends com.terraframe.mojo.business.View implements com.terraframe.mojo.generation.loader.Reloadable
{
  public final static String CLASS = "dss.vector.solutions.PersonView";
  public static java.lang.String AGE = "age";
  public static java.lang.String DATEOFBIRTH = "dateOfBirth";
  public static java.lang.String FIRSTNAME = "firstName";
  public static java.lang.String ID = "id";
  public static java.lang.String ISIPTRECIPIENT = "isIPTRecipient";
  public static java.lang.String ISITNRECIPIENT = "isITNRecipient";
  public static java.lang.String ISMDSSUSER = "isMDSSUser";
  public static java.lang.String ISPATIENT = "isPatient";
  public static java.lang.String ISSPRAYLEADER = "isSprayLeader";
  public static java.lang.String ISSPRAYOPERATOR = "isSprayOperator";
  public static java.lang.String ISSTOCKSTAFF = "isStockStaff";
  public static java.lang.String LASTNAME = "lastName";
  public static java.lang.String LEADERID = "leaderId";
  public static java.lang.String OPERATORID = "operatorId";
  public static java.lang.String PAZZWORD = "pazzword";
  public static java.lang.String PERSONID = "personId";
  public static java.lang.String RESIDENTIALGEOID = "residentialGeoId";
  public static java.lang.String RESIDENTIALINFORMATION = "residentialInformation";
  public static java.lang.String SEX = "sex";
  public static java.lang.String UZERNAME = "uzername";
  public static java.lang.String WORKGEOID = "workGeoId";
  public static java.lang.String WORKINFORMATION = "workInformation";
  private static final long serialVersionUID = 456104569;
  
  public PersonViewBase()
  {
    super();
  }
  
  public Integer getAge()
  {
    return com.terraframe.mojo.constants.MdAttributeIntegerUtil.getTypeSafeValue(getValue(AGE));
  }
  
  public void validateAge()
  {
    this.validateAttribute(AGE);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getAgeMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.PersonView.CLASS);
    return mdClassIF.definesAttribute(AGE);
  }
  
  public void setAge(Integer value)
  {
    if(value == null)
    {
      setValue(AGE, "");
    }
    else
    {
      setValue(AGE, java.lang.Integer.toString(value));
    }
  }
  
  public java.util.Date getDateOfBirth()
  {
    return com.terraframe.mojo.constants.MdAttributeDateUtil.getTypeSafeValue(getValue(DATEOFBIRTH));
  }
  
  public void validateDateOfBirth()
  {
    this.validateAttribute(DATEOFBIRTH);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getDateOfBirthMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.PersonView.CLASS);
    return mdClassIF.definesAttribute(DATEOFBIRTH);
  }
  
  public void setDateOfBirth(java.util.Date value)
  {
    if(value == null)
    {
      setValue(DATEOFBIRTH, "");
    }
    else
    {
      setValue(DATEOFBIRTH, new java.text.SimpleDateFormat(com.terraframe.mojo.constants.Constants.DATE_FORMAT).format(value));
    }
  }
  
  public String getFirstName()
  {
    return getValue(FIRSTNAME);
  }
  
  public void validateFirstName()
  {
    this.validateAttribute(FIRSTNAME);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getFirstNameMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.PersonView.CLASS);
    return mdClassIF.definesAttribute(FIRSTNAME);
  }
  
  public void setFirstName(String value)
  {
    if(value == null)
    {
      setValue(FIRSTNAME, "");
    }
    else
    {
      setValue(FIRSTNAME, value);
    }
  }
  
  public String getId()
  {
    return getValue(ID);
  }
  
  public void validateId()
  {
    this.validateAttribute(ID);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getIdMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.PersonView.CLASS);
    return mdClassIF.definesAttribute(ID);
  }
  
  public Boolean getIsIPTRecipient()
  {
    return com.terraframe.mojo.constants.MdAttributeBooleanUtil.getTypeSafeValue(getValue(ISIPTRECIPIENT));
  }
  
  public void validateIsIPTRecipient()
  {
    this.validateAttribute(ISIPTRECIPIENT);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getIsIPTRecipientMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.PersonView.CLASS);
    return mdClassIF.definesAttribute(ISIPTRECIPIENT);
  }
  
  public void setIsIPTRecipient(Boolean value)
  {
    if(value == null)
    {
      setValue(ISIPTRECIPIENT, "");
    }
    else
    {
      setValue(ISIPTRECIPIENT, java.lang.Boolean.toString(value));
    }
  }
  
  public Boolean getIsITNRecipient()
  {
    return com.terraframe.mojo.constants.MdAttributeBooleanUtil.getTypeSafeValue(getValue(ISITNRECIPIENT));
  }
  
  public void validateIsITNRecipient()
  {
    this.validateAttribute(ISITNRECIPIENT);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getIsITNRecipientMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.PersonView.CLASS);
    return mdClassIF.definesAttribute(ISITNRECIPIENT);
  }
  
  public void setIsITNRecipient(Boolean value)
  {
    if(value == null)
    {
      setValue(ISITNRECIPIENT, "");
    }
    else
    {
      setValue(ISITNRECIPIENT, java.lang.Boolean.toString(value));
    }
  }
  
  public Boolean getIsMDSSUser()
  {
    return com.terraframe.mojo.constants.MdAttributeBooleanUtil.getTypeSafeValue(getValue(ISMDSSUSER));
  }
  
  public void validateIsMDSSUser()
  {
    this.validateAttribute(ISMDSSUSER);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getIsMDSSUserMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.PersonView.CLASS);
    return mdClassIF.definesAttribute(ISMDSSUSER);
  }
  
  public void setIsMDSSUser(Boolean value)
  {
    if(value == null)
    {
      setValue(ISMDSSUSER, "");
    }
    else
    {
      setValue(ISMDSSUSER, java.lang.Boolean.toString(value));
    }
  }
  
  public Boolean getIsPatient()
  {
    return com.terraframe.mojo.constants.MdAttributeBooleanUtil.getTypeSafeValue(getValue(ISPATIENT));
  }
  
  public void validateIsPatient()
  {
    this.validateAttribute(ISPATIENT);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getIsPatientMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.PersonView.CLASS);
    return mdClassIF.definesAttribute(ISPATIENT);
  }
  
  public void setIsPatient(Boolean value)
  {
    if(value == null)
    {
      setValue(ISPATIENT, "");
    }
    else
    {
      setValue(ISPATIENT, java.lang.Boolean.toString(value));
    }
  }
  
  public Boolean getIsSprayLeader()
  {
    return com.terraframe.mojo.constants.MdAttributeBooleanUtil.getTypeSafeValue(getValue(ISSPRAYLEADER));
  }
  
  public void validateIsSprayLeader()
  {
    this.validateAttribute(ISSPRAYLEADER);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getIsSprayLeaderMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.PersonView.CLASS);
    return mdClassIF.definesAttribute(ISSPRAYLEADER);
  }
  
  public void setIsSprayLeader(Boolean value)
  {
    if(value == null)
    {
      setValue(ISSPRAYLEADER, "");
    }
    else
    {
      setValue(ISSPRAYLEADER, java.lang.Boolean.toString(value));
    }
  }
  
  public Boolean getIsSprayOperator()
  {
    return com.terraframe.mojo.constants.MdAttributeBooleanUtil.getTypeSafeValue(getValue(ISSPRAYOPERATOR));
  }
  
  public void validateIsSprayOperator()
  {
    this.validateAttribute(ISSPRAYOPERATOR);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getIsSprayOperatorMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.PersonView.CLASS);
    return mdClassIF.definesAttribute(ISSPRAYOPERATOR);
  }
  
  public void setIsSprayOperator(Boolean value)
  {
    if(value == null)
    {
      setValue(ISSPRAYOPERATOR, "");
    }
    else
    {
      setValue(ISSPRAYOPERATOR, java.lang.Boolean.toString(value));
    }
  }
  
  public Boolean getIsStockStaff()
  {
    return com.terraframe.mojo.constants.MdAttributeBooleanUtil.getTypeSafeValue(getValue(ISSTOCKSTAFF));
  }
  
  public void validateIsStockStaff()
  {
    this.validateAttribute(ISSTOCKSTAFF);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getIsStockStaffMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.PersonView.CLASS);
    return mdClassIF.definesAttribute(ISSTOCKSTAFF);
  }
  
  public void setIsStockStaff(Boolean value)
  {
    if(value == null)
    {
      setValue(ISSTOCKSTAFF, "");
    }
    else
    {
      setValue(ISSTOCKSTAFF, java.lang.Boolean.toString(value));
    }
  }
  
  public String getLastName()
  {
    return getValue(LASTNAME);
  }
  
  public void validateLastName()
  {
    this.validateAttribute(LASTNAME);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getLastNameMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.PersonView.CLASS);
    return mdClassIF.definesAttribute(LASTNAME);
  }
  
  public void setLastName(String value)
  {
    if(value == null)
    {
      setValue(LASTNAME, "");
    }
    else
    {
      setValue(LASTNAME, value);
    }
  }
  
  public String getLeaderId()
  {
    return getValue(LEADERID);
  }
  
  public void validateLeaderId()
  {
    this.validateAttribute(LEADERID);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getLeaderIdMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.PersonView.CLASS);
    return mdClassIF.definesAttribute(LEADERID);
  }
  
  public void setLeaderId(String value)
  {
    if(value == null)
    {
      setValue(LEADERID, "");
    }
    else
    {
      setValue(LEADERID, value);
    }
  }
  
  public String getOperatorId()
  {
    return getValue(OPERATORID);
  }
  
  public void validateOperatorId()
  {
    this.validateAttribute(OPERATORID);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getOperatorIdMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.PersonView.CLASS);
    return mdClassIF.definesAttribute(OPERATORID);
  }
  
  public void setOperatorId(String value)
  {
    if(value == null)
    {
      setValue(OPERATORID, "");
    }
    else
    {
      setValue(OPERATORID, value);
    }
  }
  
  public String getPassword()
  {
    return getValue(PAZZWORD);
  }
  
  public void validatePassword()
  {
    this.validateAttribute(PAZZWORD);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getPasswordMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.PersonView.CLASS);
    return mdClassIF.definesAttribute(PAZZWORD);
  }
  
  public void setPassword(String value)
  {
    if(value == null)
    {
      setValue(PAZZWORD, "");
    }
    else
    {
      setValue(PAZZWORD, value);
    }
  }
  
  public String getPersonId()
  {
    return getValue(PERSONID);
  }
  
  public void validatePersonId()
  {
    this.validateAttribute(PERSONID);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getPersonIdMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.PersonView.CLASS);
    return mdClassIF.definesAttribute(PERSONID);
  }
  
  public void setPersonId(String value)
  {
    if(value == null)
    {
      setValue(PERSONID, "");
    }
    else
    {
      setValue(PERSONID, value);
    }
  }
  
  public String getResidentialGeoId()
  {
    return getValue(RESIDENTIALGEOID);
  }
  
  public void validateResidentialGeoId()
  {
    this.validateAttribute(RESIDENTIALGEOID);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getResidentialGeoIdMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.PersonView.CLASS);
    return mdClassIF.definesAttribute(RESIDENTIALGEOID);
  }
  
  public void setResidentialGeoId(String value)
  {
    if(value == null)
    {
      setValue(RESIDENTIALGEOID, "");
    }
    else
    {
      setValue(RESIDENTIALGEOID, value);
    }
  }
  
  public String getResidentialInformation()
  {
    return getValue(RESIDENTIALINFORMATION);
  }
  
  public void validateResidentialInformation()
  {
    this.validateAttribute(RESIDENTIALINFORMATION);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getResidentialInformationMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.PersonView.CLASS);
    return mdClassIF.definesAttribute(RESIDENTIALINFORMATION);
  }
  
  public void setResidentialInformation(String value)
  {
    if(value == null)
    {
      setValue(RESIDENTIALINFORMATION, "");
    }
    else
    {
      setValue(RESIDENTIALINFORMATION, value);
    }
  }
  
  public dss.vector.solutions.ontology.Term getSex()
  {
    if (getValue(SEX).trim().equals(""))
    {
      return null;
    }
    else
    {
      return dss.vector.solutions.ontology.Term.get(getValue(SEX));
    }
  }
  
  public void validateSex()
  {
    this.validateAttribute(SEX);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getSexMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.PersonView.CLASS);
    return mdClassIF.definesAttribute(SEX);
  }
  
  public void setSex(dss.vector.solutions.ontology.Term value)
  {
    if(value == null)
    {
      setValue(SEX, "");
    }
    else
    {
      setValue(SEX, value.getId());
    }
  }
  
  public String getUsername()
  {
    return getValue(UZERNAME);
  }
  
  public void validateUsername()
  {
    this.validateAttribute(UZERNAME);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getUsernameMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.PersonView.CLASS);
    return mdClassIF.definesAttribute(UZERNAME);
  }
  
  public void setUsername(String value)
  {
    if(value == null)
    {
      setValue(UZERNAME, "");
    }
    else
    {
      setValue(UZERNAME, value);
    }
  }
  
  public String getWorkGeoId()
  {
    return getValue(WORKGEOID);
  }
  
  public void validateWorkGeoId()
  {
    this.validateAttribute(WORKGEOID);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getWorkGeoIdMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.PersonView.CLASS);
    return mdClassIF.definesAttribute(WORKGEOID);
  }
  
  public void setWorkGeoId(String value)
  {
    if(value == null)
    {
      setValue(WORKGEOID, "");
    }
    else
    {
      setValue(WORKGEOID, value);
    }
  }
  
  public String getWorkInformation()
  {
    return getValue(WORKINFORMATION);
  }
  
  public void validateWorkInformation()
  {
    this.validateAttribute(WORKINFORMATION);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getWorkInformationMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.PersonView.CLASS);
    return mdClassIF.definesAttribute(WORKINFORMATION);
  }
  
  public void setWorkInformation(String value)
  {
    if(value == null)
    {
      setValue(WORKINFORMATION, "");
    }
    else
    {
      setValue(WORKINFORMATION, value);
    }
  }
  
  protected String getDeclaredType()
  {
    return CLASS;
  }
  
  public static PersonView get(String id)
  {
    return (PersonView) com.terraframe.mojo.business.View.get(id);
  }
  
  public void applyAsITNRecipient()
  {
    String msg = "This method should never be invoked.  It should be overwritten in dss.vector.solutions.PersonView.java";
    throw new com.terraframe.mojo.dataaccess.metadata.ForbiddenMethodException(msg);
  }
  
  public static final void applyAsITNRecipient(java.lang.String id)
  {
    PersonView _instance = PersonView.get(id);
    _instance.applyAsITNRecipient();
  }
  
  public void applyNonDelegates()
  {
    String msg = "This method should never be invoked.  It should be overwritten in dss.vector.solutions.PersonView.java";
    throw new com.terraframe.mojo.dataaccess.metadata.ForbiddenMethodException(msg);
  }
  
  public static final void applyNonDelegates(java.lang.String id)
  {
    PersonView _instance = PersonView.get(id);
    _instance.applyNonDelegates();
  }
  
  public dss.vector.solutions.PersonWithDelegatesViewQuery getDuplicatesPage(java.lang.String sortAttribute, java.lang.Boolean isAscending, java.lang.Integer pageSize, java.lang.Integer pageNumber)
  {
    String msg = "This method should never be invoked.  It should be overwritten in dss.vector.solutions.PersonView.java";
    throw new com.terraframe.mojo.dataaccess.metadata.ForbiddenMethodException(msg);
  }
  
  public static final dss.vector.solutions.PersonWithDelegatesViewQuery getDuplicatesPage(java.lang.String id, java.lang.String sortAttribute, java.lang.Boolean isAscending, java.lang.Integer pageSize, java.lang.Integer pageNumber)
  {
    PersonView _instance = PersonView.get(id);
    return _instance.getDuplicatesPage(sortAttribute, isAscending, pageSize, pageNumber);
  }
  
  public dss.vector.solutions.PersonWithDelegatesViewQuery searchForDuplicates()
  {
    String msg = "This method should never be invoked.  It should be overwritten in dss.vector.solutions.PersonView.java";
    throw new com.terraframe.mojo.dataaccess.metadata.ForbiddenMethodException(msg);
  }
  
  public static final dss.vector.solutions.PersonWithDelegatesViewQuery searchForDuplicates(java.lang.String id)
  {
    PersonView _instance = PersonView.get(id);
    return _instance.searchForDuplicates();
  }
  
  public String toString()
  {
    if (this.isNew())
    {
      return "New: "+ this.getClassDisplayLabel();
    }
    else
    {
      return super.toString();
    }
  }
}
