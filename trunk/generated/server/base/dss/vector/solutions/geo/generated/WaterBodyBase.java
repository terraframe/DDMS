package dss.vector.solutions.geo.generated;

@com.runwaysdk.business.ClassSignature(hash = 2080078006)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to WaterBody.java
 *
 * @author Autogenerated by RunwaySDK
 */
public abstract class WaterBodyBase extends dss.vector.solutions.geo.generated.GeoEntity implements com.runwaysdk.generation.loader.Reloadable
{
  public final static String CLASS = "dss.vector.solutions.geo.generated.WaterBody";
  private static final long serialVersionUID = 2080078006;
  
  public WaterBodyBase()
  {
    super();
  }
  
  protected String getDeclaredType()
  {
    return CLASS;
  }
  
  public static WaterBodyQuery getAllInstances(String sortAttribute, Boolean ascending, Integer pageSize, Integer pageNumber)
  {
    WaterBodyQuery query = new WaterBodyQuery(new com.runwaysdk.query.QueryFactory());
    com.runwaysdk.business.Entity.getAllInstances(query, sortAttribute, ascending, pageSize, pageNumber);
    return query;
  }
  
  public static WaterBody get(String id)
  {
    return (WaterBody) com.runwaysdk.business.Business.get(id);
  }
  
  public static WaterBody getByKey(String key)
  {
    return (WaterBody) com.runwaysdk.business.Business.get(CLASS, key);
  }
  
  public static WaterBody lock(java.lang.String id)
  {
    WaterBody _instance = WaterBody.get(id);
    _instance.lock();
    
    return _instance;
  }
  
  public static WaterBody unlock(java.lang.String id)
  {
    WaterBody _instance = WaterBody.get(id);
    _instance.unlock();
    
    return _instance;
  }
  
  public String toString()
  {
    if (this.isNew())
    {
      return "New: "+ this.getClassDisplayLabel();
    }
    else
    {
      return super.toString();
    }
  }
}
