package dss.vector.solutions.geo;

@com.runwaysdk.business.ClassSignature(hash = -914632205)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to GeoEntityDefinition.java
 *
 * @author Autogenerated by RunwaySDK
 */
public  abstract  class GeoEntityDefinitionQueryBase extends com.runwaysdk.query.GeneratedViewQuery
 implements com.runwaysdk.generation.loader.Reloadable
{
private static final long serialVersionUID = -914632205;

  public GeoEntityDefinitionQueryBase(com.runwaysdk.query.QueryFactory componentQueryFactory)
  {
    super(componentQueryFactory);
  }

  public GeoEntityDefinitionQueryBase(com.runwaysdk.query.QueryFactory componentQueryFactory, com.runwaysdk.query.ViewQueryBuilder viewQueryBuilder)
  {
    super(componentQueryFactory, viewQueryBuilder);
  }
  public String getClassType()
  {
    return dss.vector.solutions.geo.GeoEntityDefinition.CLASS;
  }
  public com.runwaysdk.query.SelectableChar getDescription()
  {
    return getDescription(null);

  }
 
  public com.runwaysdk.query.SelectableChar getDescription(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getSelectable(dss.vector.solutions.geo.GeoEntityDefinition.DESCRIPTION, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getDescription(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getSelectable(dss.vector.solutions.geo.GeoEntityDefinition.DESCRIPTION, alias, displayLabel);

  }
 
  public com.runwaysdk.query.SelectableChar getDisplayLabel()
  {
    return getDisplayLabel(null);

  }
 
  public com.runwaysdk.query.SelectableChar getDisplayLabel(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getSelectable(dss.vector.solutions.geo.GeoEntityDefinition.DISPLAYLABEL, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getDisplayLabel(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getSelectable(dss.vector.solutions.geo.GeoEntityDefinition.DISPLAYLABEL, alias, displayLabel);

  }
 
  public com.runwaysdk.query.SelectableChar getId()
  {
    return getId(null);

  }
 
  public com.runwaysdk.query.SelectableChar getId(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getSelectable(dss.vector.solutions.geo.GeoEntityDefinition.ID, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getId(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getSelectable(dss.vector.solutions.geo.GeoEntityDefinition.ID, alias, displayLabel);

  }
 
  public com.runwaysdk.query.SelectableChar getParentGeoHierarchyId()
  {
    return getParentGeoHierarchyId(null);

  }
 
  public com.runwaysdk.query.SelectableChar getParentGeoHierarchyId(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getSelectable(dss.vector.solutions.geo.GeoEntityDefinition.PARENTGEOHIERARCHYID, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getParentGeoHierarchyId(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getSelectable(dss.vector.solutions.geo.GeoEntityDefinition.PARENTGEOHIERARCHYID, alias, displayLabel);

  }
 
  public com.runwaysdk.query.SelectableBoolean getPolitical()
  {
    return getPolitical(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getPolitical(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getSelectable(dss.vector.solutions.geo.GeoEntityDefinition.POLITICAL, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getPolitical(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getSelectable(dss.vector.solutions.geo.GeoEntityDefinition.POLITICAL, alias, displayLabel);

  }
 
  public com.runwaysdk.query.SelectableBoolean getPopulationAllowed()
  {
    return getPopulationAllowed(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getPopulationAllowed(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getSelectable(dss.vector.solutions.geo.GeoEntityDefinition.POPULATIONALLOWED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getPopulationAllowed(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getSelectable(dss.vector.solutions.geo.GeoEntityDefinition.POPULATIONALLOWED, alias, displayLabel);

  }
 
  public com.runwaysdk.query.SelectableBoolean getSprayTargetAllowed()
  {
    return getSprayTargetAllowed(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getSprayTargetAllowed(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getSelectable(dss.vector.solutions.geo.GeoEntityDefinition.SPRAYTARGETALLOWED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getSprayTargetAllowed(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getSelectable(dss.vector.solutions.geo.GeoEntityDefinition.SPRAYTARGETALLOWED, alias, displayLabel);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getTerm()
  {
    return getTerm(null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getTerm(String alias)
  {

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getSelectable(dss.vector.solutions.geo.GeoEntityDefinition.TERM, alias, null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getTerm(String alias, String displayLabel)
  {

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getSelectable(dss.vector.solutions.geo.GeoEntityDefinition.TERM, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getTypeName()
  {
    return getTypeName(null);

  }
 
  public com.runwaysdk.query.SelectableChar getTypeName(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getSelectable(dss.vector.solutions.geo.GeoEntityDefinition.TYPENAME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getTypeName(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getSelectable(dss.vector.solutions.geo.GeoEntityDefinition.TYPENAME, alias, displayLabel);

  }
 
  /**  
   * Returns an iterator of Business objects that match the query criteria specified
   * on this query object. 
   * @return iterator of Business objects that match the query criteria specified
   * on this query object.
   */
  @java.lang.SuppressWarnings("unchecked")
  public com.runwaysdk.query.OIterator<? extends GeoEntityDefinition> getIterator()
  {
    com.runwaysdk.query.ValueIterator valueIterator;
    if (_pageSize != null && _pageNumber != null)
    {
      valueIterator = (com.runwaysdk.query.ValueIterator<com.runwaysdk.dataaccess.ValueObject>)this.getComponentQuery().getIterator(_pageSize, _pageNumber);
    }
    else
    {
      valueIterator = (com.runwaysdk.query.ValueIterator<com.runwaysdk.dataaccess.ValueObject>)this.getComponentQuery().getIterator();
    }
    return new com.runwaysdk.query.ViewIterator<GeoEntityDefinition>(this.getMdClassIF(), valueIterator);
  }

}
