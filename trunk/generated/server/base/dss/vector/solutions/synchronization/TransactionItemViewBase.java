package dss.vector.solutions.synchronization;

@com.terraframe.mojo.business.ClassSignature(hash = 728071995)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to TransactionItemView.java
 *
 * @author Autogenerated by TerraFrame
 */
public abstract class TransactionItemViewBase extends com.terraframe.mojo.business.View implements com.terraframe.mojo.generation.loader.Reloadable
{
  public final static String CLASS = "dss.vector.solutions.synchronization.TransactionItemView";
  public static java.lang.String ACTIONLABEL = "actionLabel";
  public static java.lang.String COMPONENTID = "componentId";
  public static java.lang.String COMPONENTLABEL = "componentLabel";
  public static java.lang.String COMPONENTSEQ = "componentSeq";
  public static java.lang.String ID = "id";
  public static java.lang.String ITEMID = "itemId";
  private static final long serialVersionUID = 728071995;
  
  public TransactionItemViewBase()
  {
    super();
  }
  
  public String getActionLabel()
  {
    return getValue(ACTIONLABEL);
  }
  
  public void validateActionLabel()
  {
    this.validateAttribute(ACTIONLABEL);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getActionLabelMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.synchronization.TransactionItemView.CLASS);
    return mdClassIF.definesAttribute(ACTIONLABEL);
  }
  
  public void setActionLabel(String value)
  {
    if(value == null)
    {
      setValue(ACTIONLABEL, "");
    }
    else
    {
      setValue(ACTIONLABEL, value);
    }
  }
  
  public String getComponentId()
  {
    return getValue(COMPONENTID);
  }
  
  public void validateComponentId()
  {
    this.validateAttribute(COMPONENTID);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getComponentIdMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.synchronization.TransactionItemView.CLASS);
    return mdClassIF.definesAttribute(COMPONENTID);
  }
  
  public void setComponentId(String value)
  {
    if(value == null)
    {
      setValue(COMPONENTID, "");
    }
    else
    {
      setValue(COMPONENTID, value);
    }
  }
  
  public String getComponentLabel()
  {
    return getValue(COMPONENTLABEL);
  }
  
  public void validateComponentLabel()
  {
    this.validateAttribute(COMPONENTLABEL);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getComponentLabelMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.synchronization.TransactionItemView.CLASS);
    return mdClassIF.definesAttribute(COMPONENTLABEL);
  }
  
  public void setComponentLabel(String value)
  {
    if(value == null)
    {
      setValue(COMPONENTLABEL, "");
    }
    else
    {
      setValue(COMPONENTLABEL, value);
    }
  }
  
  public Long getComponentSeq()
  {
    return com.terraframe.mojo.constants.MdAttributeLongUtil.getTypeSafeValue(getValue(COMPONENTSEQ));
  }
  
  public void validateComponentSeq()
  {
    this.validateAttribute(COMPONENTSEQ);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getComponentSeqMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.synchronization.TransactionItemView.CLASS);
    return mdClassIF.definesAttribute(COMPONENTSEQ);
  }
  
  public void setComponentSeq(Long value)
  {
    if(value == null)
    {
      setValue(COMPONENTSEQ, "");
    }
    else
    {
      setValue(COMPONENTSEQ, java.lang.Long.toString(value));
    }
  }
  
  public String getId()
  {
    return getValue(ID);
  }
  
  public void validateId()
  {
    this.validateAttribute(ID);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getIdMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.synchronization.TransactionItemView.CLASS);
    return mdClassIF.definesAttribute(ID);
  }
  
  public String getItemId()
  {
    return getValue(ITEMID);
  }
  
  public void validateItemId()
  {
    this.validateAttribute(ITEMID);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getItemIdMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.synchronization.TransactionItemView.CLASS);
    return mdClassIF.definesAttribute(ITEMID);
  }
  
  public void setItemId(String value)
  {
    if(value == null)
    {
      setValue(ITEMID, "");
    }
    else
    {
      setValue(ITEMID, value);
    }
  }
  
  protected String getDeclaredType()
  {
    return CLASS;
  }
  
  public static TransactionItemView get(String id)
  {
    return (TransactionItemView) com.terraframe.mojo.business.View.get(id);
  }
  
  public static dss.vector.solutions.synchronization.TransactionItemViewQuery getQuery(java.lang.String recordId, java.lang.String sortAttribute, java.lang.Boolean isAscending, java.lang.Integer pageSize, java.lang.Integer pageNumber)
  {
    String msg = "This method should never be invoked.  It should be overwritten in dss.vector.solutions.synchronization.TransactionItemView.java";
    throw new com.terraframe.mojo.dataaccess.metadata.ForbiddenMethodException(msg);
  }
  
  public static com.terraframe.mojo.system.transaction.TransactionRecordQuery getRecordQuery(java.lang.String sortAttribute, java.lang.Boolean isAscending, java.lang.Integer pageSize, java.lang.Integer pageNumber)
  {
    String msg = "This method should never be invoked.  It should be overwritten in dss.vector.solutions.synchronization.TransactionItemView.java";
    throw new com.terraframe.mojo.dataaccess.metadata.ForbiddenMethodException(msg);
  }
  
  public String toString()
  {
    if (this.isNew())
    {
      return "New: "+ this.getClassDisplayLabel();
    }
    else
    {
      return super.toString();
    }
  }
}
