package dss.vector.solutions.synchronization;

@com.runwaysdk.business.ClassSignature(hash = -1159998613)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to TransactionItemFullView.java
 *
 * @author Autogenerated by RunwaySDK
 */
public abstract class TransactionItemFullViewBase extends com.runwaysdk.business.View implements com.runwaysdk.generation.loader.Reloadable
{
  public final static String CLASS = "dss.vector.solutions.synchronization.TransactionItemFullView";
  public static java.lang.String ACTIONLABEL = "actionLabel";
  public static java.lang.String COMPONENTID = "componentId";
  public static java.lang.String COMPONENTSEQ = "componentSeq";
  public static java.lang.String COMPONENTSITEMASTER = "componentSiteMaster";
  public static java.lang.String ID = "id";
  public static java.lang.String RECORDID = "recordId";
  public static java.lang.String XMLRECORD = "xmlRecord";
  private static final long serialVersionUID = -1159998613;
  
  public TransactionItemFullViewBase()
  {
    super();
  }
  
  public String getActionLabel()
  {
    return getValue(ACTIONLABEL);
  }
  
  public void validateActionLabel()
  {
    this.validateAttribute(ACTIONLABEL);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF getActionLabelMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.synchronization.TransactionItemFullView.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF)mdClassIF.definesAttribute(ACTIONLABEL);
  }
  
  public void setActionLabel(String value)
  {
    if(value == null)
    {
      setValue(ACTIONLABEL, "");
    }
    else
    {
      setValue(ACTIONLABEL, value);
    }
  }
  
  public String getComponentId()
  {
    return getValue(COMPONENTID);
  }
  
  public void validateComponentId()
  {
    this.validateAttribute(COMPONENTID);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeVirtualDAOIF getComponentIdMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.synchronization.TransactionItemFullView.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeVirtualDAOIF)mdClassIF.definesAttribute(COMPONENTID);
  }
  
  public void setComponentId(String value)
  {
    if(value == null)
    {
      setValue(COMPONENTID, "");
    }
    else
    {
      setValue(COMPONENTID, value);
    }
  }
  
  public Long getComponentSeq()
  {
    return com.runwaysdk.constants.MdAttributeLongUtil.getTypeSafeValue(getValue(COMPONENTSEQ));
  }
  
  public void validateComponentSeq()
  {
    this.validateAttribute(COMPONENTSEQ);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeVirtualDAOIF getComponentSeqMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.synchronization.TransactionItemFullView.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeVirtualDAOIF)mdClassIF.definesAttribute(COMPONENTSEQ);
  }
  
  public void setComponentSeq(Long value)
  {
    if(value == null)
    {
      setValue(COMPONENTSEQ, "");
    }
    else
    {
      setValue(COMPONENTSEQ, java.lang.Long.toString(value));
    }
  }
  
  public String getComponentSiteMaster()
  {
    return getValue(COMPONENTSITEMASTER);
  }
  
  public void validateComponentSiteMaster()
  {
    this.validateAttribute(COMPONENTSITEMASTER);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeVirtualDAOIF getComponentSiteMasterMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.synchronization.TransactionItemFullView.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeVirtualDAOIF)mdClassIF.definesAttribute(COMPONENTSITEMASTER);
  }
  
  public void setComponentSiteMaster(String value)
  {
    if(value == null)
    {
      setValue(COMPONENTSITEMASTER, "");
    }
    else
    {
      setValue(COMPONENTSITEMASTER, value);
    }
  }
  
  public String getId()
  {
    return getValue(ID);
  }
  
  public void validateId()
  {
    this.validateAttribute(ID);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF getIdMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.synchronization.TransactionItemFullView.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF)mdClassIF.definesAttribute(ID);
  }
  
  public String getRecordId()
  {
    return getValue(RECORDID);
  }
  
  public void validateRecordId()
  {
    this.validateAttribute(RECORDID);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF getRecordIdMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.synchronization.TransactionItemFullView.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF)mdClassIF.definesAttribute(RECORDID);
  }
  
  public void setRecordId(String value)
  {
    if(value == null)
    {
      setValue(RECORDID, "");
    }
    else
    {
      setValue(RECORDID, value);
    }
  }
  
  public String getXmlRecord()
  {
    return getValue(XMLRECORD);
  }
  
  public void validateXmlRecord()
  {
    this.validateAttribute(XMLRECORD);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeVirtualDAOIF getXmlRecordMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.synchronization.TransactionItemFullView.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeVirtualDAOIF)mdClassIF.definesAttribute(XMLRECORD);
  }
  
  public void setXmlRecord(String value)
  {
    if(value == null)
    {
      setValue(XMLRECORD, "");
    }
    else
    {
      setValue(XMLRECORD, value);
    }
  }
  
  protected String getDeclaredType()
  {
    return CLASS;
  }
  
  public static TransactionItemFullView get(String id)
  {
    return (TransactionItemFullView) com.runwaysdk.business.View.get(id);
  }
  
  public static dss.vector.solutions.synchronization.TransactionItemFullView getByItemId(java.lang.String itemID)
  {
    String msg = "This method should never be invoked.  It should be overwritten in dss.vector.solutions.synchronization.TransactionItemFullView.java";
    throw new com.runwaysdk.dataaccess.metadata.ForbiddenMethodException(msg);
  }
  
  public String toString()
  {
    if (this.isNew())
    {
      return "New: "+ this.getClassDisplayLabel();
    }
    else
    {
      return super.toString();
    }
  }
}
