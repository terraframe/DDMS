package dss.vector.solutions.stock;

@com.terraframe.mojo.business.ClassSignature(hash = 118856767)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to StockEvent.java
 *
 * @author Autogenerated by TerraFrame
 */
public abstract class StockEventBase extends com.terraframe.mojo.business.Business implements com.terraframe.mojo.generation.loader.Reloadable
{
  public final static String CLASS = "dss.vector.solutions.stock.StockEvent";
  public static java.lang.String COST = "cost";
  public static java.lang.String CREATEDATE = "createDate";
  public static java.lang.String CREATEDBY = "createdBy";
  public static java.lang.String ENTITYDOMAIN = "entityDomain";
  public static java.lang.String EVENTDATE = "eventDate";
  public static java.lang.String ID = "id";
  public static java.lang.String ITEM = "item";
  public static java.lang.String KEYNAME = "keyName";
  public static java.lang.String LASTUPDATEDATE = "lastUpdateDate";
  public static java.lang.String LASTUPDATEDBY = "lastUpdatedBy";
  public static java.lang.String LOCKEDBY = "lockedBy";
  public static java.lang.String OTHERPARTY = "otherParty";
  public static java.lang.String OWNER = "owner";
  public static java.lang.String QUANTITY = "quantity";
  public static java.lang.String SEQ = "seq";
  public static java.lang.String SITEMASTER = "siteMaster";
  public static java.lang.String STAFF = "staff";
  public static java.lang.String STOCKDEPOT = "stockDepot";
  public static java.lang.String TRANSACTIONTYPE = "transactionType";
  public static java.lang.String TYPE = "type";
  private static final long serialVersionUID = 118856767;
  
  public StockEventBase()
  {
    super();
  }
  
  public java.math.BigDecimal getCost()
  {
    return com.terraframe.mojo.constants.MdAttributeDecimalUtil.getTypeSafeValue(getValue(COST));
  }
  
  public void validateCost()
  {
    this.validateAttribute(COST);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getCostMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.stock.StockEvent.CLASS);
    return mdClassIF.definesAttribute(COST);
  }
  
  public void setCost(java.math.BigDecimal value)
  {
    if(value == null)
    {
      setValue(COST, "");
    }
    else
    {
      setValue(COST, value.toString());
    }
  }
  
  public java.util.Date getCreateDate()
  {
    return com.terraframe.mojo.constants.MdAttributeDateTimeUtil.getTypeSafeValue(getValue(CREATEDATE));
  }
  
  public void validateCreateDate()
  {
    this.validateAttribute(CREATEDATE);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getCreateDateMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.stock.StockEvent.CLASS);
    return mdClassIF.definesAttribute(CREATEDATE);
  }
  
  public com.terraframe.mojo.system.SingleActor getCreatedBy()
  {
    if (getValue(CREATEDBY).trim().equals(""))
    {
      return null;
    }
    else
    {
      return com.terraframe.mojo.system.SingleActor.get(getValue(CREATEDBY));
    }
  }
  
  public void validateCreatedBy()
  {
    this.validateAttribute(CREATEDBY);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getCreatedByMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.stock.StockEvent.CLASS);
    return mdClassIF.definesAttribute(CREATEDBY);
  }
  
  public com.terraframe.mojo.system.metadata.MdDomain getEntityDomain()
  {
    if (getValue(ENTITYDOMAIN).trim().equals(""))
    {
      return null;
    }
    else
    {
      return com.terraframe.mojo.system.metadata.MdDomain.get(getValue(ENTITYDOMAIN));
    }
  }
  
  public void validateEntityDomain()
  {
    this.validateAttribute(ENTITYDOMAIN);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getEntityDomainMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.stock.StockEvent.CLASS);
    return mdClassIF.definesAttribute(ENTITYDOMAIN);
  }
  
  public void setEntityDomain(com.terraframe.mojo.system.metadata.MdDomain value)
  {
    if(value == null)
    {
      setValue(ENTITYDOMAIN, "");
    }
    else
    {
      setValue(ENTITYDOMAIN, value.getId());
    }
  }
  
  public java.util.Date getEventDate()
  {
    return com.terraframe.mojo.constants.MdAttributeDateUtil.getTypeSafeValue(getValue(EVENTDATE));
  }
  
  public void validateEventDate()
  {
    this.validateAttribute(EVENTDATE);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getEventDateMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.stock.StockEvent.CLASS);
    return mdClassIF.definesAttribute(EVENTDATE);
  }
  
  public void setEventDate(java.util.Date value)
  {
    if(value == null)
    {
      setValue(EVENTDATE, "");
    }
    else
    {
      setValue(EVENTDATE, new java.text.SimpleDateFormat(com.terraframe.mojo.constants.Constants.DATE_FORMAT).format(value));
    }
  }
  
  public String getId()
  {
    return getValue(ID);
  }
  
  public void validateId()
  {
    this.validateAttribute(ID);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getIdMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.stock.StockEvent.CLASS);
    return mdClassIF.definesAttribute(ID);
  }
  
  public dss.vector.solutions.stock.StockItem getItem()
  {
    if (getValue(ITEM).trim().equals(""))
    {
      return null;
    }
    else
    {
      return dss.vector.solutions.stock.StockItem.get(getValue(ITEM));
    }
  }
  
  public void validateItem()
  {
    this.validateAttribute(ITEM);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getItemMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.stock.StockEvent.CLASS);
    return mdClassIF.definesAttribute(ITEM);
  }
  
  public void setItem(dss.vector.solutions.stock.StockItem value)
  {
    if(value == null)
    {
      setValue(ITEM, "");
    }
    else
    {
      setValue(ITEM, value.getId());
    }
  }
  
  public String getKeyName()
  {
    return getValue(KEYNAME);
  }
  
  public void validateKeyName()
  {
    this.validateAttribute(KEYNAME);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getKeyNameMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.stock.StockEvent.CLASS);
    return mdClassIF.definesAttribute(KEYNAME);
  }
  
  public void setKeyName(String value)
  {
    if(value == null)
    {
      setValue(KEYNAME, "");
    }
    else
    {
      setValue(KEYNAME, value);
    }
  }
  
  public java.util.Date getLastUpdateDate()
  {
    return com.terraframe.mojo.constants.MdAttributeDateTimeUtil.getTypeSafeValue(getValue(LASTUPDATEDATE));
  }
  
  public void validateLastUpdateDate()
  {
    this.validateAttribute(LASTUPDATEDATE);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getLastUpdateDateMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.stock.StockEvent.CLASS);
    return mdClassIF.definesAttribute(LASTUPDATEDATE);
  }
  
  public com.terraframe.mojo.system.SingleActor getLastUpdatedBy()
  {
    if (getValue(LASTUPDATEDBY).trim().equals(""))
    {
      return null;
    }
    else
    {
      return com.terraframe.mojo.system.SingleActor.get(getValue(LASTUPDATEDBY));
    }
  }
  
  public void validateLastUpdatedBy()
  {
    this.validateAttribute(LASTUPDATEDBY);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getLastUpdatedByMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.stock.StockEvent.CLASS);
    return mdClassIF.definesAttribute(LASTUPDATEDBY);
  }
  
  public com.terraframe.mojo.system.Users getLockedBy()
  {
    if (getValue(LOCKEDBY).trim().equals(""))
    {
      return null;
    }
    else
    {
      return com.terraframe.mojo.system.Users.get(getValue(LOCKEDBY));
    }
  }
  
  public void validateLockedBy()
  {
    this.validateAttribute(LOCKEDBY);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getLockedByMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.stock.StockEvent.CLASS);
    return mdClassIF.definesAttribute(LOCKEDBY);
  }
  
  public String getOtherParty()
  {
    return getValue(OTHERPARTY);
  }
  
  public void validateOtherParty()
  {
    this.validateAttribute(OTHERPARTY);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getOtherPartyMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.stock.StockEvent.CLASS);
    return mdClassIF.definesAttribute(OTHERPARTY);
  }
  
  public void setOtherParty(String value)
  {
    if(value == null)
    {
      setValue(OTHERPARTY, "");
    }
    else
    {
      setValue(OTHERPARTY, value);
    }
  }
  
  public com.terraframe.mojo.system.Actor getOwner()
  {
    if (getValue(OWNER).trim().equals(""))
    {
      return null;
    }
    else
    {
      return com.terraframe.mojo.system.Actor.get(getValue(OWNER));
    }
  }
  
  public void validateOwner()
  {
    this.validateAttribute(OWNER);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getOwnerMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.stock.StockEvent.CLASS);
    return mdClassIF.definesAttribute(OWNER);
  }
  
  public void setOwner(com.terraframe.mojo.system.Actor value)
  {
    if(value == null)
    {
      setValue(OWNER, "");
    }
    else
    {
      setValue(OWNER, value.getId());
    }
  }
  
  public Integer getQuantity()
  {
    return com.terraframe.mojo.constants.MdAttributeIntegerUtil.getTypeSafeValue(getValue(QUANTITY));
  }
  
  public void validateQuantity()
  {
    this.validateAttribute(QUANTITY);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getQuantityMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.stock.StockEvent.CLASS);
    return mdClassIF.definesAttribute(QUANTITY);
  }
  
  public void setQuantity(Integer value)
  {
    if(value == null)
    {
      setValue(QUANTITY, "");
    }
    else
    {
      setValue(QUANTITY, java.lang.Integer.toString(value));
    }
  }
  
  public Long getSeq()
  {
    return com.terraframe.mojo.constants.MdAttributeLongUtil.getTypeSafeValue(getValue(SEQ));
  }
  
  public void validateSeq()
  {
    this.validateAttribute(SEQ);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getSeqMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.stock.StockEvent.CLASS);
    return mdClassIF.definesAttribute(SEQ);
  }
  
  public String getSiteMaster()
  {
    return getValue(SITEMASTER);
  }
  
  public void validateSiteMaster()
  {
    this.validateAttribute(SITEMASTER);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getSiteMasterMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.stock.StockEvent.CLASS);
    return mdClassIF.definesAttribute(SITEMASTER);
  }
  
  public dss.vector.solutions.stock.StockStaff getStaff()
  {
    if (getValue(STAFF).trim().equals(""))
    {
      return null;
    }
    else
    {
      return dss.vector.solutions.stock.StockStaff.get(getValue(STAFF));
    }
  }
  
  public void validateStaff()
  {
    this.validateAttribute(STAFF);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getStaffMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.stock.StockEvent.CLASS);
    return mdClassIF.definesAttribute(STAFF);
  }
  
  public void setStaff(dss.vector.solutions.stock.StockStaff value)
  {
    if(value == null)
    {
      setValue(STAFF, "");
    }
    else
    {
      setValue(STAFF, value.getId());
    }
  }
  
  public dss.vector.solutions.geo.generated.GeoEntity getStockDepot()
  {
    if (getValue(STOCKDEPOT).trim().equals(""))
    {
      return null;
    }
    else
    {
      return dss.vector.solutions.geo.generated.GeoEntity.get(getValue(STOCKDEPOT));
    }
  }
  
  public void validateStockDepot()
  {
    this.validateAttribute(STOCKDEPOT);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getStockDepotMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.stock.StockEvent.CLASS);
    return mdClassIF.definesAttribute(STOCKDEPOT);
  }
  
  public void setStockDepot(dss.vector.solutions.geo.generated.GeoEntity value)
  {
    if(value == null)
    {
      setValue(STOCKDEPOT, "");
    }
    else
    {
      setValue(STOCKDEPOT, value.getId());
    }
  }
  
  @SuppressWarnings("unchecked")
  public java.util.List<dss.vector.solutions.stock.EventOption> getTransactionType()
  {
    return (java.util.List<dss.vector.solutions.stock.EventOption>) getEnumValues(TRANSACTIONTYPE);
  }
  
  public void addTransactionType(dss.vector.solutions.stock.EventOption value)
  {
    if(value != null)
    {
      addEnumItem(TRANSACTIONTYPE, value.getId());
    }
  }
  
  public void removeTransactionType(dss.vector.solutions.stock.EventOption value)
  {
    if(value != null)
    {
      removeEnumItem(TRANSACTIONTYPE, value.getId());
    }
  }
  
  public void clearTransactionType()
  {
    clearEnum(TRANSACTIONTYPE);
  }
  
  public void validateTransactionType()
  {
    this.validateAttribute(TRANSACTIONTYPE);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getTransactionTypeMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.stock.StockEvent.CLASS);
    return mdClassIF.definesAttribute(TRANSACTIONTYPE);
  }
  
  public String getType()
  {
    return getValue(TYPE);
  }
  
  public void validateType()
  {
    this.validateAttribute(TYPE);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getTypeMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.stock.StockEvent.CLASS);
    return mdClassIF.definesAttribute(TYPE);
  }
  
  protected String getDeclaredType()
  {
    return CLASS;
  }
  
  public static StockEventQuery getAllInstances(String sortAttribute, Boolean ascending, Integer pageSize, Integer pageNumber)
  {
    StockEventQuery query = new StockEventQuery(new com.terraframe.mojo.query.QueryFactory());
    com.terraframe.mojo.business.Entity.getAllInstances(query, sortAttribute, ascending, pageSize, pageNumber);
    return query;
  }
  
  public static StockEvent get(String id)
  {
    return (StockEvent) com.terraframe.mojo.business.Business.get(id);
  }
  
  public static StockEvent getByKey(String key)
  {
    return (StockEvent) com.terraframe.mojo.business.Business.get(CLASS, key);
  }
  
  public dss.vector.solutions.stock.StockEventView getView()
  {
    String msg = "This method should never be invoked.  It should be overwritten in dss.vector.solutions.stock.StockEvent.java";
    throw new com.terraframe.mojo.dataaccess.metadata.ForbiddenMethodException(msg);
  }
  
  public static final dss.vector.solutions.stock.StockEventView getView(java.lang.String id)
  {
    StockEvent _instance = StockEvent.get(id);
    return _instance.getView();
  }
  
  public dss.vector.solutions.stock.StockEventView lockView()
  {
    String msg = "This method should never be invoked.  It should be overwritten in dss.vector.solutions.stock.StockEvent.java";
    throw new com.terraframe.mojo.dataaccess.metadata.ForbiddenMethodException(msg);
  }
  
  public static final dss.vector.solutions.stock.StockEventView lockView(java.lang.String id)
  {
    StockEvent _instance = StockEvent.get(id);
    return _instance.lockView();
  }
  
  public dss.vector.solutions.stock.StockEventView unlockView()
  {
    String msg = "This method should never be invoked.  It should be overwritten in dss.vector.solutions.stock.StockEvent.java";
    throw new com.terraframe.mojo.dataaccess.metadata.ForbiddenMethodException(msg);
  }
  
  public static final dss.vector.solutions.stock.StockEventView unlockView(java.lang.String id)
  {
    StockEvent _instance = StockEvent.get(id);
    return _instance.unlockView();
  }
  
  public static StockEvent lock(java.lang.String id)
  {
    StockEvent _instance = StockEvent.get(id);
    _instance.lock();
    
    return _instance;
  }
  
  public static StockEvent unlock(java.lang.String id)
  {
    StockEvent _instance = StockEvent.get(id);
    _instance.unlock();
    
    return _instance;
  }
  
  public String toString()
  {
    if (this.isNew())
    {
      return "New: "+ this.getClassDisplayLabel();
    }
    else
    {
      return super.toString();
    }
  }
}
