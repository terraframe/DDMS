package dss.vector.solutions;

@com.terraframe.mojo.business.ClassSignature(hash = 1279485858)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to PointStyle.java
 *
 * @author Autogenerated by TerraFrame
 */
public  class PointStyleQuery extends dss.vector.solutions.query.GeometryStyleQuery
 implements com.terraframe.mojo.generation.loader.Reloadable
{
private static final long serialVersionUID = 1279485858;

  public PointStyleQuery(com.terraframe.mojo.query.QueryFactory componentQueryFactory)
  {
    super(componentQueryFactory);
    if (this.getComponentQuery() == null)
    {
      com.terraframe.mojo.business.BusinessQuery businessQuery = componentQueryFactory.businessQuery(this.getClassType());

       this.setBusinessQuery(businessQuery);
    }
  }

  public String getClassType()
  {
    return dss.vector.solutions.PointStyle.CLASS;
  }
  public dss.vector.solutions.query.WellKnownNamesMasterQuery.WellKnownNamesQueryIF getWellKnownName()
  {
    return getWellKnownName(null);

  }
 
  public dss.vector.solutions.query.WellKnownNamesMasterQuery.WellKnownNamesQueryIF getWellKnownName(String alias)
  {

    com.terraframe.mojo.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap("wellKnownName");

    return (dss.vector.solutions.query.WellKnownNamesMasterQuery.WellKnownNamesQueryIF)this.getComponentQuery().internalAttributeFactory("wellKnownName", mdAttributeIF, this, alias, null);

  }
 
  public dss.vector.solutions.query.WellKnownNamesMasterQuery.WellKnownNamesQueryIF getWellKnownName(String alias, String displayLabel)
  {

    com.terraframe.mojo.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap("wellKnownName");

    return (dss.vector.solutions.query.WellKnownNamesMasterQuery.WellKnownNamesQueryIF)this.getComponentQuery().internalAttributeFactory("wellKnownName", mdAttributeIF, this, alias, displayLabel);

  }
  protected com.terraframe.mojo.query.AttributeEnumeration enumerationFactory( com.terraframe.mojo.dataaccess.MdAttributeEnumerationDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  String mdEnumerationTableName, com.terraframe.mojo.dataaccess.MdBusinessDAOIF masterListMdBusinessIF, String masterListTalbeAlias, com.terraframe.mojo.query.ComponentQuery rootQuery, java.util.Set<com.terraframe.mojo.query.Join> tableJoinSet, String userDefinedAlias, String userDefinedDisplayLabel)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals("wellKnownName")) 
    {
       return new dss.vector.solutions.query.WellKnownNamesMasterQuery.WellKnownNamesQuery((com.terraframe.mojo.dataaccess.MdAttributeEnumerationDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdEnumerationTableName, masterListMdBusinessIF, masterListTalbeAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else 
    {
      return super.enumerationFactory(mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, mdEnumerationTableName, masterListMdBusinessIF, masterListTalbeAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
  }

  /**  
   * Returns an iterator of Business objects that match the query criteria specified
   * on this query object. 
   * @return iterator of Business objects that match the query criteria specified
   * on this query object.
   */
  public com.terraframe.mojo.query.OIterator<? extends PointStyle> getIterator()
  {
    String sqlStmt;
    if (_limit != null && _skip != null)
    {
      sqlStmt = this.getComponentQuery().getSQL(_limit, _skip);
    }
    else
    {
      sqlStmt = this.getComponentQuery().getSQL();
    }
    java.util.Map<String, com.terraframe.mojo.query.ColumnInfo> columnInfoMap = this.getComponentQuery().getColumnInfoMap();

    java.sql.ResultSet results = com.terraframe.mojo.dataaccess.database.Database.query(sqlStmt);
    return new com.terraframe.mojo.business.BusinessIterator<PointStyle>(this.getComponentQuery().getMdEntityIF(), columnInfoMap, results);
  }


/**
 * Interface that masks all type unsafe query methods and defines all type safe methods.
 * This type is used when a join is performed on this class as a reference.
 **/
  public interface PointStyleQueryReferenceIF extends com.terraframe.mojo.generation.loader.Reloadable, dss.vector.solutions.query.GeometryStyleQuery.GeometryStyleQueryReferenceIF
  {

  public dss.vector.solutions.query.WellKnownNamesMasterQuery.WellKnownNamesQueryIF getWellKnownName();
  public dss.vector.solutions.query.WellKnownNamesMasterQuery.WellKnownNamesQueryIF getWellKnownName(String alias);
  public dss.vector.solutions.query.WellKnownNamesMasterQuery.WellKnownNamesQueryIF getWellKnownName(String alias, String displayLabel);

    public com.terraframe.mojo.query.BasicCondition EQ(dss.vector.solutions.PointStyle pointStyle);

    public com.terraframe.mojo.query.BasicCondition NE(dss.vector.solutions.PointStyle pointStyle);

  }

/**
 * Implements type safe query methods.
 * This type is used when a join is performed on this class as a reference.
 **/
  public static class PointStyleQueryReference extends dss.vector.solutions.query.GeometryStyleQuery.GeometryStyleQueryReference
 implements PointStyleQueryReferenceIF
, com.terraframe.mojo.generation.loader.Reloadable
  {
private static final long serialVersionUID = -713708732;

  public PointStyleQueryReference(com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias, com.terraframe.mojo.dataaccess.MdBusinessDAOIF referenceMdBusinessIF, String referenceTableAlias, com.terraframe.mojo.query.ComponentQuery rootQuery, java.util.Set<com.terraframe.mojo.query.Join> tableJoinSet, String alias, String displayLabel)
  {
    super(mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, alias, displayLabel);

  }


    public com.terraframe.mojo.query.BasicCondition EQ(dss.vector.solutions.PointStyle pointStyle)
    {
      return this.EQ(pointStyle.getId());
    }

    public com.terraframe.mojo.query.BasicCondition NE(dss.vector.solutions.PointStyle pointStyle)
    {
      return this.NE(pointStyle.getId());
    }

  public dss.vector.solutions.query.WellKnownNamesMasterQuery.WellKnownNamesQueryIF getWellKnownName()
  {
    return getWellKnownName(null);

  }
 
  public dss.vector.solutions.query.WellKnownNamesMasterQuery.WellKnownNamesQueryIF getWellKnownName(String alias)
  {
    return (dss.vector.solutions.query.WellKnownNamesMasterQuery.WellKnownNamesQueryIF)this.attributeFactory("wellKnownName", "com.terraframe.mojo.system.metadata.MdAttributeEnumeration", alias, null);

  }
 
  public dss.vector.solutions.query.WellKnownNamesMasterQuery.WellKnownNamesQueryIF getWellKnownName(String alias, String displayLabel)
  {
    return (dss.vector.solutions.query.WellKnownNamesMasterQuery.WellKnownNamesQueryIF)this.attributeFactory("wellKnownName", "com.terraframe.mojo.system.metadata.MdAttributeEnumeration", alias, displayLabel);

  }
  protected com.terraframe.mojo.query.AttributeEnumeration enumerationFactory( com.terraframe.mojo.dataaccess.MdAttributeEnumerationDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  String mdEnumerationTableName, com.terraframe.mojo.dataaccess.MdBusinessDAOIF masterListMdBusinessIF, String masterListTalbeAlias, com.terraframe.mojo.query.ComponentQuery rootQuery, java.util.Set<com.terraframe.mojo.query.Join> tableJoinSet, String userDefinedAlias, String userDefinedDisplayLabel)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals("wellKnownName")) 
    {
       return new dss.vector.solutions.query.WellKnownNamesMasterQuery.WellKnownNamesQuery((com.terraframe.mojo.dataaccess.MdAttributeEnumerationDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdEnumerationTableName, masterListMdBusinessIF, masterListTalbeAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else 
    {
      return super.enumerationFactory(mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, mdEnumerationTableName, masterListMdBusinessIF, masterListTalbeAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
  }

  }
}
