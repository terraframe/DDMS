package dss.vector.solutions.irs;

@com.terraframe.mojo.business.ClassSignature(hash = -378268809)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to SprayOperatorView.java
 *
 * @author Autogenerated by TerraFrame
 */
public abstract class SprayOperatorViewBase extends com.terraframe.mojo.business.View implements com.terraframe.mojo.generation.loader.Reloadable
{
  public final static String CLASS = "dss.vector.solutions.irs.SprayOperatorView";
  public static java.lang.String ACTORID = "actorId";
  public static java.lang.String FIRSTNAME = "firstName";
  public static java.lang.String ID = "id";
  public static java.lang.String ISASSIGNED = "isAssigned";
  public static java.lang.String LASTNAME = "lastName";
  public static java.lang.String OPERATORID = "operatorId";
  public static java.lang.String TEAMID = "teamId";
  private static final long serialVersionUID = -378268809;
  
  public SprayOperatorViewBase()
  {
    super();
  }
  
  public String getActorId()
  {
    return getValue(ACTORID);
  }
  
  public void validateActorId()
  {
    this.validateAttribute(ACTORID);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getActorIdMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.irs.SprayOperatorView.CLASS);
    return mdClassIF.definesAttribute(ACTORID);
  }
  
  public void setActorId(String value)
  {
    if(value == null)
    {
      setValue(ACTORID, "");
    }
    else
    {
      setValue(ACTORID, value);
    }
  }
  
  public String getFirstName()
  {
    return getValue(FIRSTNAME);
  }
  
  public void validateFirstName()
  {
    this.validateAttribute(FIRSTNAME);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getFirstNameMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.irs.SprayOperatorView.CLASS);
    return mdClassIF.definesAttribute(FIRSTNAME);
  }
  
  public void setFirstName(String value)
  {
    if(value == null)
    {
      setValue(FIRSTNAME, "");
    }
    else
    {
      setValue(FIRSTNAME, value);
    }
  }
  
  public String getId()
  {
    return getValue(ID);
  }
  
  public void validateId()
  {
    this.validateAttribute(ID);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getIdMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.irs.SprayOperatorView.CLASS);
    return mdClassIF.definesAttribute(ID);
  }
  
  public Boolean getIsAssigned()
  {
    return com.terraframe.mojo.constants.MdAttributeBooleanUtil.getTypeSafeValue(getValue(ISASSIGNED));
  }
  
  public void validateIsAssigned()
  {
    this.validateAttribute(ISASSIGNED);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getIsAssignedMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.irs.SprayOperatorView.CLASS);
    return mdClassIF.definesAttribute(ISASSIGNED);
  }
  
  public void setIsAssigned(Boolean value)
  {
    if(value == null)
    {
      setValue(ISASSIGNED, "");
    }
    else
    {
      setValue(ISASSIGNED, java.lang.Boolean.toString(value));
    }
  }
  
  public String getLastName()
  {
    return getValue(LASTNAME);
  }
  
  public void validateLastName()
  {
    this.validateAttribute(LASTNAME);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getLastNameMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.irs.SprayOperatorView.CLASS);
    return mdClassIF.definesAttribute(LASTNAME);
  }
  
  public void setLastName(String value)
  {
    if(value == null)
    {
      setValue(LASTNAME, "");
    }
    else
    {
      setValue(LASTNAME, value);
    }
  }
  
  public String getOperatorId()
  {
    return getValue(OPERATORID);
  }
  
  public void validateOperatorId()
  {
    this.validateAttribute(OPERATORID);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getOperatorIdMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.irs.SprayOperatorView.CLASS);
    return mdClassIF.definesAttribute(OPERATORID);
  }
  
  public void setOperatorId(String value)
  {
    if(value == null)
    {
      setValue(OPERATORID, "");
    }
    else
    {
      setValue(OPERATORID, value);
    }
  }
  
  public String getTeamId()
  {
    return getValue(TEAMID);
  }
  
  public void validateTeamId()
  {
    this.validateAttribute(TEAMID);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getTeamIdMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.irs.SprayOperatorView.CLASS);
    return mdClassIF.definesAttribute(TEAMID);
  }
  
  public void setTeamId(String value)
  {
    if(value == null)
    {
      setValue(TEAMID, "");
    }
    else
    {
      setValue(TEAMID, value);
    }
  }
  
  protected String getDeclaredType()
  {
    return CLASS;
  }
  
  public static SprayOperatorView get(String id)
  {
    return (SprayOperatorView) com.terraframe.mojo.business.View.get(id);
  }
  
  public static dss.vector.solutions.irs.SprayOperatorView[] getAll()
  {
    String msg = "This method should never be invoked.  It should be overwritten in dss.vector.solutions.irs.SprayOperatorView.java";
    throw new com.terraframe.mojo.dataaccess.metadata.ForbiddenMethodException(msg);
  }
  
  public static dss.vector.solutions.irs.SprayOperatorView[] getAllForLocation(java.lang.String geoId)
  {
    String msg = "This method should never be invoked.  It should be overwritten in dss.vector.solutions.irs.SprayOperatorView.java";
    throw new com.terraframe.mojo.dataaccess.metadata.ForbiddenMethodException(msg);
  }
  
  public static dss.vector.solutions.irs.SprayOperatorView[] getAllForTeam(dss.vector.solutions.irs.SprayTeam sprayTeam)
  {
    String msg = "This method should never be invoked.  It should be overwritten in dss.vector.solutions.irs.SprayOperatorView.java";
    throw new com.terraframe.mojo.dataaccess.metadata.ForbiddenMethodException(msg);
  }
  
  public String toString()
  {
    if (this.isNew())
    {
      return "New: "+ this.getClassDisplayLabel();
    }
    else
    {
      return super.toString();
    }
  }
}
