package dss.vector.solutions.irs;

@com.runwaysdk.business.ClassSignature(hash = 1106140039)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to TeamSprayStatus.java
 *
 * @author Autogenerated by RunwaySDK
 */
public  class TeamSprayStatusQuery extends com.runwaysdk.query.GeneratedBusinessQuery
 implements com.runwaysdk.generation.loader.Reloadable
{

  public TeamSprayStatusQuery(com.runwaysdk.query.QueryFactory componentQueryFactory)
  {
     super();
    if (this.getComponentQuery() == null)
    {
      com.runwaysdk.business.BusinessQuery businessQuery = componentQueryFactory.businessQuery(this.getClassType());

       this.setBusinessQuery(businessQuery);
    }
  }

  public TeamSprayStatusQuery(com.runwaysdk.query.ValueQuery valueQuery)
  {
     super();
    if (this.getComponentQuery() == null)
    {
      com.runwaysdk.business.BusinessQuery businessQuery = new com.runwaysdk.business.BusinessQuery(valueQuery, this.getClassType());

       this.setBusinessQuery(businessQuery);
    }
  }

  public String getClassType()
  {
    return dss.vector.solutions.irs.TeamSprayStatus.CLASS;
  }
  public com.runwaysdk.query.SelectableInteger getBedNets()
  {
    return getBedNets(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getBedNets(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.TeamSprayStatus.BEDNETS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getBedNets(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.TeamSprayStatus.BEDNETS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getCattleSheds()
  {
    return getCattleSheds(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getCattleSheds(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.TeamSprayStatus.CATTLESHEDS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getCattleSheds(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.TeamSprayStatus.CATTLESHEDS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getCattleShedsLocked()
  {
    return getCattleShedsLocked(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getCattleShedsLocked(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.TeamSprayStatus.CATTLESHEDSLOCKED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getCattleShedsLocked(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.TeamSprayStatus.CATTLESHEDSLOCKED, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getCattleShedsOther()
  {
    return getCattleShedsOther(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getCattleShedsOther(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.TeamSprayStatus.CATTLESHEDSOTHER, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getCattleShedsOther(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.TeamSprayStatus.CATTLESHEDSOTHER, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getCattleShedsRefused()
  {
    return getCattleShedsRefused(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getCattleShedsRefused(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.TeamSprayStatus.CATTLESHEDSREFUSED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getCattleShedsRefused(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.TeamSprayStatus.CATTLESHEDSREFUSED, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getCattleShedsSprayed()
  {
    return getCattleShedsSprayed(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getCattleShedsSprayed(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.TeamSprayStatus.CATTLESHEDSSPRAYED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getCattleShedsSprayed(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.TeamSprayStatus.CATTLESHEDSSPRAYED, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableMoment getCreateDate()
  {
    return getCreateDate(null);

  }
 
  public com.runwaysdk.query.SelectableMoment getCreateDate(String alias)
  {
    return (com.runwaysdk.query.SelectableMoment)this.getComponentQuery().get(dss.vector.solutions.irs.TeamSprayStatus.CREATEDATE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableMoment getCreateDate(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableMoment)this.getComponentQuery().get(dss.vector.solutions.irs.TeamSprayStatus.CREATEDATE, alias, displayLabel);

  }
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy()
  {
    return getCreatedBy(null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(dss.vector.solutions.irs.TeamSprayStatus.CREATEDBY);

    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.irs.TeamSprayStatus.CREATEDBY, mdAttributeIF, this, alias, null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(dss.vector.solutions.irs.TeamSprayStatus.CREATEDBY);

    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.irs.TeamSprayStatus.CREATEDBY, mdAttributeIF, this, alias, displayLabel);

  }
  public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain()
  {
    return getEntityDomain(null);

  }
 
  public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(dss.vector.solutions.irs.TeamSprayStatus.ENTITYDOMAIN);

    return (com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.irs.TeamSprayStatus.ENTITYDOMAIN, mdAttributeIF, this, alias, null);

  }
 
  public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(dss.vector.solutions.irs.TeamSprayStatus.ENTITYDOMAIN);

    return (com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.irs.TeamSprayStatus.ENTITYDOMAIN, mdAttributeIF, this, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getHouseholds()
  {
    return getHouseholds(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getHouseholds(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.TeamSprayStatus.HOUSEHOLDS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getHouseholds(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.TeamSprayStatus.HOUSEHOLDS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getId()
  {
    return getId(null);

  }
 
  public com.runwaysdk.query.SelectableChar getId(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(dss.vector.solutions.irs.TeamSprayStatus.ID, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getId(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(dss.vector.solutions.irs.TeamSprayStatus.ID, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getKeyName()
  {
    return getKeyName(null);

  }
 
  public com.runwaysdk.query.SelectableChar getKeyName(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(dss.vector.solutions.irs.TeamSprayStatus.KEYNAME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getKeyName(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(dss.vector.solutions.irs.TeamSprayStatus.KEYNAME, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableMoment getLastUpdateDate()
  {
    return getLastUpdateDate(null);

  }
 
  public com.runwaysdk.query.SelectableMoment getLastUpdateDate(String alias)
  {
    return (com.runwaysdk.query.SelectableMoment)this.getComponentQuery().get(dss.vector.solutions.irs.TeamSprayStatus.LASTUPDATEDATE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableMoment getLastUpdateDate(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableMoment)this.getComponentQuery().get(dss.vector.solutions.irs.TeamSprayStatus.LASTUPDATEDATE, alias, displayLabel);

  }
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy()
  {
    return getLastUpdatedBy(null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(dss.vector.solutions.irs.TeamSprayStatus.LASTUPDATEDBY);

    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.irs.TeamSprayStatus.LASTUPDATEDBY, mdAttributeIF, this, alias, null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(dss.vector.solutions.irs.TeamSprayStatus.LASTUPDATEDBY);

    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.irs.TeamSprayStatus.LASTUPDATEDBY, mdAttributeIF, this, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getLocked()
  {
    return getLocked(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getLocked(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.TeamSprayStatus.LOCKED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getLocked(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.TeamSprayStatus.LOCKED, alias, displayLabel);

  }
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLockedBy()
  {
    return getLockedBy(null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLockedBy(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(dss.vector.solutions.irs.TeamSprayStatus.LOCKEDBY);

    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.irs.TeamSprayStatus.LOCKEDBY, mdAttributeIF, this, alias, null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLockedBy(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(dss.vector.solutions.irs.TeamSprayStatus.LOCKEDBY);

    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.irs.TeamSprayStatus.LOCKEDBY, mdAttributeIF, this, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getNozzlesUsed()
  {
    return getNozzlesUsed(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getNozzlesUsed(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.TeamSprayStatus.NOZZLESUSED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getNozzlesUsed(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.TeamSprayStatus.NOZZLESUSED, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getNumberOfPeople()
  {
    return getNumberOfPeople(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getNumberOfPeople(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.TeamSprayStatus.NUMBEROFPEOPLE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getNumberOfPeople(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.TeamSprayStatus.NUMBEROFPEOPLE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getOther()
  {
    return getOther(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getOther(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.TeamSprayStatus.OTHER, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getOther(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.TeamSprayStatus.OTHER, alias, displayLabel);

  }
  public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner()
  {
    return getOwner(null);

  }
 
  public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(dss.vector.solutions.irs.TeamSprayStatus.OWNER);

    return (com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.irs.TeamSprayStatus.OWNER, mdAttributeIF, this, alias, null);

  }
 
  public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(dss.vector.solutions.irs.TeamSprayStatus.OWNER);

    return (com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.irs.TeamSprayStatus.OWNER, mdAttributeIF, this, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getPeople()
  {
    return getPeople(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getPeople(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.TeamSprayStatus.PEOPLE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getPeople(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.TeamSprayStatus.PEOPLE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getPrevSprayedHouseholds()
  {
    return getPrevSprayedHouseholds(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getPrevSprayedHouseholds(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.TeamSprayStatus.PREVSPRAYEDHOUSEHOLDS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getPrevSprayedHouseholds(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.TeamSprayStatus.PREVSPRAYEDHOUSEHOLDS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getPrevSprayedStructures()
  {
    return getPrevSprayedStructures(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getPrevSprayedStructures(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.TeamSprayStatus.PREVSPRAYEDSTRUCTURES, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getPrevSprayedStructures(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.TeamSprayStatus.PREVSPRAYEDSTRUCTURES, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getPumpsUsed()
  {
    return getPumpsUsed(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getPumpsUsed(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.TeamSprayStatus.PUMPSUSED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getPumpsUsed(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.TeamSprayStatus.PUMPSUSED, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getReceived()
  {
    return getReceived(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getReceived(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.TeamSprayStatus.RECEIVED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getReceived(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.TeamSprayStatus.RECEIVED, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getRefills()
  {
    return getRefills(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getRefills(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.TeamSprayStatus.REFILLS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getRefills(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.TeamSprayStatus.REFILLS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getRefused()
  {
    return getRefused(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getRefused(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.TeamSprayStatus.REFUSED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getRefused(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.TeamSprayStatus.REFUSED, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getReturned()
  {
    return getReturned(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getReturned(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.TeamSprayStatus.RETURNED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getReturned(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.TeamSprayStatus.RETURNED, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getRooms()
  {
    return getRooms(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getRooms(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.TeamSprayStatus.ROOMS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getRooms(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.TeamSprayStatus.ROOMS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getRoomsWithBedNets()
  {
    return getRoomsWithBedNets(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getRoomsWithBedNets(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.TeamSprayStatus.ROOMSWITHBEDNETS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getRoomsWithBedNets(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.TeamSprayStatus.ROOMSWITHBEDNETS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableLong getSeq()
  {
    return getSeq(null);

  }
 
  public com.runwaysdk.query.SelectableLong getSeq(String alias)
  {
    return (com.runwaysdk.query.SelectableLong)this.getComponentQuery().get(dss.vector.solutions.irs.TeamSprayStatus.SEQ, alias, null);

  }
 
  public com.runwaysdk.query.SelectableLong getSeq(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableLong)this.getComponentQuery().get(dss.vector.solutions.irs.TeamSprayStatus.SEQ, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getSiteMaster()
  {
    return getSiteMaster(null);

  }
 
  public com.runwaysdk.query.SelectableChar getSiteMaster(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(dss.vector.solutions.irs.TeamSprayStatus.SITEMASTER, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getSiteMaster(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(dss.vector.solutions.irs.TeamSprayStatus.SITEMASTER, alias, displayLabel);

  }
  public dss.vector.solutions.irs.ZoneSprayQuery.ZoneSprayQueryReferenceIF getSpray()
  {
    return getSpray(null);

  }
 
  public dss.vector.solutions.irs.ZoneSprayQuery.ZoneSprayQueryReferenceIF getSpray(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(dss.vector.solutions.irs.TeamSprayStatus.SPRAY);

    return (dss.vector.solutions.irs.ZoneSprayQuery.ZoneSprayQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.irs.TeamSprayStatus.SPRAY, mdAttributeIF, this, alias, null);

  }
 
  public dss.vector.solutions.irs.ZoneSprayQuery.ZoneSprayQueryReferenceIF getSpray(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(dss.vector.solutions.irs.TeamSprayStatus.SPRAY);

    return (dss.vector.solutions.irs.ZoneSprayQuery.ZoneSprayQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.irs.TeamSprayStatus.SPRAY, mdAttributeIF, this, alias, displayLabel);

  }
  public dss.vector.solutions.irs.SprayTeamQuery.SprayTeamQueryReferenceIF getSprayTeam()
  {
    return getSprayTeam(null);

  }
 
  public dss.vector.solutions.irs.SprayTeamQuery.SprayTeamQueryReferenceIF getSprayTeam(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(dss.vector.solutions.irs.TeamSprayStatus.SPRAYTEAM);

    return (dss.vector.solutions.irs.SprayTeamQuery.SprayTeamQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.irs.TeamSprayStatus.SPRAYTEAM, mdAttributeIF, this, alias, null);

  }
 
  public dss.vector.solutions.irs.SprayTeamQuery.SprayTeamQueryReferenceIF getSprayTeam(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(dss.vector.solutions.irs.TeamSprayStatus.SPRAYTEAM);

    return (dss.vector.solutions.irs.SprayTeamQuery.SprayTeamQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.irs.TeamSprayStatus.SPRAYTEAM, mdAttributeIF, this, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getSprayedHouseholds()
  {
    return getSprayedHouseholds(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getSprayedHouseholds(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.TeamSprayStatus.SPRAYEDHOUSEHOLDS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getSprayedHouseholds(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.TeamSprayStatus.SPRAYEDHOUSEHOLDS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getSprayedRooms()
  {
    return getSprayedRooms(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getSprayedRooms(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.TeamSprayStatus.SPRAYEDROOMS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getSprayedRooms(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.TeamSprayStatus.SPRAYEDROOMS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getSprayedStructures()
  {
    return getSprayedStructures(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getSprayedStructures(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.TeamSprayStatus.SPRAYEDSTRUCTURES, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getSprayedStructures(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.TeamSprayStatus.SPRAYEDSTRUCTURES, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getStructures()
  {
    return getStructures(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getStructures(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.TeamSprayStatus.STRUCTURES, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getStructures(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.TeamSprayStatus.STRUCTURES, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getTarget()
  {
    return getTarget(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getTarget(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.TeamSprayStatus.TARGET, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getTarget(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.TeamSprayStatus.TARGET, alias, displayLabel);

  }
  public dss.vector.solutions.irs.TeamMemberQuery.TeamMemberQueryReferenceIF getTeamLeader()
  {
    return getTeamLeader(null);

  }
 
  public dss.vector.solutions.irs.TeamMemberQuery.TeamMemberQueryReferenceIF getTeamLeader(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(dss.vector.solutions.irs.TeamSprayStatus.TEAMLEADER);

    return (dss.vector.solutions.irs.TeamMemberQuery.TeamMemberQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.irs.TeamSprayStatus.TEAMLEADER, mdAttributeIF, this, alias, null);

  }
 
  public dss.vector.solutions.irs.TeamMemberQuery.TeamMemberQueryReferenceIF getTeamLeader(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(dss.vector.solutions.irs.TeamSprayStatus.TEAMLEADER);

    return (dss.vector.solutions.irs.TeamMemberQuery.TeamMemberQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.irs.TeamSprayStatus.TEAMLEADER, mdAttributeIF, this, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getType()
  {
    return getType(null);

  }
 
  public com.runwaysdk.query.SelectableChar getType(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(dss.vector.solutions.irs.TeamSprayStatus.TYPE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getType(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(dss.vector.solutions.irs.TeamSprayStatus.TYPE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getUsed()
  {
    return getUsed(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getUsed(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.TeamSprayStatus.USED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getUsed(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.TeamSprayStatus.USED, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getVerandas()
  {
    return getVerandas(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getVerandas(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.TeamSprayStatus.VERANDAS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getVerandas(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.TeamSprayStatus.VERANDAS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getVerandasLocked()
  {
    return getVerandasLocked(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getVerandasLocked(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.TeamSprayStatus.VERANDASLOCKED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getVerandasLocked(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.TeamSprayStatus.VERANDASLOCKED, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getVerandasOther()
  {
    return getVerandasOther(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getVerandasOther(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.TeamSprayStatus.VERANDASOTHER, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getVerandasOther(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.TeamSprayStatus.VERANDASOTHER, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getVerandasRefused()
  {
    return getVerandasRefused(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getVerandasRefused(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.TeamSprayStatus.VERANDASREFUSED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getVerandasRefused(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.TeamSprayStatus.VERANDASREFUSED, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getVerandasSprayed()
  {
    return getVerandasSprayed(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getVerandasSprayed(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.TeamSprayStatus.VERANDASSPRAYED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getVerandasSprayed(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.TeamSprayStatus.VERANDASSPRAYED, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getWrongSurface()
  {
    return getWrongSurface(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getWrongSurface(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.TeamSprayStatus.WRONGSURFACE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getWrongSurface(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.TeamSprayStatus.WRONGSURFACE, alias, displayLabel);

  }
  protected com.runwaysdk.query.AttributeReference referenceFactory( com.runwaysdk.dataaccess.MdAttributeRefDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  com.runwaysdk.dataaccess.MdBusinessDAOIF referenceMdBusinessIF, String referenceTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String userDefinedAlias, String userDefinedDisplayLabel)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals(dss.vector.solutions.irs.TeamSprayStatus.CREATEDBY)) 
    {
       return new com.runwaysdk.system.SingleActorQuery.SingleActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(dss.vector.solutions.irs.TeamSprayStatus.ENTITYDOMAIN)) 
    {
       return new com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(dss.vector.solutions.irs.TeamSprayStatus.LASTUPDATEDBY)) 
    {
       return new com.runwaysdk.system.SingleActorQuery.SingleActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(dss.vector.solutions.irs.TeamSprayStatus.LOCKEDBY)) 
    {
       return new com.runwaysdk.system.SingleActorQuery.SingleActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(dss.vector.solutions.irs.TeamSprayStatus.OWNER)) 
    {
       return new com.runwaysdk.system.ActorQuery.ActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(dss.vector.solutions.irs.TeamSprayStatus.SPRAY)) 
    {
       return new dss.vector.solutions.irs.ZoneSprayQuery.ZoneSprayQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(dss.vector.solutions.irs.TeamSprayStatus.SPRAYTEAM)) 
    {
       return new dss.vector.solutions.irs.SprayTeamQuery.SprayTeamQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(dss.vector.solutions.irs.TeamSprayStatus.TEAMLEADER)) 
    {
       return new dss.vector.solutions.irs.TeamMemberQuery.TeamMemberQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else 
    {
      String error = "Attribute type ["+mdAttributeIF.getType()+"] is invalid.";
      throw new com.runwaysdk.query.QueryException(error);
    }
  }

  /**  
   * Returns an iterator of Business objects that match the query criteria specified
   * on this query object. 
   * @return iterator of Business objects that match the query criteria specified
   * on this query object.
   */
  public com.runwaysdk.query.OIterator<? extends TeamSprayStatus> getIterator()
  {
    this.checkNotUsedInValueQuery();
    String sqlStmt;
    if (_limit != null && _skip != null)
    {
      sqlStmt = this.getComponentQuery().getSQL(_limit, _skip);
    }
    else
    {
      sqlStmt = this.getComponentQuery().getSQL();
    }
    java.util.Map<String, com.runwaysdk.query.ColumnInfo> columnInfoMap = this.getComponentQuery().getColumnInfoMap();

    java.sql.ResultSet results = com.runwaysdk.dataaccess.database.Database.query(sqlStmt);
    return new com.runwaysdk.business.BusinessIterator<TeamSprayStatus>(this.getComponentQuery().getMdEntityIF(), columnInfoMap, results);
  }


/**
 * Interface that masks all type unsafe query methods and defines all type safe methods.
 * This type is used when a join is performed on this class as a reference.
 **/
  public interface TeamSprayStatusQueryReferenceIF extends com.runwaysdk.generation.loader.Reloadable, com.runwaysdk.query.SelectableReference
  {

    public com.runwaysdk.query.SelectableInteger getBedNets();
    public com.runwaysdk.query.SelectableInteger getBedNets(String alias);
    public com.runwaysdk.query.SelectableInteger getBedNets(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getCattleSheds();
    public com.runwaysdk.query.SelectableInteger getCattleSheds(String alias);
    public com.runwaysdk.query.SelectableInteger getCattleSheds(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getCattleShedsLocked();
    public com.runwaysdk.query.SelectableInteger getCattleShedsLocked(String alias);
    public com.runwaysdk.query.SelectableInteger getCattleShedsLocked(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getCattleShedsOther();
    public com.runwaysdk.query.SelectableInteger getCattleShedsOther(String alias);
    public com.runwaysdk.query.SelectableInteger getCattleShedsOther(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getCattleShedsRefused();
    public com.runwaysdk.query.SelectableInteger getCattleShedsRefused(String alias);
    public com.runwaysdk.query.SelectableInteger getCattleShedsRefused(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getCattleShedsSprayed();
    public com.runwaysdk.query.SelectableInteger getCattleShedsSprayed(String alias);
    public com.runwaysdk.query.SelectableInteger getCattleShedsSprayed(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableMoment getCreateDate();
    public com.runwaysdk.query.SelectableMoment getCreateDate(String alias);
    public com.runwaysdk.query.SelectableMoment getCreateDate(String alias, String displayLabel);
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy();
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias);
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias, String displayLabel);
    public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain();
    public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias);
    public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getHouseholds();
    public com.runwaysdk.query.SelectableInteger getHouseholds(String alias);
    public com.runwaysdk.query.SelectableInteger getHouseholds(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getId();
    public com.runwaysdk.query.SelectableChar getId(String alias);
    public com.runwaysdk.query.SelectableChar getId(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getKeyName();
    public com.runwaysdk.query.SelectableChar getKeyName(String alias);
    public com.runwaysdk.query.SelectableChar getKeyName(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableMoment getLastUpdateDate();
    public com.runwaysdk.query.SelectableMoment getLastUpdateDate(String alias);
    public com.runwaysdk.query.SelectableMoment getLastUpdateDate(String alias, String displayLabel);
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy();
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias);
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getLocked();
    public com.runwaysdk.query.SelectableInteger getLocked(String alias);
    public com.runwaysdk.query.SelectableInteger getLocked(String alias, String displayLabel);
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLockedBy();
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLockedBy(String alias);
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLockedBy(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getNozzlesUsed();
    public com.runwaysdk.query.SelectableInteger getNozzlesUsed(String alias);
    public com.runwaysdk.query.SelectableInteger getNozzlesUsed(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getNumberOfPeople();
    public com.runwaysdk.query.SelectableInteger getNumberOfPeople(String alias);
    public com.runwaysdk.query.SelectableInteger getNumberOfPeople(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getOther();
    public com.runwaysdk.query.SelectableInteger getOther(String alias);
    public com.runwaysdk.query.SelectableInteger getOther(String alias, String displayLabel);
    public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner();
    public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias);
    public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getPeople();
    public com.runwaysdk.query.SelectableInteger getPeople(String alias);
    public com.runwaysdk.query.SelectableInteger getPeople(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getPrevSprayedHouseholds();
    public com.runwaysdk.query.SelectableInteger getPrevSprayedHouseholds(String alias);
    public com.runwaysdk.query.SelectableInteger getPrevSprayedHouseholds(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getPrevSprayedStructures();
    public com.runwaysdk.query.SelectableInteger getPrevSprayedStructures(String alias);
    public com.runwaysdk.query.SelectableInteger getPrevSprayedStructures(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getPumpsUsed();
    public com.runwaysdk.query.SelectableInteger getPumpsUsed(String alias);
    public com.runwaysdk.query.SelectableInteger getPumpsUsed(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getReceived();
    public com.runwaysdk.query.SelectableInteger getReceived(String alias);
    public com.runwaysdk.query.SelectableInteger getReceived(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getRefills();
    public com.runwaysdk.query.SelectableInteger getRefills(String alias);
    public com.runwaysdk.query.SelectableInteger getRefills(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getRefused();
    public com.runwaysdk.query.SelectableInteger getRefused(String alias);
    public com.runwaysdk.query.SelectableInteger getRefused(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getReturned();
    public com.runwaysdk.query.SelectableInteger getReturned(String alias);
    public com.runwaysdk.query.SelectableInteger getReturned(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getRooms();
    public com.runwaysdk.query.SelectableInteger getRooms(String alias);
    public com.runwaysdk.query.SelectableInteger getRooms(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getRoomsWithBedNets();
    public com.runwaysdk.query.SelectableInteger getRoomsWithBedNets(String alias);
    public com.runwaysdk.query.SelectableInteger getRoomsWithBedNets(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableLong getSeq();
    public com.runwaysdk.query.SelectableLong getSeq(String alias);
    public com.runwaysdk.query.SelectableLong getSeq(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getSiteMaster();
    public com.runwaysdk.query.SelectableChar getSiteMaster(String alias);
    public com.runwaysdk.query.SelectableChar getSiteMaster(String alias, String displayLabel);
    public dss.vector.solutions.irs.ZoneSprayQuery.ZoneSprayQueryReferenceIF getSpray();
    public dss.vector.solutions.irs.ZoneSprayQuery.ZoneSprayQueryReferenceIF getSpray(String alias);
    public dss.vector.solutions.irs.ZoneSprayQuery.ZoneSprayQueryReferenceIF getSpray(String alias, String displayLabel);
    public dss.vector.solutions.irs.SprayTeamQuery.SprayTeamQueryReferenceIF getSprayTeam();
    public dss.vector.solutions.irs.SprayTeamQuery.SprayTeamQueryReferenceIF getSprayTeam(String alias);
    public dss.vector.solutions.irs.SprayTeamQuery.SprayTeamQueryReferenceIF getSprayTeam(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getSprayedHouseholds();
    public com.runwaysdk.query.SelectableInteger getSprayedHouseholds(String alias);
    public com.runwaysdk.query.SelectableInteger getSprayedHouseholds(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getSprayedRooms();
    public com.runwaysdk.query.SelectableInteger getSprayedRooms(String alias);
    public com.runwaysdk.query.SelectableInteger getSprayedRooms(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getSprayedStructures();
    public com.runwaysdk.query.SelectableInteger getSprayedStructures(String alias);
    public com.runwaysdk.query.SelectableInteger getSprayedStructures(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getStructures();
    public com.runwaysdk.query.SelectableInteger getStructures(String alias);
    public com.runwaysdk.query.SelectableInteger getStructures(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getTarget();
    public com.runwaysdk.query.SelectableInteger getTarget(String alias);
    public com.runwaysdk.query.SelectableInteger getTarget(String alias, String displayLabel);
    public dss.vector.solutions.irs.TeamMemberQuery.TeamMemberQueryReferenceIF getTeamLeader();
    public dss.vector.solutions.irs.TeamMemberQuery.TeamMemberQueryReferenceIF getTeamLeader(String alias);
    public dss.vector.solutions.irs.TeamMemberQuery.TeamMemberQueryReferenceIF getTeamLeader(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getType();
    public com.runwaysdk.query.SelectableChar getType(String alias);
    public com.runwaysdk.query.SelectableChar getType(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getUsed();
    public com.runwaysdk.query.SelectableInteger getUsed(String alias);
    public com.runwaysdk.query.SelectableInteger getUsed(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getVerandas();
    public com.runwaysdk.query.SelectableInteger getVerandas(String alias);
    public com.runwaysdk.query.SelectableInteger getVerandas(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getVerandasLocked();
    public com.runwaysdk.query.SelectableInteger getVerandasLocked(String alias);
    public com.runwaysdk.query.SelectableInteger getVerandasLocked(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getVerandasOther();
    public com.runwaysdk.query.SelectableInteger getVerandasOther(String alias);
    public com.runwaysdk.query.SelectableInteger getVerandasOther(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getVerandasRefused();
    public com.runwaysdk.query.SelectableInteger getVerandasRefused(String alias);
    public com.runwaysdk.query.SelectableInteger getVerandasRefused(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getVerandasSprayed();
    public com.runwaysdk.query.SelectableInteger getVerandasSprayed(String alias);
    public com.runwaysdk.query.SelectableInteger getVerandasSprayed(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getWrongSurface();
    public com.runwaysdk.query.SelectableInteger getWrongSurface(String alias);
    public com.runwaysdk.query.SelectableInteger getWrongSurface(String alias, String displayLabel);

    public com.runwaysdk.query.BasicCondition EQ(dss.vector.solutions.irs.TeamSprayStatus teamSprayStatus);

    public com.runwaysdk.query.BasicCondition NE(dss.vector.solutions.irs.TeamSprayStatus teamSprayStatus);

  }

/**
 * Implements type safe query methods.
 * This type is used when a join is performed on this class as a reference.
 **/
  public static class TeamSprayStatusQueryReference extends com.runwaysdk.query.AttributeReference
 implements TeamSprayStatusQueryReferenceIF
, com.runwaysdk.generation.loader.Reloadable
  {

  public TeamSprayStatusQueryReference(com.runwaysdk.dataaccess.MdAttributeRefDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias, com.runwaysdk.dataaccess.MdBusinessDAOIF referenceMdBusinessIF, String referenceTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String alias, String displayLabel)
  {
    super(mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, alias, displayLabel);

  }


    public com.runwaysdk.query.BasicCondition EQ(dss.vector.solutions.irs.TeamSprayStatus teamSprayStatus)
    {
      if(teamSprayStatus == null) return this.EQ((java.lang.String)null);
      return this.EQ(teamSprayStatus.getId());
    }

    public com.runwaysdk.query.BasicCondition NE(dss.vector.solutions.irs.TeamSprayStatus teamSprayStatus)
    {
      if(teamSprayStatus == null) return this.NE((java.lang.String)null);
      return this.NE(teamSprayStatus.getId());
    }

  public com.runwaysdk.query.SelectableInteger getBedNets()
  {
    return getBedNets(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getBedNets(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.BEDNETS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getBedNets(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.BEDNETS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getCattleSheds()
  {
    return getCattleSheds(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getCattleSheds(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.CATTLESHEDS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getCattleSheds(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.CATTLESHEDS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getCattleShedsLocked()
  {
    return getCattleShedsLocked(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getCattleShedsLocked(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.CATTLESHEDSLOCKED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getCattleShedsLocked(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.CATTLESHEDSLOCKED, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getCattleShedsOther()
  {
    return getCattleShedsOther(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getCattleShedsOther(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.CATTLESHEDSOTHER, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getCattleShedsOther(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.CATTLESHEDSOTHER, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getCattleShedsRefused()
  {
    return getCattleShedsRefused(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getCattleShedsRefused(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.CATTLESHEDSREFUSED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getCattleShedsRefused(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.CATTLESHEDSREFUSED, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getCattleShedsSprayed()
  {
    return getCattleShedsSprayed(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getCattleShedsSprayed(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.CATTLESHEDSSPRAYED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getCattleShedsSprayed(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.CATTLESHEDSSPRAYED, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableMoment getCreateDate()
  {
    return getCreateDate(null);

  }
 
  public com.runwaysdk.query.SelectableMoment getCreateDate(String alias)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(dss.vector.solutions.irs.TeamSprayStatus.CREATEDATE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableMoment getCreateDate(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(dss.vector.solutions.irs.TeamSprayStatus.CREATEDATE, alias, displayLabel);

  }
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy()
  {
    return getCreatedBy(null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias)
  {
    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.get(dss.vector.solutions.irs.TeamSprayStatus.CREATEDBY, alias, null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.get(dss.vector.solutions.irs.TeamSprayStatus.CREATEDBY,  alias, displayLabel);

  }
  public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain()
  {
    return getEntityDomain(null);

  }
 
  public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias)
  {
    return (com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF)this.get(dss.vector.solutions.irs.TeamSprayStatus.ENTITYDOMAIN, alias, null);

  }
 
  public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF)this.get(dss.vector.solutions.irs.TeamSprayStatus.ENTITYDOMAIN,  alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getHouseholds()
  {
    return getHouseholds(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getHouseholds(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.HOUSEHOLDS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getHouseholds(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.HOUSEHOLDS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getId()
  {
    return getId(null);

  }
 
  public com.runwaysdk.query.SelectableChar getId(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(dss.vector.solutions.irs.TeamSprayStatus.ID, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getId(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(dss.vector.solutions.irs.TeamSprayStatus.ID, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getKeyName()
  {
    return getKeyName(null);

  }
 
  public com.runwaysdk.query.SelectableChar getKeyName(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(dss.vector.solutions.irs.TeamSprayStatus.KEYNAME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getKeyName(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(dss.vector.solutions.irs.TeamSprayStatus.KEYNAME, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableMoment getLastUpdateDate()
  {
    return getLastUpdateDate(null);

  }
 
  public com.runwaysdk.query.SelectableMoment getLastUpdateDate(String alias)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(dss.vector.solutions.irs.TeamSprayStatus.LASTUPDATEDATE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableMoment getLastUpdateDate(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(dss.vector.solutions.irs.TeamSprayStatus.LASTUPDATEDATE, alias, displayLabel);

  }
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy()
  {
    return getLastUpdatedBy(null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias)
  {
    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.get(dss.vector.solutions.irs.TeamSprayStatus.LASTUPDATEDBY, alias, null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.get(dss.vector.solutions.irs.TeamSprayStatus.LASTUPDATEDBY,  alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getLocked()
  {
    return getLocked(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getLocked(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.LOCKED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getLocked(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.LOCKED, alias, displayLabel);

  }
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLockedBy()
  {
    return getLockedBy(null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLockedBy(String alias)
  {
    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.get(dss.vector.solutions.irs.TeamSprayStatus.LOCKEDBY, alias, null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLockedBy(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.get(dss.vector.solutions.irs.TeamSprayStatus.LOCKEDBY,  alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getNozzlesUsed()
  {
    return getNozzlesUsed(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getNozzlesUsed(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.NOZZLESUSED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getNozzlesUsed(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.NOZZLESUSED, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getNumberOfPeople()
  {
    return getNumberOfPeople(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getNumberOfPeople(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.NUMBEROFPEOPLE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getNumberOfPeople(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.NUMBEROFPEOPLE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getOther()
  {
    return getOther(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getOther(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.OTHER, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getOther(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.OTHER, alias, displayLabel);

  }
  public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner()
  {
    return getOwner(null);

  }
 
  public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias)
  {
    return (com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF)this.get(dss.vector.solutions.irs.TeamSprayStatus.OWNER, alias, null);

  }
 
  public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF)this.get(dss.vector.solutions.irs.TeamSprayStatus.OWNER,  alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getPeople()
  {
    return getPeople(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getPeople(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.PEOPLE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getPeople(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.PEOPLE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getPrevSprayedHouseholds()
  {
    return getPrevSprayedHouseholds(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getPrevSprayedHouseholds(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.PREVSPRAYEDHOUSEHOLDS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getPrevSprayedHouseholds(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.PREVSPRAYEDHOUSEHOLDS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getPrevSprayedStructures()
  {
    return getPrevSprayedStructures(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getPrevSprayedStructures(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.PREVSPRAYEDSTRUCTURES, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getPrevSprayedStructures(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.PREVSPRAYEDSTRUCTURES, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getPumpsUsed()
  {
    return getPumpsUsed(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getPumpsUsed(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.PUMPSUSED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getPumpsUsed(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.PUMPSUSED, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getReceived()
  {
    return getReceived(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getReceived(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.RECEIVED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getReceived(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.RECEIVED, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getRefills()
  {
    return getRefills(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getRefills(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.REFILLS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getRefills(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.REFILLS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getRefused()
  {
    return getRefused(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getRefused(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.REFUSED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getRefused(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.REFUSED, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getReturned()
  {
    return getReturned(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getReturned(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.RETURNED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getReturned(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.RETURNED, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getRooms()
  {
    return getRooms(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getRooms(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.ROOMS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getRooms(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.ROOMS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getRoomsWithBedNets()
  {
    return getRoomsWithBedNets(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getRoomsWithBedNets(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.ROOMSWITHBEDNETS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getRoomsWithBedNets(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.ROOMSWITHBEDNETS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableLong getSeq()
  {
    return getSeq(null);

  }
 
  public com.runwaysdk.query.SelectableLong getSeq(String alias)
  {
    return (com.runwaysdk.query.SelectableLong)this.get(dss.vector.solutions.irs.TeamSprayStatus.SEQ, alias, null);

  }
 
  public com.runwaysdk.query.SelectableLong getSeq(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableLong)this.get(dss.vector.solutions.irs.TeamSprayStatus.SEQ, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getSiteMaster()
  {
    return getSiteMaster(null);

  }
 
  public com.runwaysdk.query.SelectableChar getSiteMaster(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(dss.vector.solutions.irs.TeamSprayStatus.SITEMASTER, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getSiteMaster(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(dss.vector.solutions.irs.TeamSprayStatus.SITEMASTER, alias, displayLabel);

  }
  public dss.vector.solutions.irs.ZoneSprayQuery.ZoneSprayQueryReferenceIF getSpray()
  {
    return getSpray(null);

  }
 
  public dss.vector.solutions.irs.ZoneSprayQuery.ZoneSprayQueryReferenceIF getSpray(String alias)
  {
    return (dss.vector.solutions.irs.ZoneSprayQuery.ZoneSprayQueryReferenceIF)this.get(dss.vector.solutions.irs.TeamSprayStatus.SPRAY, alias, null);

  }
 
  public dss.vector.solutions.irs.ZoneSprayQuery.ZoneSprayQueryReferenceIF getSpray(String alias, String displayLabel)
  {
    return (dss.vector.solutions.irs.ZoneSprayQuery.ZoneSprayQueryReferenceIF)this.get(dss.vector.solutions.irs.TeamSprayStatus.SPRAY,  alias, displayLabel);

  }
  public dss.vector.solutions.irs.SprayTeamQuery.SprayTeamQueryReferenceIF getSprayTeam()
  {
    return getSprayTeam(null);

  }
 
  public dss.vector.solutions.irs.SprayTeamQuery.SprayTeamQueryReferenceIF getSprayTeam(String alias)
  {
    return (dss.vector.solutions.irs.SprayTeamQuery.SprayTeamQueryReferenceIF)this.get(dss.vector.solutions.irs.TeamSprayStatus.SPRAYTEAM, alias, null);

  }
 
  public dss.vector.solutions.irs.SprayTeamQuery.SprayTeamQueryReferenceIF getSprayTeam(String alias, String displayLabel)
  {
    return (dss.vector.solutions.irs.SprayTeamQuery.SprayTeamQueryReferenceIF)this.get(dss.vector.solutions.irs.TeamSprayStatus.SPRAYTEAM,  alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getSprayedHouseholds()
  {
    return getSprayedHouseholds(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getSprayedHouseholds(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.SPRAYEDHOUSEHOLDS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getSprayedHouseholds(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.SPRAYEDHOUSEHOLDS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getSprayedRooms()
  {
    return getSprayedRooms(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getSprayedRooms(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.SPRAYEDROOMS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getSprayedRooms(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.SPRAYEDROOMS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getSprayedStructures()
  {
    return getSprayedStructures(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getSprayedStructures(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.SPRAYEDSTRUCTURES, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getSprayedStructures(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.SPRAYEDSTRUCTURES, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getStructures()
  {
    return getStructures(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getStructures(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.STRUCTURES, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getStructures(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.STRUCTURES, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getTarget()
  {
    return getTarget(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getTarget(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.TARGET, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getTarget(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.TARGET, alias, displayLabel);

  }
  public dss.vector.solutions.irs.TeamMemberQuery.TeamMemberQueryReferenceIF getTeamLeader()
  {
    return getTeamLeader(null);

  }
 
  public dss.vector.solutions.irs.TeamMemberQuery.TeamMemberQueryReferenceIF getTeamLeader(String alias)
  {
    return (dss.vector.solutions.irs.TeamMemberQuery.TeamMemberQueryReferenceIF)this.get(dss.vector.solutions.irs.TeamSprayStatus.TEAMLEADER, alias, null);

  }
 
  public dss.vector.solutions.irs.TeamMemberQuery.TeamMemberQueryReferenceIF getTeamLeader(String alias, String displayLabel)
  {
    return (dss.vector.solutions.irs.TeamMemberQuery.TeamMemberQueryReferenceIF)this.get(dss.vector.solutions.irs.TeamSprayStatus.TEAMLEADER,  alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getType()
  {
    return getType(null);

  }
 
  public com.runwaysdk.query.SelectableChar getType(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(dss.vector.solutions.irs.TeamSprayStatus.TYPE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getType(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(dss.vector.solutions.irs.TeamSprayStatus.TYPE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getUsed()
  {
    return getUsed(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getUsed(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.USED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getUsed(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.USED, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getVerandas()
  {
    return getVerandas(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getVerandas(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.VERANDAS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getVerandas(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.VERANDAS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getVerandasLocked()
  {
    return getVerandasLocked(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getVerandasLocked(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.VERANDASLOCKED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getVerandasLocked(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.VERANDASLOCKED, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getVerandasOther()
  {
    return getVerandasOther(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getVerandasOther(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.VERANDASOTHER, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getVerandasOther(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.VERANDASOTHER, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getVerandasRefused()
  {
    return getVerandasRefused(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getVerandasRefused(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.VERANDASREFUSED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getVerandasRefused(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.VERANDASREFUSED, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getVerandasSprayed()
  {
    return getVerandasSprayed(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getVerandasSprayed(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.VERANDASSPRAYED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getVerandasSprayed(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.VERANDASSPRAYED, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getWrongSurface()
  {
    return getWrongSurface(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getWrongSurface(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.WRONGSURFACE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getWrongSurface(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.WRONGSURFACE, alias, displayLabel);

  }
  protected com.runwaysdk.query.AttributeReference referenceFactory( com.runwaysdk.dataaccess.MdAttributeRefDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  com.runwaysdk.dataaccess.MdBusinessDAOIF referenceMdBusinessIF, String referenceTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String userDefinedAlias, String userDefinedDisplayLabel)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals(dss.vector.solutions.irs.TeamSprayStatus.CREATEDBY)) 
    {
       return new com.runwaysdk.system.SingleActorQuery.SingleActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(dss.vector.solutions.irs.TeamSprayStatus.ENTITYDOMAIN)) 
    {
       return new com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(dss.vector.solutions.irs.TeamSprayStatus.LASTUPDATEDBY)) 
    {
       return new com.runwaysdk.system.SingleActorQuery.SingleActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(dss.vector.solutions.irs.TeamSprayStatus.LOCKEDBY)) 
    {
       return new com.runwaysdk.system.SingleActorQuery.SingleActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(dss.vector.solutions.irs.TeamSprayStatus.OWNER)) 
    {
       return new com.runwaysdk.system.ActorQuery.ActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(dss.vector.solutions.irs.TeamSprayStatus.SPRAY)) 
    {
       return new dss.vector.solutions.irs.ZoneSprayQuery.ZoneSprayQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(dss.vector.solutions.irs.TeamSprayStatus.SPRAYTEAM)) 
    {
       return new dss.vector.solutions.irs.SprayTeamQuery.SprayTeamQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(dss.vector.solutions.irs.TeamSprayStatus.TEAMLEADER)) 
    {
       return new dss.vector.solutions.irs.TeamMemberQuery.TeamMemberQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else 
    {
      String error = "Attribute type ["+mdAttributeIF.getType()+"] is invalid.";
      throw new com.runwaysdk.query.QueryException(error);
    }
  }

  }

/**
 * Interface that masks all type unsafe query methods and defines all type safe methods.
 * This type is used when a join is performed on this class as a reference.
 **/
  public interface TeamSprayStatusQueryMultiReferenceIF extends com.runwaysdk.generation.loader.Reloadable, com.runwaysdk.query.SelectableMultiReference
  {

    public com.runwaysdk.query.SelectableInteger getBedNets();
    public com.runwaysdk.query.SelectableInteger getBedNets(String alias);
    public com.runwaysdk.query.SelectableInteger getBedNets(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getCattleSheds();
    public com.runwaysdk.query.SelectableInteger getCattleSheds(String alias);
    public com.runwaysdk.query.SelectableInteger getCattleSheds(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getCattleShedsLocked();
    public com.runwaysdk.query.SelectableInteger getCattleShedsLocked(String alias);
    public com.runwaysdk.query.SelectableInteger getCattleShedsLocked(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getCattleShedsOther();
    public com.runwaysdk.query.SelectableInteger getCattleShedsOther(String alias);
    public com.runwaysdk.query.SelectableInteger getCattleShedsOther(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getCattleShedsRefused();
    public com.runwaysdk.query.SelectableInteger getCattleShedsRefused(String alias);
    public com.runwaysdk.query.SelectableInteger getCattleShedsRefused(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getCattleShedsSprayed();
    public com.runwaysdk.query.SelectableInteger getCattleShedsSprayed(String alias);
    public com.runwaysdk.query.SelectableInteger getCattleShedsSprayed(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableMoment getCreateDate();
    public com.runwaysdk.query.SelectableMoment getCreateDate(String alias);
    public com.runwaysdk.query.SelectableMoment getCreateDate(String alias, String displayLabel);
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy();
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias);
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias, String displayLabel);
    public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain();
    public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias);
    public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getHouseholds();
    public com.runwaysdk.query.SelectableInteger getHouseholds(String alias);
    public com.runwaysdk.query.SelectableInteger getHouseholds(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getId();
    public com.runwaysdk.query.SelectableChar getId(String alias);
    public com.runwaysdk.query.SelectableChar getId(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getKeyName();
    public com.runwaysdk.query.SelectableChar getKeyName(String alias);
    public com.runwaysdk.query.SelectableChar getKeyName(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableMoment getLastUpdateDate();
    public com.runwaysdk.query.SelectableMoment getLastUpdateDate(String alias);
    public com.runwaysdk.query.SelectableMoment getLastUpdateDate(String alias, String displayLabel);
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy();
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias);
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getLocked();
    public com.runwaysdk.query.SelectableInteger getLocked(String alias);
    public com.runwaysdk.query.SelectableInteger getLocked(String alias, String displayLabel);
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLockedBy();
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLockedBy(String alias);
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLockedBy(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getNozzlesUsed();
    public com.runwaysdk.query.SelectableInteger getNozzlesUsed(String alias);
    public com.runwaysdk.query.SelectableInteger getNozzlesUsed(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getNumberOfPeople();
    public com.runwaysdk.query.SelectableInteger getNumberOfPeople(String alias);
    public com.runwaysdk.query.SelectableInteger getNumberOfPeople(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getOther();
    public com.runwaysdk.query.SelectableInteger getOther(String alias);
    public com.runwaysdk.query.SelectableInteger getOther(String alias, String displayLabel);
    public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner();
    public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias);
    public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getPeople();
    public com.runwaysdk.query.SelectableInteger getPeople(String alias);
    public com.runwaysdk.query.SelectableInteger getPeople(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getPrevSprayedHouseholds();
    public com.runwaysdk.query.SelectableInteger getPrevSprayedHouseholds(String alias);
    public com.runwaysdk.query.SelectableInteger getPrevSprayedHouseholds(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getPrevSprayedStructures();
    public com.runwaysdk.query.SelectableInteger getPrevSprayedStructures(String alias);
    public com.runwaysdk.query.SelectableInteger getPrevSprayedStructures(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getPumpsUsed();
    public com.runwaysdk.query.SelectableInteger getPumpsUsed(String alias);
    public com.runwaysdk.query.SelectableInteger getPumpsUsed(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getReceived();
    public com.runwaysdk.query.SelectableInteger getReceived(String alias);
    public com.runwaysdk.query.SelectableInteger getReceived(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getRefills();
    public com.runwaysdk.query.SelectableInteger getRefills(String alias);
    public com.runwaysdk.query.SelectableInteger getRefills(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getRefused();
    public com.runwaysdk.query.SelectableInteger getRefused(String alias);
    public com.runwaysdk.query.SelectableInteger getRefused(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getReturned();
    public com.runwaysdk.query.SelectableInteger getReturned(String alias);
    public com.runwaysdk.query.SelectableInteger getReturned(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getRooms();
    public com.runwaysdk.query.SelectableInteger getRooms(String alias);
    public com.runwaysdk.query.SelectableInteger getRooms(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getRoomsWithBedNets();
    public com.runwaysdk.query.SelectableInteger getRoomsWithBedNets(String alias);
    public com.runwaysdk.query.SelectableInteger getRoomsWithBedNets(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableLong getSeq();
    public com.runwaysdk.query.SelectableLong getSeq(String alias);
    public com.runwaysdk.query.SelectableLong getSeq(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getSiteMaster();
    public com.runwaysdk.query.SelectableChar getSiteMaster(String alias);
    public com.runwaysdk.query.SelectableChar getSiteMaster(String alias, String displayLabel);
    public dss.vector.solutions.irs.ZoneSprayQuery.ZoneSprayQueryReferenceIF getSpray();
    public dss.vector.solutions.irs.ZoneSprayQuery.ZoneSprayQueryReferenceIF getSpray(String alias);
    public dss.vector.solutions.irs.ZoneSprayQuery.ZoneSprayQueryReferenceIF getSpray(String alias, String displayLabel);
    public dss.vector.solutions.irs.SprayTeamQuery.SprayTeamQueryReferenceIF getSprayTeam();
    public dss.vector.solutions.irs.SprayTeamQuery.SprayTeamQueryReferenceIF getSprayTeam(String alias);
    public dss.vector.solutions.irs.SprayTeamQuery.SprayTeamQueryReferenceIF getSprayTeam(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getSprayedHouseholds();
    public com.runwaysdk.query.SelectableInteger getSprayedHouseholds(String alias);
    public com.runwaysdk.query.SelectableInteger getSprayedHouseholds(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getSprayedRooms();
    public com.runwaysdk.query.SelectableInteger getSprayedRooms(String alias);
    public com.runwaysdk.query.SelectableInteger getSprayedRooms(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getSprayedStructures();
    public com.runwaysdk.query.SelectableInteger getSprayedStructures(String alias);
    public com.runwaysdk.query.SelectableInteger getSprayedStructures(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getStructures();
    public com.runwaysdk.query.SelectableInteger getStructures(String alias);
    public com.runwaysdk.query.SelectableInteger getStructures(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getTarget();
    public com.runwaysdk.query.SelectableInteger getTarget(String alias);
    public com.runwaysdk.query.SelectableInteger getTarget(String alias, String displayLabel);
    public dss.vector.solutions.irs.TeamMemberQuery.TeamMemberQueryReferenceIF getTeamLeader();
    public dss.vector.solutions.irs.TeamMemberQuery.TeamMemberQueryReferenceIF getTeamLeader(String alias);
    public dss.vector.solutions.irs.TeamMemberQuery.TeamMemberQueryReferenceIF getTeamLeader(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getType();
    public com.runwaysdk.query.SelectableChar getType(String alias);
    public com.runwaysdk.query.SelectableChar getType(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getUsed();
    public com.runwaysdk.query.SelectableInteger getUsed(String alias);
    public com.runwaysdk.query.SelectableInteger getUsed(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getVerandas();
    public com.runwaysdk.query.SelectableInteger getVerandas(String alias);
    public com.runwaysdk.query.SelectableInteger getVerandas(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getVerandasLocked();
    public com.runwaysdk.query.SelectableInteger getVerandasLocked(String alias);
    public com.runwaysdk.query.SelectableInteger getVerandasLocked(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getVerandasOther();
    public com.runwaysdk.query.SelectableInteger getVerandasOther(String alias);
    public com.runwaysdk.query.SelectableInteger getVerandasOther(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getVerandasRefused();
    public com.runwaysdk.query.SelectableInteger getVerandasRefused(String alias);
    public com.runwaysdk.query.SelectableInteger getVerandasRefused(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getVerandasSprayed();
    public com.runwaysdk.query.SelectableInteger getVerandasSprayed(String alias);
    public com.runwaysdk.query.SelectableInteger getVerandasSprayed(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getWrongSurface();
    public com.runwaysdk.query.SelectableInteger getWrongSurface(String alias);
    public com.runwaysdk.query.SelectableInteger getWrongSurface(String alias, String displayLabel);

    public com.runwaysdk.query.Condition containsAny(dss.vector.solutions.irs.TeamSprayStatus ... teamSprayStatus);
    public com.runwaysdk.query.Condition notContainsAny(dss.vector.solutions.irs.TeamSprayStatus ... teamSprayStatus);
    public com.runwaysdk.query.Condition containsAll(dss.vector.solutions.irs.TeamSprayStatus ... teamSprayStatus);
    public com.runwaysdk.query.Condition notContainsAll(dss.vector.solutions.irs.TeamSprayStatus ... teamSprayStatus);
    public com.runwaysdk.query.Condition containsExactly(dss.vector.solutions.irs.TeamSprayStatus ... teamSprayStatus);
  }

/**
 * Implements type safe query methods.
 * This type is used when a join is performed on this class as a reference.
 **/
  public static class TeamSprayStatusQueryMultiReference extends com.runwaysdk.query.AttributeMultiReference
 implements TeamSprayStatusQueryMultiReferenceIF
, com.runwaysdk.generation.loader.Reloadable
  {

  public TeamSprayStatusQueryMultiReference(com.runwaysdk.dataaccess.MdAttributeMultiReferenceDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias, String mdMultiReferenceTableName, com.runwaysdk.dataaccess.MdBusinessDAOIF referenceMdBusinessIF, String referenceTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String alias, String displayLabel)
  {
    super(mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, mdMultiReferenceTableName, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, alias, displayLabel);

  }



    public com.runwaysdk.query.Condition containsAny(dss.vector.solutions.irs.TeamSprayStatus ... teamSprayStatus)  {

      String[] itemIdArray = new String[teamSprayStatus.length]; 

      for (int i=0; i<teamSprayStatus.length; i++)
      {
        itemIdArray[i] = teamSprayStatus[i].getId();
      }

      return this.containsAny(itemIdArray);
  }

    public com.runwaysdk.query.Condition notContainsAny(dss.vector.solutions.irs.TeamSprayStatus ... teamSprayStatus)  {

      String[] itemIdArray = new String[teamSprayStatus.length]; 

      for (int i=0; i<teamSprayStatus.length; i++)
      {
        itemIdArray[i] = teamSprayStatus[i].getId();
      }

      return this.notContainsAny(itemIdArray);
  }

    public com.runwaysdk.query.Condition containsAll(dss.vector.solutions.irs.TeamSprayStatus ... teamSprayStatus)  {

      String[] itemIdArray = new String[teamSprayStatus.length]; 

      for (int i=0; i<teamSprayStatus.length; i++)
      {
        itemIdArray[i] = teamSprayStatus[i].getId();
      }

      return this.containsAll(itemIdArray);
  }

    public com.runwaysdk.query.Condition notContainsAll(dss.vector.solutions.irs.TeamSprayStatus ... teamSprayStatus)  {

      String[] itemIdArray = new String[teamSprayStatus.length]; 

      for (int i=0; i<teamSprayStatus.length; i++)
      {
        itemIdArray[i] = teamSprayStatus[i].getId();
      }

      return this.notContainsAll(itemIdArray);
  }

    public com.runwaysdk.query.Condition containsExactly(dss.vector.solutions.irs.TeamSprayStatus ... teamSprayStatus)  {

      String[] itemIdArray = new String[teamSprayStatus.length]; 

      for (int i=0; i<teamSprayStatus.length; i++)
      {
        itemIdArray[i] = teamSprayStatus[i].getId();
      }

      return this.containsExactly(itemIdArray);
  }
  public com.runwaysdk.query.SelectableInteger getBedNets()
  {
    return getBedNets(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getBedNets(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.BEDNETS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getBedNets(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.BEDNETS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getCattleSheds()
  {
    return getCattleSheds(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getCattleSheds(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.CATTLESHEDS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getCattleSheds(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.CATTLESHEDS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getCattleShedsLocked()
  {
    return getCattleShedsLocked(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getCattleShedsLocked(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.CATTLESHEDSLOCKED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getCattleShedsLocked(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.CATTLESHEDSLOCKED, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getCattleShedsOther()
  {
    return getCattleShedsOther(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getCattleShedsOther(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.CATTLESHEDSOTHER, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getCattleShedsOther(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.CATTLESHEDSOTHER, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getCattleShedsRefused()
  {
    return getCattleShedsRefused(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getCattleShedsRefused(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.CATTLESHEDSREFUSED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getCattleShedsRefused(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.CATTLESHEDSREFUSED, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getCattleShedsSprayed()
  {
    return getCattleShedsSprayed(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getCattleShedsSprayed(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.CATTLESHEDSSPRAYED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getCattleShedsSprayed(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.CATTLESHEDSSPRAYED, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableMoment getCreateDate()
  {
    return getCreateDate(null);

  }
 
  public com.runwaysdk.query.SelectableMoment getCreateDate(String alias)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(dss.vector.solutions.irs.TeamSprayStatus.CREATEDATE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableMoment getCreateDate(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(dss.vector.solutions.irs.TeamSprayStatus.CREATEDATE, alias, displayLabel);

  }
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy()
  {
    return getCreatedBy(null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias)
  {
    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.get(dss.vector.solutions.irs.TeamSprayStatus.CREATEDBY, alias, null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.get(dss.vector.solutions.irs.TeamSprayStatus.CREATEDBY,  alias, displayLabel);

  }
  public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain()
  {
    return getEntityDomain(null);

  }
 
  public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias)
  {
    return (com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF)this.get(dss.vector.solutions.irs.TeamSprayStatus.ENTITYDOMAIN, alias, null);

  }
 
  public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF)this.get(dss.vector.solutions.irs.TeamSprayStatus.ENTITYDOMAIN,  alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getHouseholds()
  {
    return getHouseholds(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getHouseholds(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.HOUSEHOLDS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getHouseholds(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.HOUSEHOLDS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getId()
  {
    return getId(null);

  }
 
  public com.runwaysdk.query.SelectableChar getId(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(dss.vector.solutions.irs.TeamSprayStatus.ID, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getId(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(dss.vector.solutions.irs.TeamSprayStatus.ID, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getKeyName()
  {
    return getKeyName(null);

  }
 
  public com.runwaysdk.query.SelectableChar getKeyName(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(dss.vector.solutions.irs.TeamSprayStatus.KEYNAME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getKeyName(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(dss.vector.solutions.irs.TeamSprayStatus.KEYNAME, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableMoment getLastUpdateDate()
  {
    return getLastUpdateDate(null);

  }
 
  public com.runwaysdk.query.SelectableMoment getLastUpdateDate(String alias)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(dss.vector.solutions.irs.TeamSprayStatus.LASTUPDATEDATE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableMoment getLastUpdateDate(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(dss.vector.solutions.irs.TeamSprayStatus.LASTUPDATEDATE, alias, displayLabel);

  }
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy()
  {
    return getLastUpdatedBy(null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias)
  {
    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.get(dss.vector.solutions.irs.TeamSprayStatus.LASTUPDATEDBY, alias, null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.get(dss.vector.solutions.irs.TeamSprayStatus.LASTUPDATEDBY,  alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getLocked()
  {
    return getLocked(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getLocked(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.LOCKED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getLocked(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.LOCKED, alias, displayLabel);

  }
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLockedBy()
  {
    return getLockedBy(null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLockedBy(String alias)
  {
    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.get(dss.vector.solutions.irs.TeamSprayStatus.LOCKEDBY, alias, null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLockedBy(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.get(dss.vector.solutions.irs.TeamSprayStatus.LOCKEDBY,  alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getNozzlesUsed()
  {
    return getNozzlesUsed(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getNozzlesUsed(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.NOZZLESUSED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getNozzlesUsed(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.NOZZLESUSED, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getNumberOfPeople()
  {
    return getNumberOfPeople(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getNumberOfPeople(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.NUMBEROFPEOPLE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getNumberOfPeople(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.NUMBEROFPEOPLE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getOther()
  {
    return getOther(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getOther(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.OTHER, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getOther(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.OTHER, alias, displayLabel);

  }
  public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner()
  {
    return getOwner(null);

  }
 
  public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias)
  {
    return (com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF)this.get(dss.vector.solutions.irs.TeamSprayStatus.OWNER, alias, null);

  }
 
  public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF)this.get(dss.vector.solutions.irs.TeamSprayStatus.OWNER,  alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getPeople()
  {
    return getPeople(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getPeople(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.PEOPLE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getPeople(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.PEOPLE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getPrevSprayedHouseholds()
  {
    return getPrevSprayedHouseholds(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getPrevSprayedHouseholds(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.PREVSPRAYEDHOUSEHOLDS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getPrevSprayedHouseholds(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.PREVSPRAYEDHOUSEHOLDS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getPrevSprayedStructures()
  {
    return getPrevSprayedStructures(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getPrevSprayedStructures(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.PREVSPRAYEDSTRUCTURES, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getPrevSprayedStructures(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.PREVSPRAYEDSTRUCTURES, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getPumpsUsed()
  {
    return getPumpsUsed(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getPumpsUsed(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.PUMPSUSED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getPumpsUsed(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.PUMPSUSED, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getReceived()
  {
    return getReceived(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getReceived(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.RECEIVED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getReceived(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.RECEIVED, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getRefills()
  {
    return getRefills(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getRefills(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.REFILLS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getRefills(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.REFILLS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getRefused()
  {
    return getRefused(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getRefused(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.REFUSED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getRefused(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.REFUSED, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getReturned()
  {
    return getReturned(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getReturned(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.RETURNED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getReturned(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.RETURNED, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getRooms()
  {
    return getRooms(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getRooms(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.ROOMS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getRooms(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.ROOMS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getRoomsWithBedNets()
  {
    return getRoomsWithBedNets(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getRoomsWithBedNets(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.ROOMSWITHBEDNETS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getRoomsWithBedNets(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.ROOMSWITHBEDNETS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableLong getSeq()
  {
    return getSeq(null);

  }
 
  public com.runwaysdk.query.SelectableLong getSeq(String alias)
  {
    return (com.runwaysdk.query.SelectableLong)this.get(dss.vector.solutions.irs.TeamSprayStatus.SEQ, alias, null);

  }
 
  public com.runwaysdk.query.SelectableLong getSeq(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableLong)this.get(dss.vector.solutions.irs.TeamSprayStatus.SEQ, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getSiteMaster()
  {
    return getSiteMaster(null);

  }
 
  public com.runwaysdk.query.SelectableChar getSiteMaster(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(dss.vector.solutions.irs.TeamSprayStatus.SITEMASTER, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getSiteMaster(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(dss.vector.solutions.irs.TeamSprayStatus.SITEMASTER, alias, displayLabel);

  }
  public dss.vector.solutions.irs.ZoneSprayQuery.ZoneSprayQueryReferenceIF getSpray()
  {
    return getSpray(null);

  }
 
  public dss.vector.solutions.irs.ZoneSprayQuery.ZoneSprayQueryReferenceIF getSpray(String alias)
  {
    return (dss.vector.solutions.irs.ZoneSprayQuery.ZoneSprayQueryReferenceIF)this.get(dss.vector.solutions.irs.TeamSprayStatus.SPRAY, alias, null);

  }
 
  public dss.vector.solutions.irs.ZoneSprayQuery.ZoneSprayQueryReferenceIF getSpray(String alias, String displayLabel)
  {
    return (dss.vector.solutions.irs.ZoneSprayQuery.ZoneSprayQueryReferenceIF)this.get(dss.vector.solutions.irs.TeamSprayStatus.SPRAY,  alias, displayLabel);

  }
  public dss.vector.solutions.irs.SprayTeamQuery.SprayTeamQueryReferenceIF getSprayTeam()
  {
    return getSprayTeam(null);

  }
 
  public dss.vector.solutions.irs.SprayTeamQuery.SprayTeamQueryReferenceIF getSprayTeam(String alias)
  {
    return (dss.vector.solutions.irs.SprayTeamQuery.SprayTeamQueryReferenceIF)this.get(dss.vector.solutions.irs.TeamSprayStatus.SPRAYTEAM, alias, null);

  }
 
  public dss.vector.solutions.irs.SprayTeamQuery.SprayTeamQueryReferenceIF getSprayTeam(String alias, String displayLabel)
  {
    return (dss.vector.solutions.irs.SprayTeamQuery.SprayTeamQueryReferenceIF)this.get(dss.vector.solutions.irs.TeamSprayStatus.SPRAYTEAM,  alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getSprayedHouseholds()
  {
    return getSprayedHouseholds(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getSprayedHouseholds(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.SPRAYEDHOUSEHOLDS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getSprayedHouseholds(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.SPRAYEDHOUSEHOLDS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getSprayedRooms()
  {
    return getSprayedRooms(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getSprayedRooms(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.SPRAYEDROOMS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getSprayedRooms(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.SPRAYEDROOMS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getSprayedStructures()
  {
    return getSprayedStructures(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getSprayedStructures(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.SPRAYEDSTRUCTURES, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getSprayedStructures(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.SPRAYEDSTRUCTURES, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getStructures()
  {
    return getStructures(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getStructures(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.STRUCTURES, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getStructures(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.STRUCTURES, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getTarget()
  {
    return getTarget(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getTarget(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.TARGET, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getTarget(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.TARGET, alias, displayLabel);

  }
  public dss.vector.solutions.irs.TeamMemberQuery.TeamMemberQueryReferenceIF getTeamLeader()
  {
    return getTeamLeader(null);

  }
 
  public dss.vector.solutions.irs.TeamMemberQuery.TeamMemberQueryReferenceIF getTeamLeader(String alias)
  {
    return (dss.vector.solutions.irs.TeamMemberQuery.TeamMemberQueryReferenceIF)this.get(dss.vector.solutions.irs.TeamSprayStatus.TEAMLEADER, alias, null);

  }
 
  public dss.vector.solutions.irs.TeamMemberQuery.TeamMemberQueryReferenceIF getTeamLeader(String alias, String displayLabel)
  {
    return (dss.vector.solutions.irs.TeamMemberQuery.TeamMemberQueryReferenceIF)this.get(dss.vector.solutions.irs.TeamSprayStatus.TEAMLEADER,  alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getType()
  {
    return getType(null);

  }
 
  public com.runwaysdk.query.SelectableChar getType(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(dss.vector.solutions.irs.TeamSprayStatus.TYPE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getType(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(dss.vector.solutions.irs.TeamSprayStatus.TYPE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getUsed()
  {
    return getUsed(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getUsed(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.USED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getUsed(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.USED, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getVerandas()
  {
    return getVerandas(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getVerandas(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.VERANDAS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getVerandas(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.VERANDAS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getVerandasLocked()
  {
    return getVerandasLocked(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getVerandasLocked(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.VERANDASLOCKED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getVerandasLocked(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.VERANDASLOCKED, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getVerandasOther()
  {
    return getVerandasOther(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getVerandasOther(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.VERANDASOTHER, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getVerandasOther(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.VERANDASOTHER, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getVerandasRefused()
  {
    return getVerandasRefused(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getVerandasRefused(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.VERANDASREFUSED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getVerandasRefused(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.VERANDASREFUSED, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getVerandasSprayed()
  {
    return getVerandasSprayed(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getVerandasSprayed(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.VERANDASSPRAYED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getVerandasSprayed(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.VERANDASSPRAYED, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getWrongSurface()
  {
    return getWrongSurface(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getWrongSurface(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.WRONGSURFACE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getWrongSurface(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.TeamSprayStatus.WRONGSURFACE, alias, displayLabel);

  }
  protected com.runwaysdk.query.AttributeReference referenceFactory( com.runwaysdk.dataaccess.MdAttributeRefDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  com.runwaysdk.dataaccess.MdBusinessDAOIF referenceMdBusinessIF, String referenceTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String userDefinedAlias, String userDefinedDisplayLabel)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals(dss.vector.solutions.irs.TeamSprayStatus.CREATEDBY)) 
    {
       return new com.runwaysdk.system.SingleActorQuery.SingleActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(dss.vector.solutions.irs.TeamSprayStatus.ENTITYDOMAIN)) 
    {
       return new com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(dss.vector.solutions.irs.TeamSprayStatus.LASTUPDATEDBY)) 
    {
       return new com.runwaysdk.system.SingleActorQuery.SingleActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(dss.vector.solutions.irs.TeamSprayStatus.LOCKEDBY)) 
    {
       return new com.runwaysdk.system.SingleActorQuery.SingleActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(dss.vector.solutions.irs.TeamSprayStatus.OWNER)) 
    {
       return new com.runwaysdk.system.ActorQuery.ActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(dss.vector.solutions.irs.TeamSprayStatus.SPRAY)) 
    {
       return new dss.vector.solutions.irs.ZoneSprayQuery.ZoneSprayQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(dss.vector.solutions.irs.TeamSprayStatus.SPRAYTEAM)) 
    {
       return new dss.vector.solutions.irs.SprayTeamQuery.SprayTeamQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(dss.vector.solutions.irs.TeamSprayStatus.TEAMLEADER)) 
    {
       return new dss.vector.solutions.irs.TeamMemberQuery.TeamMemberQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else 
    {
      String error = "Attribute type ["+mdAttributeIF.getType()+"] is invalid.";
      throw new com.runwaysdk.query.QueryException(error);
    }
  }

  }
}
