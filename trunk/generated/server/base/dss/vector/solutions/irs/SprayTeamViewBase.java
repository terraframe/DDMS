package dss.vector.solutions.irs;

@com.terraframe.mojo.business.ClassSignature(hash = -2131140681)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to SprayTeamView.java
 *
 * @author Autogenerated by TerraFrame
 */
public abstract class SprayTeamViewBase extends com.terraframe.mojo.business.View implements com.terraframe.mojo.generation.loader.Reloadable
{
  public final static String CLASS = "dss.vector.solutions.irs.SprayTeamView";
  public static java.lang.String ASSIGNEDOPERATORS = "assignedOperators";
  public static java.lang.String AVAILABLEOPERATORS = "availableOperators";
  public static java.lang.String CONCRETEID = "concreteId";
  public static java.lang.String CURRENTOPERATORS = "currentOperators";
  public static java.lang.String ID = "id";
  public static java.lang.String SPRAYZONE = "sprayZone";
  public static java.lang.String TEAMID = "teamId";
  public static java.lang.String TEAMLEADER = "teamLeader";
  private static final long serialVersionUID = -2131140681;
  
  public SprayTeamViewBase()
  {
    super();
  }
  
  public String getAssignedOperators()
  {
    return getValue(ASSIGNEDOPERATORS);
  }
  
  public void validateAssignedOperators()
  {
    this.validateAttribute(ASSIGNEDOPERATORS);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getAssignedOperatorsMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.irs.SprayTeamView.CLASS);
    return mdClassIF.definesAttribute(ASSIGNEDOPERATORS);
  }
  
  public void setAssignedOperators(String value)
  {
    if(value == null)
    {
      setValue(ASSIGNEDOPERATORS, "");
    }
    else
    {
      setValue(ASSIGNEDOPERATORS, value);
    }
  }
  
  public String getAvailableOperators()
  {
    return getValue(AVAILABLEOPERATORS);
  }
  
  public void validateAvailableOperators()
  {
    this.validateAttribute(AVAILABLEOPERATORS);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getAvailableOperatorsMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.irs.SprayTeamView.CLASS);
    return mdClassIF.definesAttribute(AVAILABLEOPERATORS);
  }
  
  public void setAvailableOperators(String value)
  {
    if(value == null)
    {
      setValue(AVAILABLEOPERATORS, "");
    }
    else
    {
      setValue(AVAILABLEOPERATORS, value);
    }
  }
  
  public String getConcreteId()
  {
    return getValue(CONCRETEID);
  }
  
  public void validateConcreteId()
  {
    this.validateAttribute(CONCRETEID);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getConcreteIdMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.irs.SprayTeamView.CLASS);
    return mdClassIF.definesAttribute(CONCRETEID);
  }
  
  public void setConcreteId(String value)
  {
    if(value == null)
    {
      setValue(CONCRETEID, "");
    }
    else
    {
      setValue(CONCRETEID, value);
    }
  }
  
  public String getCurrentOperators()
  {
    return getValue(CURRENTOPERATORS);
  }
  
  public void validateCurrentOperators()
  {
    this.validateAttribute(CURRENTOPERATORS);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getCurrentOperatorsMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.irs.SprayTeamView.CLASS);
    return mdClassIF.definesAttribute(CURRENTOPERATORS);
  }
  
  public void setCurrentOperators(String value)
  {
    if(value == null)
    {
      setValue(CURRENTOPERATORS, "");
    }
    else
    {
      setValue(CURRENTOPERATORS, value);
    }
  }
  
  public String getId()
  {
    return getValue(ID);
  }
  
  public void validateId()
  {
    this.validateAttribute(ID);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getIdMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.irs.SprayTeamView.CLASS);
    return mdClassIF.definesAttribute(ID);
  }
  
  public dss.vector.solutions.geo.generated.SprayZone getSprayZone()
  {
    if (getValue(SPRAYZONE).trim().equals(""))
    {
      return null;
    }
    else
    {
      return dss.vector.solutions.geo.generated.SprayZone.get(getValue(SPRAYZONE));
    }
  }
  
  public void validateSprayZone()
  {
    this.validateAttribute(SPRAYZONE);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getSprayZoneMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.irs.SprayTeamView.CLASS);
    return mdClassIF.definesAttribute(SPRAYZONE);
  }
  
  public void setSprayZone(dss.vector.solutions.geo.generated.SprayZone value)
  {
    if(value == null)
    {
      setValue(SPRAYZONE, "");
    }
    else
    {
      setValue(SPRAYZONE, value.getId());
    }
  }
  
  public String getTeamId()
  {
    return getValue(TEAMID);
  }
  
  public void validateTeamId()
  {
    this.validateAttribute(TEAMID);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getTeamIdMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.irs.SprayTeamView.CLASS);
    return mdClassIF.definesAttribute(TEAMID);
  }
  
  public void setTeamId(String value)
  {
    if(value == null)
    {
      setValue(TEAMID, "");
    }
    else
    {
      setValue(TEAMID, value);
    }
  }
  
  public String getTeamLeader()
  {
    return getValue(TEAMLEADER);
  }
  
  public void validateTeamLeader()
  {
    this.validateAttribute(TEAMLEADER);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getTeamLeaderMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.irs.SprayTeamView.CLASS);
    return mdClassIF.definesAttribute(TEAMLEADER);
  }
  
  public void setTeamLeader(String value)
  {
    if(value == null)
    {
      setValue(TEAMLEADER, "");
    }
    else
    {
      setValue(TEAMLEADER, value);
    }
  }
  
  protected String getDeclaredType()
  {
    return CLASS;
  }
  
  public static SprayTeamView get(String id)
  {
    return (SprayTeamView) com.terraframe.mojo.business.View.get(id);
  }
  
  public static dss.vector.solutions.irs.SprayTeamViewQuery getPage(java.lang.String sortAttribute, java.lang.Boolean isAscending, java.lang.Integer pageSize, java.lang.Integer pageNumber)
  {
    String msg = "This method should never be invoked.  It should be overwritten in dss.vector.solutions.irs.SprayTeamView.java";
    throw new com.terraframe.mojo.dataaccess.metadata.ForbiddenMethodException(msg);
  }
  
  public String toString()
  {
    if (this.isNew())
    {
      return "New: "+ this.getClassDisplayLabel();
    }
    else
    {
      return super.toString();
    }
  }
}
