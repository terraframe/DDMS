package dss.vector.solutions.irs;

@com.runwaysdk.business.ClassSignature(hash = -194155105)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to OperatorSprayStatus.java
 *
 * @author Autogenerated by RunwaySDK
 */
public  class OperatorSprayStatusQuery extends com.runwaysdk.query.GeneratedBusinessQuery
 implements com.runwaysdk.generation.loader.Reloadable
{

  public OperatorSprayStatusQuery(com.runwaysdk.query.QueryFactory componentQueryFactory)
  {
     super();
    if (this.getComponentQuery() == null)
    {
      com.runwaysdk.business.BusinessQuery businessQuery = componentQueryFactory.businessQuery(this.getClassType());

       this.setBusinessQuery(businessQuery);
    }
  }

  public OperatorSprayStatusQuery(com.runwaysdk.query.ValueQuery valueQuery)
  {
     super();
    if (this.getComponentQuery() == null)
    {
      com.runwaysdk.business.BusinessQuery businessQuery = new com.runwaysdk.business.BusinessQuery(valueQuery, this.getClassType());

       this.setBusinessQuery(businessQuery);
    }
  }

  public String getClassType()
  {
    return dss.vector.solutions.irs.OperatorSprayStatus.CLASS;
  }
  public com.runwaysdk.query.SelectableInteger getBedNets()
  {
    return getBedNets(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getBedNets(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.OperatorSprayStatus.BEDNETS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getBedNets(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.OperatorSprayStatus.BEDNETS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getCattleSheds()
  {
    return getCattleSheds(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getCattleSheds(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.OperatorSprayStatus.CATTLESHEDS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getCattleSheds(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.OperatorSprayStatus.CATTLESHEDS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getCattleShedsLocked()
  {
    return getCattleShedsLocked(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getCattleShedsLocked(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.OperatorSprayStatus.CATTLESHEDSLOCKED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getCattleShedsLocked(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.OperatorSprayStatus.CATTLESHEDSLOCKED, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getCattleShedsOther()
  {
    return getCattleShedsOther(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getCattleShedsOther(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.OperatorSprayStatus.CATTLESHEDSOTHER, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getCattleShedsOther(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.OperatorSprayStatus.CATTLESHEDSOTHER, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getCattleShedsRefused()
  {
    return getCattleShedsRefused(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getCattleShedsRefused(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.OperatorSprayStatus.CATTLESHEDSREFUSED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getCattleShedsRefused(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.OperatorSprayStatus.CATTLESHEDSREFUSED, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getCattleShedsSprayed()
  {
    return getCattleShedsSprayed(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getCattleShedsSprayed(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.OperatorSprayStatus.CATTLESHEDSSPRAYED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getCattleShedsSprayed(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.OperatorSprayStatus.CATTLESHEDSSPRAYED, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableMoment getCreateDate()
  {
    return getCreateDate(null);

  }
 
  public com.runwaysdk.query.SelectableMoment getCreateDate(String alias)
  {
    return (com.runwaysdk.query.SelectableMoment)this.getComponentQuery().get(dss.vector.solutions.irs.OperatorSprayStatus.CREATEDATE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableMoment getCreateDate(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableMoment)this.getComponentQuery().get(dss.vector.solutions.irs.OperatorSprayStatus.CREATEDATE, alias, displayLabel);

  }
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy()
  {
    return getCreatedBy(null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(dss.vector.solutions.irs.OperatorSprayStatus.CREATEDBY);

    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.irs.OperatorSprayStatus.CREATEDBY, mdAttributeIF, this, alias, null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(dss.vector.solutions.irs.OperatorSprayStatus.CREATEDBY);

    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.irs.OperatorSprayStatus.CREATEDBY, mdAttributeIF, this, alias, displayLabel);

  }
  public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain()
  {
    return getEntityDomain(null);

  }
 
  public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(dss.vector.solutions.irs.OperatorSprayStatus.ENTITYDOMAIN);

    return (com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.irs.OperatorSprayStatus.ENTITYDOMAIN, mdAttributeIF, this, alias, null);

  }
 
  public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(dss.vector.solutions.irs.OperatorSprayStatus.ENTITYDOMAIN);

    return (com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.irs.OperatorSprayStatus.ENTITYDOMAIN, mdAttributeIF, this, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getHouseholds()
  {
    return getHouseholds(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getHouseholds(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.OperatorSprayStatus.HOUSEHOLDS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getHouseholds(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.OperatorSprayStatus.HOUSEHOLDS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getId()
  {
    return getId(null);

  }
 
  public com.runwaysdk.query.SelectableChar getId(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(dss.vector.solutions.irs.OperatorSprayStatus.ID, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getId(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(dss.vector.solutions.irs.OperatorSprayStatus.ID, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getKeyName()
  {
    return getKeyName(null);

  }
 
  public com.runwaysdk.query.SelectableChar getKeyName(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(dss.vector.solutions.irs.OperatorSprayStatus.KEYNAME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getKeyName(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(dss.vector.solutions.irs.OperatorSprayStatus.KEYNAME, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableMoment getLastUpdateDate()
  {
    return getLastUpdateDate(null);

  }
 
  public com.runwaysdk.query.SelectableMoment getLastUpdateDate(String alias)
  {
    return (com.runwaysdk.query.SelectableMoment)this.getComponentQuery().get(dss.vector.solutions.irs.OperatorSprayStatus.LASTUPDATEDATE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableMoment getLastUpdateDate(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableMoment)this.getComponentQuery().get(dss.vector.solutions.irs.OperatorSprayStatus.LASTUPDATEDATE, alias, displayLabel);

  }
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy()
  {
    return getLastUpdatedBy(null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(dss.vector.solutions.irs.OperatorSprayStatus.LASTUPDATEDBY);

    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.irs.OperatorSprayStatus.LASTUPDATEDBY, mdAttributeIF, this, alias, null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(dss.vector.solutions.irs.OperatorSprayStatus.LASTUPDATEDBY);

    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.irs.OperatorSprayStatus.LASTUPDATEDBY, mdAttributeIF, this, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getLocked()
  {
    return getLocked(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getLocked(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.OperatorSprayStatus.LOCKED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getLocked(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.OperatorSprayStatus.LOCKED, alias, displayLabel);

  }
  public com.runwaysdk.system.UsersQuery.UsersQueryReferenceIF getLockedBy()
  {
    return getLockedBy(null);

  }
 
  public com.runwaysdk.system.UsersQuery.UsersQueryReferenceIF getLockedBy(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(dss.vector.solutions.irs.OperatorSprayStatus.LOCKEDBY);

    return (com.runwaysdk.system.UsersQuery.UsersQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.irs.OperatorSprayStatus.LOCKEDBY, mdAttributeIF, this, alias, null);

  }
 
  public com.runwaysdk.system.UsersQuery.UsersQueryReferenceIF getLockedBy(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(dss.vector.solutions.irs.OperatorSprayStatus.LOCKEDBY);

    return (com.runwaysdk.system.UsersQuery.UsersQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.irs.OperatorSprayStatus.LOCKEDBY, mdAttributeIF, this, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getNozzlesUsed()
  {
    return getNozzlesUsed(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getNozzlesUsed(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.OperatorSprayStatus.NOZZLESUSED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getNozzlesUsed(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.OperatorSprayStatus.NOZZLESUSED, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getNumberOfPeople()
  {
    return getNumberOfPeople(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getNumberOfPeople(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.OperatorSprayStatus.NUMBEROFPEOPLE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getNumberOfPeople(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.OperatorSprayStatus.NUMBEROFPEOPLE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getOperatorTarget()
  {
    return getOperatorTarget(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getOperatorTarget(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.OperatorSprayStatus.OPERATORTARGET, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getOperatorTarget(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.OperatorSprayStatus.OPERATORTARGET, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getOther()
  {
    return getOther(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getOther(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.OperatorSprayStatus.OTHER, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getOther(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.OperatorSprayStatus.OTHER, alias, displayLabel);

  }
  public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner()
  {
    return getOwner(null);

  }
 
  public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(dss.vector.solutions.irs.OperatorSprayStatus.OWNER);

    return (com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.irs.OperatorSprayStatus.OWNER, mdAttributeIF, this, alias, null);

  }
 
  public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(dss.vector.solutions.irs.OperatorSprayStatus.OWNER);

    return (com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.irs.OperatorSprayStatus.OWNER, mdAttributeIF, this, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getPeople()
  {
    return getPeople(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getPeople(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.OperatorSprayStatus.PEOPLE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getPeople(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.OperatorSprayStatus.PEOPLE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getPrevSprayedHouseholds()
  {
    return getPrevSprayedHouseholds(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getPrevSprayedHouseholds(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.OperatorSprayStatus.PREVSPRAYEDHOUSEHOLDS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getPrevSprayedHouseholds(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.OperatorSprayStatus.PREVSPRAYEDHOUSEHOLDS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getPrevSprayedStructures()
  {
    return getPrevSprayedStructures(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getPrevSprayedStructures(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.OperatorSprayStatus.PREVSPRAYEDSTRUCTURES, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getPrevSprayedStructures(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.OperatorSprayStatus.PREVSPRAYEDSTRUCTURES, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getPumpsUsed()
  {
    return getPumpsUsed(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getPumpsUsed(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.OperatorSprayStatus.PUMPSUSED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getPumpsUsed(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.OperatorSprayStatus.PUMPSUSED, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getReceived()
  {
    return getReceived(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getReceived(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.OperatorSprayStatus.RECEIVED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getReceived(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.OperatorSprayStatus.RECEIVED, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getRefills()
  {
    return getRefills(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getRefills(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.OperatorSprayStatus.REFILLS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getRefills(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.OperatorSprayStatus.REFILLS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getRefused()
  {
    return getRefused(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getRefused(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.OperatorSprayStatus.REFUSED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getRefused(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.OperatorSprayStatus.REFUSED, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getReturned()
  {
    return getReturned(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getReturned(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.OperatorSprayStatus.RETURNED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getReturned(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.OperatorSprayStatus.RETURNED, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getRooms()
  {
    return getRooms(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getRooms(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.OperatorSprayStatus.ROOMS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getRooms(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.OperatorSprayStatus.ROOMS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getRoomsWithBedNets()
  {
    return getRoomsWithBedNets(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getRoomsWithBedNets(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.OperatorSprayStatus.ROOMSWITHBEDNETS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getRoomsWithBedNets(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.OperatorSprayStatus.ROOMSWITHBEDNETS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableLong getSeq()
  {
    return getSeq(null);

  }
 
  public com.runwaysdk.query.SelectableLong getSeq(String alias)
  {
    return (com.runwaysdk.query.SelectableLong)this.getComponentQuery().get(dss.vector.solutions.irs.OperatorSprayStatus.SEQ, alias, null);

  }
 
  public com.runwaysdk.query.SelectableLong getSeq(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableLong)this.getComponentQuery().get(dss.vector.solutions.irs.OperatorSprayStatus.SEQ, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getSiteMaster()
  {
    return getSiteMaster(null);

  }
 
  public com.runwaysdk.query.SelectableChar getSiteMaster(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(dss.vector.solutions.irs.OperatorSprayStatus.SITEMASTER, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getSiteMaster(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(dss.vector.solutions.irs.OperatorSprayStatus.SITEMASTER, alias, displayLabel);

  }
  public dss.vector.solutions.irs.TeamSprayQuery.TeamSprayQueryReferenceIF getSpray()
  {
    return getSpray(null);

  }
 
  public dss.vector.solutions.irs.TeamSprayQuery.TeamSprayQueryReferenceIF getSpray(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(dss.vector.solutions.irs.OperatorSprayStatus.SPRAY);

    return (dss.vector.solutions.irs.TeamSprayQuery.TeamSprayQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.irs.OperatorSprayStatus.SPRAY, mdAttributeIF, this, alias, null);

  }
 
  public dss.vector.solutions.irs.TeamSprayQuery.TeamSprayQueryReferenceIF getSpray(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(dss.vector.solutions.irs.OperatorSprayStatus.SPRAY);

    return (dss.vector.solutions.irs.TeamSprayQuery.TeamSprayQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.irs.OperatorSprayStatus.SPRAY, mdAttributeIF, this, alias, displayLabel);

  }
  public dss.vector.solutions.irs.TeamMemberQuery.TeamMemberQueryReferenceIF getSprayOperator()
  {
    return getSprayOperator(null);

  }
 
  public dss.vector.solutions.irs.TeamMemberQuery.TeamMemberQueryReferenceIF getSprayOperator(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(dss.vector.solutions.irs.OperatorSprayStatus.SPRAYOPERATOR);

    return (dss.vector.solutions.irs.TeamMemberQuery.TeamMemberQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.irs.OperatorSprayStatus.SPRAYOPERATOR, mdAttributeIF, this, alias, null);

  }
 
  public dss.vector.solutions.irs.TeamMemberQuery.TeamMemberQueryReferenceIF getSprayOperator(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(dss.vector.solutions.irs.OperatorSprayStatus.SPRAYOPERATOR);

    return (dss.vector.solutions.irs.TeamMemberQuery.TeamMemberQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.irs.OperatorSprayStatus.SPRAYOPERATOR, mdAttributeIF, this, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getSprayedHouseholds()
  {
    return getSprayedHouseholds(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getSprayedHouseholds(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.OperatorSprayStatus.SPRAYEDHOUSEHOLDS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getSprayedHouseholds(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.OperatorSprayStatus.SPRAYEDHOUSEHOLDS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getSprayedRooms()
  {
    return getSprayedRooms(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getSprayedRooms(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.OperatorSprayStatus.SPRAYEDROOMS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getSprayedRooms(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.OperatorSprayStatus.SPRAYEDROOMS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getSprayedStructures()
  {
    return getSprayedStructures(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getSprayedStructures(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.OperatorSprayStatus.SPRAYEDSTRUCTURES, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getSprayedStructures(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.OperatorSprayStatus.SPRAYEDSTRUCTURES, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getStructures()
  {
    return getStructures(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getStructures(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.OperatorSprayStatus.STRUCTURES, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getStructures(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.OperatorSprayStatus.STRUCTURES, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getType()
  {
    return getType(null);

  }
 
  public com.runwaysdk.query.SelectableChar getType(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(dss.vector.solutions.irs.OperatorSprayStatus.TYPE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getType(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(dss.vector.solutions.irs.OperatorSprayStatus.TYPE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getUsed()
  {
    return getUsed(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getUsed(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.OperatorSprayStatus.USED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getUsed(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.OperatorSprayStatus.USED, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getVerandas()
  {
    return getVerandas(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getVerandas(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.OperatorSprayStatus.VERANDAS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getVerandas(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.OperatorSprayStatus.VERANDAS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getVerandasLocked()
  {
    return getVerandasLocked(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getVerandasLocked(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.OperatorSprayStatus.VERANDASLOCKED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getVerandasLocked(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.OperatorSprayStatus.VERANDASLOCKED, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getVerandasOther()
  {
    return getVerandasOther(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getVerandasOther(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.OperatorSprayStatus.VERANDASOTHER, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getVerandasOther(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.OperatorSprayStatus.VERANDASOTHER, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getVerandasRefused()
  {
    return getVerandasRefused(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getVerandasRefused(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.OperatorSprayStatus.VERANDASREFUSED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getVerandasRefused(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.OperatorSprayStatus.VERANDASREFUSED, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getVerandasSprayed()
  {
    return getVerandasSprayed(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getVerandasSprayed(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.OperatorSprayStatus.VERANDASSPRAYED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getVerandasSprayed(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.OperatorSprayStatus.VERANDASSPRAYED, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getWrongSurface()
  {
    return getWrongSurface(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getWrongSurface(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.OperatorSprayStatus.WRONGSURFACE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getWrongSurface(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getComponentQuery().get(dss.vector.solutions.irs.OperatorSprayStatus.WRONGSURFACE, alias, displayLabel);

  }
  protected com.runwaysdk.query.AttributeReference referenceFactory( com.runwaysdk.dataaccess.MdAttributeRefDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  com.runwaysdk.dataaccess.MdBusinessDAOIF referenceMdBusinessIF, String referenceTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String userDefinedAlias, String userDefinedDisplayLabel)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals(dss.vector.solutions.irs.OperatorSprayStatus.CREATEDBY)) 
    {
       return new com.runwaysdk.system.SingleActorQuery.SingleActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(dss.vector.solutions.irs.OperatorSprayStatus.ENTITYDOMAIN)) 
    {
       return new com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(dss.vector.solutions.irs.OperatorSprayStatus.LASTUPDATEDBY)) 
    {
       return new com.runwaysdk.system.SingleActorQuery.SingleActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(dss.vector.solutions.irs.OperatorSprayStatus.LOCKEDBY)) 
    {
       return new com.runwaysdk.system.UsersQuery.UsersQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(dss.vector.solutions.irs.OperatorSprayStatus.OWNER)) 
    {
       return new com.runwaysdk.system.ActorQuery.ActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(dss.vector.solutions.irs.OperatorSprayStatus.SPRAY)) 
    {
       return new dss.vector.solutions.irs.TeamSprayQuery.TeamSprayQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(dss.vector.solutions.irs.OperatorSprayStatus.SPRAYOPERATOR)) 
    {
       return new dss.vector.solutions.irs.TeamMemberQuery.TeamMemberQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else 
    {
      String error = "Attribute type ["+mdAttributeIF.getType()+"] is invalid.";
      throw new com.runwaysdk.query.QueryException(error);
    }
  }

  /**  
   * Returns an iterator of Business objects that match the query criteria specified
   * on this query object. 
   * @return iterator of Business objects that match the query criteria specified
   * on this query object.
   */
  public com.runwaysdk.query.OIterator<? extends OperatorSprayStatus> getIterator()
  {
    this.checkNotUsedInValueQuery();
    String sqlStmt;
    if (_limit != null && _skip != null)
    {
      sqlStmt = this.getComponentQuery().getSQL(_limit, _skip);
    }
    else
    {
      sqlStmt = this.getComponentQuery().getSQL();
    }
    java.util.Map<String, com.runwaysdk.query.ColumnInfo> columnInfoMap = this.getComponentQuery().getColumnInfoMap();

    java.sql.ResultSet results = com.runwaysdk.dataaccess.database.Database.query(sqlStmt);
    return new com.runwaysdk.business.BusinessIterator<OperatorSprayStatus>(this.getComponentQuery().getMdEntityIF(), columnInfoMap, results);
  }


/**
 * Interface that masks all type unsafe query methods and defines all type safe methods.
 * This type is used when a join is performed on this class as a reference.
 **/
  public interface OperatorSprayStatusQueryReferenceIF extends com.runwaysdk.generation.loader.Reloadable, com.runwaysdk.query.SelectableReference
  {

    public com.runwaysdk.query.SelectableInteger getBedNets();
    public com.runwaysdk.query.SelectableInteger getBedNets(String alias);
    public com.runwaysdk.query.SelectableInteger getBedNets(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getCattleSheds();
    public com.runwaysdk.query.SelectableInteger getCattleSheds(String alias);
    public com.runwaysdk.query.SelectableInteger getCattleSheds(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getCattleShedsLocked();
    public com.runwaysdk.query.SelectableInteger getCattleShedsLocked(String alias);
    public com.runwaysdk.query.SelectableInteger getCattleShedsLocked(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getCattleShedsOther();
    public com.runwaysdk.query.SelectableInteger getCattleShedsOther(String alias);
    public com.runwaysdk.query.SelectableInteger getCattleShedsOther(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getCattleShedsRefused();
    public com.runwaysdk.query.SelectableInteger getCattleShedsRefused(String alias);
    public com.runwaysdk.query.SelectableInteger getCattleShedsRefused(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getCattleShedsSprayed();
    public com.runwaysdk.query.SelectableInteger getCattleShedsSprayed(String alias);
    public com.runwaysdk.query.SelectableInteger getCattleShedsSprayed(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableMoment getCreateDate();
    public com.runwaysdk.query.SelectableMoment getCreateDate(String alias);
    public com.runwaysdk.query.SelectableMoment getCreateDate(String alias, String displayLabel);
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy();
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias);
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias, String displayLabel);
    public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain();
    public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias);
    public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getHouseholds();
    public com.runwaysdk.query.SelectableInteger getHouseholds(String alias);
    public com.runwaysdk.query.SelectableInteger getHouseholds(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getId();
    public com.runwaysdk.query.SelectableChar getId(String alias);
    public com.runwaysdk.query.SelectableChar getId(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getKeyName();
    public com.runwaysdk.query.SelectableChar getKeyName(String alias);
    public com.runwaysdk.query.SelectableChar getKeyName(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableMoment getLastUpdateDate();
    public com.runwaysdk.query.SelectableMoment getLastUpdateDate(String alias);
    public com.runwaysdk.query.SelectableMoment getLastUpdateDate(String alias, String displayLabel);
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy();
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias);
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getLocked();
    public com.runwaysdk.query.SelectableInteger getLocked(String alias);
    public com.runwaysdk.query.SelectableInteger getLocked(String alias, String displayLabel);
    public com.runwaysdk.system.UsersQuery.UsersQueryReferenceIF getLockedBy();
    public com.runwaysdk.system.UsersQuery.UsersQueryReferenceIF getLockedBy(String alias);
    public com.runwaysdk.system.UsersQuery.UsersQueryReferenceIF getLockedBy(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getNozzlesUsed();
    public com.runwaysdk.query.SelectableInteger getNozzlesUsed(String alias);
    public com.runwaysdk.query.SelectableInteger getNozzlesUsed(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getNumberOfPeople();
    public com.runwaysdk.query.SelectableInteger getNumberOfPeople(String alias);
    public com.runwaysdk.query.SelectableInteger getNumberOfPeople(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getOperatorTarget();
    public com.runwaysdk.query.SelectableInteger getOperatorTarget(String alias);
    public com.runwaysdk.query.SelectableInteger getOperatorTarget(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getOther();
    public com.runwaysdk.query.SelectableInteger getOther(String alias);
    public com.runwaysdk.query.SelectableInteger getOther(String alias, String displayLabel);
    public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner();
    public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias);
    public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getPeople();
    public com.runwaysdk.query.SelectableInteger getPeople(String alias);
    public com.runwaysdk.query.SelectableInteger getPeople(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getPrevSprayedHouseholds();
    public com.runwaysdk.query.SelectableInteger getPrevSprayedHouseholds(String alias);
    public com.runwaysdk.query.SelectableInteger getPrevSprayedHouseholds(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getPrevSprayedStructures();
    public com.runwaysdk.query.SelectableInteger getPrevSprayedStructures(String alias);
    public com.runwaysdk.query.SelectableInteger getPrevSprayedStructures(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getPumpsUsed();
    public com.runwaysdk.query.SelectableInteger getPumpsUsed(String alias);
    public com.runwaysdk.query.SelectableInteger getPumpsUsed(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getReceived();
    public com.runwaysdk.query.SelectableInteger getReceived(String alias);
    public com.runwaysdk.query.SelectableInteger getReceived(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getRefills();
    public com.runwaysdk.query.SelectableInteger getRefills(String alias);
    public com.runwaysdk.query.SelectableInteger getRefills(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getRefused();
    public com.runwaysdk.query.SelectableInteger getRefused(String alias);
    public com.runwaysdk.query.SelectableInteger getRefused(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getReturned();
    public com.runwaysdk.query.SelectableInteger getReturned(String alias);
    public com.runwaysdk.query.SelectableInteger getReturned(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getRooms();
    public com.runwaysdk.query.SelectableInteger getRooms(String alias);
    public com.runwaysdk.query.SelectableInteger getRooms(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getRoomsWithBedNets();
    public com.runwaysdk.query.SelectableInteger getRoomsWithBedNets(String alias);
    public com.runwaysdk.query.SelectableInteger getRoomsWithBedNets(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableLong getSeq();
    public com.runwaysdk.query.SelectableLong getSeq(String alias);
    public com.runwaysdk.query.SelectableLong getSeq(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getSiteMaster();
    public com.runwaysdk.query.SelectableChar getSiteMaster(String alias);
    public com.runwaysdk.query.SelectableChar getSiteMaster(String alias, String displayLabel);
    public dss.vector.solutions.irs.TeamSprayQuery.TeamSprayQueryReferenceIF getSpray();
    public dss.vector.solutions.irs.TeamSprayQuery.TeamSprayQueryReferenceIF getSpray(String alias);
    public dss.vector.solutions.irs.TeamSprayQuery.TeamSprayQueryReferenceIF getSpray(String alias, String displayLabel);
    public dss.vector.solutions.irs.TeamMemberQuery.TeamMemberQueryReferenceIF getSprayOperator();
    public dss.vector.solutions.irs.TeamMemberQuery.TeamMemberQueryReferenceIF getSprayOperator(String alias);
    public dss.vector.solutions.irs.TeamMemberQuery.TeamMemberQueryReferenceIF getSprayOperator(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getSprayedHouseholds();
    public com.runwaysdk.query.SelectableInteger getSprayedHouseholds(String alias);
    public com.runwaysdk.query.SelectableInteger getSprayedHouseholds(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getSprayedRooms();
    public com.runwaysdk.query.SelectableInteger getSprayedRooms(String alias);
    public com.runwaysdk.query.SelectableInteger getSprayedRooms(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getSprayedStructures();
    public com.runwaysdk.query.SelectableInteger getSprayedStructures(String alias);
    public com.runwaysdk.query.SelectableInteger getSprayedStructures(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getStructures();
    public com.runwaysdk.query.SelectableInteger getStructures(String alias);
    public com.runwaysdk.query.SelectableInteger getStructures(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getType();
    public com.runwaysdk.query.SelectableChar getType(String alias);
    public com.runwaysdk.query.SelectableChar getType(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getUsed();
    public com.runwaysdk.query.SelectableInteger getUsed(String alias);
    public com.runwaysdk.query.SelectableInteger getUsed(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getVerandas();
    public com.runwaysdk.query.SelectableInteger getVerandas(String alias);
    public com.runwaysdk.query.SelectableInteger getVerandas(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getVerandasLocked();
    public com.runwaysdk.query.SelectableInteger getVerandasLocked(String alias);
    public com.runwaysdk.query.SelectableInteger getVerandasLocked(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getVerandasOther();
    public com.runwaysdk.query.SelectableInteger getVerandasOther(String alias);
    public com.runwaysdk.query.SelectableInteger getVerandasOther(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getVerandasRefused();
    public com.runwaysdk.query.SelectableInteger getVerandasRefused(String alias);
    public com.runwaysdk.query.SelectableInteger getVerandasRefused(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getVerandasSprayed();
    public com.runwaysdk.query.SelectableInteger getVerandasSprayed(String alias);
    public com.runwaysdk.query.SelectableInteger getVerandasSprayed(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getWrongSurface();
    public com.runwaysdk.query.SelectableInteger getWrongSurface(String alias);
    public com.runwaysdk.query.SelectableInteger getWrongSurface(String alias, String displayLabel);

    public com.runwaysdk.query.BasicCondition EQ(dss.vector.solutions.irs.OperatorSprayStatus operatorSprayStatus);

    public com.runwaysdk.query.BasicCondition NE(dss.vector.solutions.irs.OperatorSprayStatus operatorSprayStatus);

  }

/**
 * Implements type safe query methods.
 * This type is used when a join is performed on this class as a reference.
 **/
  public static class OperatorSprayStatusQueryReference extends com.runwaysdk.query.AttributeReference
 implements OperatorSprayStatusQueryReferenceIF
, com.runwaysdk.generation.loader.Reloadable
  {

  public OperatorSprayStatusQueryReference(com.runwaysdk.dataaccess.MdAttributeRefDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias, com.runwaysdk.dataaccess.MdBusinessDAOIF referenceMdBusinessIF, String referenceTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String alias, String displayLabel)
  {
    super(mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, alias, displayLabel);

  }


    public com.runwaysdk.query.BasicCondition EQ(dss.vector.solutions.irs.OperatorSprayStatus operatorSprayStatus)
    {
      if(operatorSprayStatus == null) return this.EQ((java.lang.String)null);
      return this.EQ(operatorSprayStatus.getId());
    }

    public com.runwaysdk.query.BasicCondition NE(dss.vector.solutions.irs.OperatorSprayStatus operatorSprayStatus)
    {
      if(operatorSprayStatus == null) return this.NE((java.lang.String)null);
      return this.NE(operatorSprayStatus.getId());
    }

  public com.runwaysdk.query.SelectableInteger getBedNets()
  {
    return getBedNets(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getBedNets(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.BEDNETS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getBedNets(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.BEDNETS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getCattleSheds()
  {
    return getCattleSheds(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getCattleSheds(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.CATTLESHEDS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getCattleSheds(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.CATTLESHEDS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getCattleShedsLocked()
  {
    return getCattleShedsLocked(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getCattleShedsLocked(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.CATTLESHEDSLOCKED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getCattleShedsLocked(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.CATTLESHEDSLOCKED, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getCattleShedsOther()
  {
    return getCattleShedsOther(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getCattleShedsOther(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.CATTLESHEDSOTHER, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getCattleShedsOther(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.CATTLESHEDSOTHER, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getCattleShedsRefused()
  {
    return getCattleShedsRefused(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getCattleShedsRefused(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.CATTLESHEDSREFUSED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getCattleShedsRefused(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.CATTLESHEDSREFUSED, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getCattleShedsSprayed()
  {
    return getCattleShedsSprayed(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getCattleShedsSprayed(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.CATTLESHEDSSPRAYED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getCattleShedsSprayed(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.CATTLESHEDSSPRAYED, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableMoment getCreateDate()
  {
    return getCreateDate(null);

  }
 
  public com.runwaysdk.query.SelectableMoment getCreateDate(String alias)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(dss.vector.solutions.irs.OperatorSprayStatus.CREATEDATE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableMoment getCreateDate(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(dss.vector.solutions.irs.OperatorSprayStatus.CREATEDATE, alias, displayLabel);

  }
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy()
  {
    return getCreatedBy(null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias)
  {
    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.get(dss.vector.solutions.irs.OperatorSprayStatus.CREATEDBY, alias, null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.get(dss.vector.solutions.irs.OperatorSprayStatus.CREATEDBY,  alias, displayLabel);

  }
  public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain()
  {
    return getEntityDomain(null);

  }
 
  public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias)
  {
    return (com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF)this.get(dss.vector.solutions.irs.OperatorSprayStatus.ENTITYDOMAIN, alias, null);

  }
 
  public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF)this.get(dss.vector.solutions.irs.OperatorSprayStatus.ENTITYDOMAIN,  alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getHouseholds()
  {
    return getHouseholds(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getHouseholds(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.HOUSEHOLDS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getHouseholds(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.HOUSEHOLDS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getId()
  {
    return getId(null);

  }
 
  public com.runwaysdk.query.SelectableChar getId(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(dss.vector.solutions.irs.OperatorSprayStatus.ID, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getId(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(dss.vector.solutions.irs.OperatorSprayStatus.ID, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getKeyName()
  {
    return getKeyName(null);

  }
 
  public com.runwaysdk.query.SelectableChar getKeyName(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(dss.vector.solutions.irs.OperatorSprayStatus.KEYNAME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getKeyName(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(dss.vector.solutions.irs.OperatorSprayStatus.KEYNAME, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableMoment getLastUpdateDate()
  {
    return getLastUpdateDate(null);

  }
 
  public com.runwaysdk.query.SelectableMoment getLastUpdateDate(String alias)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(dss.vector.solutions.irs.OperatorSprayStatus.LASTUPDATEDATE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableMoment getLastUpdateDate(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(dss.vector.solutions.irs.OperatorSprayStatus.LASTUPDATEDATE, alias, displayLabel);

  }
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy()
  {
    return getLastUpdatedBy(null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias)
  {
    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.get(dss.vector.solutions.irs.OperatorSprayStatus.LASTUPDATEDBY, alias, null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.get(dss.vector.solutions.irs.OperatorSprayStatus.LASTUPDATEDBY,  alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getLocked()
  {
    return getLocked(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getLocked(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.LOCKED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getLocked(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.LOCKED, alias, displayLabel);

  }
  public com.runwaysdk.system.UsersQuery.UsersQueryReferenceIF getLockedBy()
  {
    return getLockedBy(null);

  }
 
  public com.runwaysdk.system.UsersQuery.UsersQueryReferenceIF getLockedBy(String alias)
  {
    return (com.runwaysdk.system.UsersQuery.UsersQueryReferenceIF)this.get(dss.vector.solutions.irs.OperatorSprayStatus.LOCKEDBY, alias, null);

  }
 
  public com.runwaysdk.system.UsersQuery.UsersQueryReferenceIF getLockedBy(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.UsersQuery.UsersQueryReferenceIF)this.get(dss.vector.solutions.irs.OperatorSprayStatus.LOCKEDBY,  alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getNozzlesUsed()
  {
    return getNozzlesUsed(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getNozzlesUsed(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.NOZZLESUSED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getNozzlesUsed(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.NOZZLESUSED, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getNumberOfPeople()
  {
    return getNumberOfPeople(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getNumberOfPeople(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.NUMBEROFPEOPLE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getNumberOfPeople(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.NUMBEROFPEOPLE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getOperatorTarget()
  {
    return getOperatorTarget(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getOperatorTarget(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.OPERATORTARGET, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getOperatorTarget(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.OPERATORTARGET, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getOther()
  {
    return getOther(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getOther(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.OTHER, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getOther(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.OTHER, alias, displayLabel);

  }
  public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner()
  {
    return getOwner(null);

  }
 
  public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias)
  {
    return (com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF)this.get(dss.vector.solutions.irs.OperatorSprayStatus.OWNER, alias, null);

  }
 
  public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF)this.get(dss.vector.solutions.irs.OperatorSprayStatus.OWNER,  alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getPeople()
  {
    return getPeople(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getPeople(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.PEOPLE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getPeople(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.PEOPLE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getPrevSprayedHouseholds()
  {
    return getPrevSprayedHouseholds(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getPrevSprayedHouseholds(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.PREVSPRAYEDHOUSEHOLDS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getPrevSprayedHouseholds(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.PREVSPRAYEDHOUSEHOLDS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getPrevSprayedStructures()
  {
    return getPrevSprayedStructures(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getPrevSprayedStructures(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.PREVSPRAYEDSTRUCTURES, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getPrevSprayedStructures(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.PREVSPRAYEDSTRUCTURES, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getPumpsUsed()
  {
    return getPumpsUsed(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getPumpsUsed(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.PUMPSUSED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getPumpsUsed(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.PUMPSUSED, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getReceived()
  {
    return getReceived(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getReceived(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.RECEIVED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getReceived(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.RECEIVED, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getRefills()
  {
    return getRefills(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getRefills(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.REFILLS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getRefills(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.REFILLS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getRefused()
  {
    return getRefused(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getRefused(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.REFUSED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getRefused(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.REFUSED, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getReturned()
  {
    return getReturned(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getReturned(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.RETURNED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getReturned(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.RETURNED, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getRooms()
  {
    return getRooms(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getRooms(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.ROOMS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getRooms(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.ROOMS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getRoomsWithBedNets()
  {
    return getRoomsWithBedNets(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getRoomsWithBedNets(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.ROOMSWITHBEDNETS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getRoomsWithBedNets(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.ROOMSWITHBEDNETS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableLong getSeq()
  {
    return getSeq(null);

  }
 
  public com.runwaysdk.query.SelectableLong getSeq(String alias)
  {
    return (com.runwaysdk.query.SelectableLong)this.get(dss.vector.solutions.irs.OperatorSprayStatus.SEQ, alias, null);

  }
 
  public com.runwaysdk.query.SelectableLong getSeq(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableLong)this.get(dss.vector.solutions.irs.OperatorSprayStatus.SEQ, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getSiteMaster()
  {
    return getSiteMaster(null);

  }
 
  public com.runwaysdk.query.SelectableChar getSiteMaster(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(dss.vector.solutions.irs.OperatorSprayStatus.SITEMASTER, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getSiteMaster(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(dss.vector.solutions.irs.OperatorSprayStatus.SITEMASTER, alias, displayLabel);

  }
  public dss.vector.solutions.irs.TeamSprayQuery.TeamSprayQueryReferenceIF getSpray()
  {
    return getSpray(null);

  }
 
  public dss.vector.solutions.irs.TeamSprayQuery.TeamSprayQueryReferenceIF getSpray(String alias)
  {
    return (dss.vector.solutions.irs.TeamSprayQuery.TeamSprayQueryReferenceIF)this.get(dss.vector.solutions.irs.OperatorSprayStatus.SPRAY, alias, null);

  }
 
  public dss.vector.solutions.irs.TeamSprayQuery.TeamSprayQueryReferenceIF getSpray(String alias, String displayLabel)
  {
    return (dss.vector.solutions.irs.TeamSprayQuery.TeamSprayQueryReferenceIF)this.get(dss.vector.solutions.irs.OperatorSprayStatus.SPRAY,  alias, displayLabel);

  }
  public dss.vector.solutions.irs.TeamMemberQuery.TeamMemberQueryReferenceIF getSprayOperator()
  {
    return getSprayOperator(null);

  }
 
  public dss.vector.solutions.irs.TeamMemberQuery.TeamMemberQueryReferenceIF getSprayOperator(String alias)
  {
    return (dss.vector.solutions.irs.TeamMemberQuery.TeamMemberQueryReferenceIF)this.get(dss.vector.solutions.irs.OperatorSprayStatus.SPRAYOPERATOR, alias, null);

  }
 
  public dss.vector.solutions.irs.TeamMemberQuery.TeamMemberQueryReferenceIF getSprayOperator(String alias, String displayLabel)
  {
    return (dss.vector.solutions.irs.TeamMemberQuery.TeamMemberQueryReferenceIF)this.get(dss.vector.solutions.irs.OperatorSprayStatus.SPRAYOPERATOR,  alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getSprayedHouseholds()
  {
    return getSprayedHouseholds(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getSprayedHouseholds(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.SPRAYEDHOUSEHOLDS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getSprayedHouseholds(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.SPRAYEDHOUSEHOLDS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getSprayedRooms()
  {
    return getSprayedRooms(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getSprayedRooms(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.SPRAYEDROOMS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getSprayedRooms(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.SPRAYEDROOMS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getSprayedStructures()
  {
    return getSprayedStructures(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getSprayedStructures(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.SPRAYEDSTRUCTURES, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getSprayedStructures(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.SPRAYEDSTRUCTURES, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getStructures()
  {
    return getStructures(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getStructures(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.STRUCTURES, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getStructures(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.STRUCTURES, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getType()
  {
    return getType(null);

  }
 
  public com.runwaysdk.query.SelectableChar getType(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(dss.vector.solutions.irs.OperatorSprayStatus.TYPE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getType(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(dss.vector.solutions.irs.OperatorSprayStatus.TYPE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getUsed()
  {
    return getUsed(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getUsed(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.USED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getUsed(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.USED, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getVerandas()
  {
    return getVerandas(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getVerandas(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.VERANDAS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getVerandas(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.VERANDAS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getVerandasLocked()
  {
    return getVerandasLocked(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getVerandasLocked(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.VERANDASLOCKED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getVerandasLocked(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.VERANDASLOCKED, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getVerandasOther()
  {
    return getVerandasOther(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getVerandasOther(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.VERANDASOTHER, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getVerandasOther(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.VERANDASOTHER, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getVerandasRefused()
  {
    return getVerandasRefused(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getVerandasRefused(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.VERANDASREFUSED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getVerandasRefused(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.VERANDASREFUSED, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getVerandasSprayed()
  {
    return getVerandasSprayed(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getVerandasSprayed(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.VERANDASSPRAYED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getVerandasSprayed(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.VERANDASSPRAYED, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getWrongSurface()
  {
    return getWrongSurface(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getWrongSurface(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.WRONGSURFACE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getWrongSurface(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.WRONGSURFACE, alias, displayLabel);

  }
  protected com.runwaysdk.query.AttributeReference referenceFactory( com.runwaysdk.dataaccess.MdAttributeRefDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  com.runwaysdk.dataaccess.MdBusinessDAOIF referenceMdBusinessIF, String referenceTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String userDefinedAlias, String userDefinedDisplayLabel)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals(dss.vector.solutions.irs.OperatorSprayStatus.CREATEDBY)) 
    {
       return new com.runwaysdk.system.SingleActorQuery.SingleActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(dss.vector.solutions.irs.OperatorSprayStatus.ENTITYDOMAIN)) 
    {
       return new com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(dss.vector.solutions.irs.OperatorSprayStatus.LASTUPDATEDBY)) 
    {
       return new com.runwaysdk.system.SingleActorQuery.SingleActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(dss.vector.solutions.irs.OperatorSprayStatus.LOCKEDBY)) 
    {
       return new com.runwaysdk.system.UsersQuery.UsersQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(dss.vector.solutions.irs.OperatorSprayStatus.OWNER)) 
    {
       return new com.runwaysdk.system.ActorQuery.ActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(dss.vector.solutions.irs.OperatorSprayStatus.SPRAY)) 
    {
       return new dss.vector.solutions.irs.TeamSprayQuery.TeamSprayQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(dss.vector.solutions.irs.OperatorSprayStatus.SPRAYOPERATOR)) 
    {
       return new dss.vector.solutions.irs.TeamMemberQuery.TeamMemberQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else 
    {
      String error = "Attribute type ["+mdAttributeIF.getType()+"] is invalid.";
      throw new com.runwaysdk.query.QueryException(error);
    }
  }

  }

/**
 * Interface that masks all type unsafe query methods and defines all type safe methods.
 * This type is used when a join is performed on this class as a reference.
 **/
  public interface OperatorSprayStatusQueryMultiReferenceIF extends com.runwaysdk.generation.loader.Reloadable, com.runwaysdk.query.SelectableMultiReference
  {

    public com.runwaysdk.query.SelectableInteger getBedNets();
    public com.runwaysdk.query.SelectableInteger getBedNets(String alias);
    public com.runwaysdk.query.SelectableInteger getBedNets(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getCattleSheds();
    public com.runwaysdk.query.SelectableInteger getCattleSheds(String alias);
    public com.runwaysdk.query.SelectableInteger getCattleSheds(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getCattleShedsLocked();
    public com.runwaysdk.query.SelectableInteger getCattleShedsLocked(String alias);
    public com.runwaysdk.query.SelectableInteger getCattleShedsLocked(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getCattleShedsOther();
    public com.runwaysdk.query.SelectableInteger getCattleShedsOther(String alias);
    public com.runwaysdk.query.SelectableInteger getCattleShedsOther(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getCattleShedsRefused();
    public com.runwaysdk.query.SelectableInteger getCattleShedsRefused(String alias);
    public com.runwaysdk.query.SelectableInteger getCattleShedsRefused(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getCattleShedsSprayed();
    public com.runwaysdk.query.SelectableInteger getCattleShedsSprayed(String alias);
    public com.runwaysdk.query.SelectableInteger getCattleShedsSprayed(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableMoment getCreateDate();
    public com.runwaysdk.query.SelectableMoment getCreateDate(String alias);
    public com.runwaysdk.query.SelectableMoment getCreateDate(String alias, String displayLabel);
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy();
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias);
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias, String displayLabel);
    public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain();
    public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias);
    public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getHouseholds();
    public com.runwaysdk.query.SelectableInteger getHouseholds(String alias);
    public com.runwaysdk.query.SelectableInteger getHouseholds(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getId();
    public com.runwaysdk.query.SelectableChar getId(String alias);
    public com.runwaysdk.query.SelectableChar getId(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getKeyName();
    public com.runwaysdk.query.SelectableChar getKeyName(String alias);
    public com.runwaysdk.query.SelectableChar getKeyName(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableMoment getLastUpdateDate();
    public com.runwaysdk.query.SelectableMoment getLastUpdateDate(String alias);
    public com.runwaysdk.query.SelectableMoment getLastUpdateDate(String alias, String displayLabel);
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy();
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias);
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getLocked();
    public com.runwaysdk.query.SelectableInteger getLocked(String alias);
    public com.runwaysdk.query.SelectableInteger getLocked(String alias, String displayLabel);
    public com.runwaysdk.system.UsersQuery.UsersQueryReferenceIF getLockedBy();
    public com.runwaysdk.system.UsersQuery.UsersQueryReferenceIF getLockedBy(String alias);
    public com.runwaysdk.system.UsersQuery.UsersQueryReferenceIF getLockedBy(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getNozzlesUsed();
    public com.runwaysdk.query.SelectableInteger getNozzlesUsed(String alias);
    public com.runwaysdk.query.SelectableInteger getNozzlesUsed(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getNumberOfPeople();
    public com.runwaysdk.query.SelectableInteger getNumberOfPeople(String alias);
    public com.runwaysdk.query.SelectableInteger getNumberOfPeople(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getOperatorTarget();
    public com.runwaysdk.query.SelectableInteger getOperatorTarget(String alias);
    public com.runwaysdk.query.SelectableInteger getOperatorTarget(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getOther();
    public com.runwaysdk.query.SelectableInteger getOther(String alias);
    public com.runwaysdk.query.SelectableInteger getOther(String alias, String displayLabel);
    public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner();
    public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias);
    public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getPeople();
    public com.runwaysdk.query.SelectableInteger getPeople(String alias);
    public com.runwaysdk.query.SelectableInteger getPeople(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getPrevSprayedHouseholds();
    public com.runwaysdk.query.SelectableInteger getPrevSprayedHouseholds(String alias);
    public com.runwaysdk.query.SelectableInteger getPrevSprayedHouseholds(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getPrevSprayedStructures();
    public com.runwaysdk.query.SelectableInteger getPrevSprayedStructures(String alias);
    public com.runwaysdk.query.SelectableInteger getPrevSprayedStructures(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getPumpsUsed();
    public com.runwaysdk.query.SelectableInteger getPumpsUsed(String alias);
    public com.runwaysdk.query.SelectableInteger getPumpsUsed(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getReceived();
    public com.runwaysdk.query.SelectableInteger getReceived(String alias);
    public com.runwaysdk.query.SelectableInteger getReceived(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getRefills();
    public com.runwaysdk.query.SelectableInteger getRefills(String alias);
    public com.runwaysdk.query.SelectableInteger getRefills(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getRefused();
    public com.runwaysdk.query.SelectableInteger getRefused(String alias);
    public com.runwaysdk.query.SelectableInteger getRefused(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getReturned();
    public com.runwaysdk.query.SelectableInteger getReturned(String alias);
    public com.runwaysdk.query.SelectableInteger getReturned(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getRooms();
    public com.runwaysdk.query.SelectableInteger getRooms(String alias);
    public com.runwaysdk.query.SelectableInteger getRooms(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getRoomsWithBedNets();
    public com.runwaysdk.query.SelectableInteger getRoomsWithBedNets(String alias);
    public com.runwaysdk.query.SelectableInteger getRoomsWithBedNets(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableLong getSeq();
    public com.runwaysdk.query.SelectableLong getSeq(String alias);
    public com.runwaysdk.query.SelectableLong getSeq(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getSiteMaster();
    public com.runwaysdk.query.SelectableChar getSiteMaster(String alias);
    public com.runwaysdk.query.SelectableChar getSiteMaster(String alias, String displayLabel);
    public dss.vector.solutions.irs.TeamSprayQuery.TeamSprayQueryReferenceIF getSpray();
    public dss.vector.solutions.irs.TeamSprayQuery.TeamSprayQueryReferenceIF getSpray(String alias);
    public dss.vector.solutions.irs.TeamSprayQuery.TeamSprayQueryReferenceIF getSpray(String alias, String displayLabel);
    public dss.vector.solutions.irs.TeamMemberQuery.TeamMemberQueryReferenceIF getSprayOperator();
    public dss.vector.solutions.irs.TeamMemberQuery.TeamMemberQueryReferenceIF getSprayOperator(String alias);
    public dss.vector.solutions.irs.TeamMemberQuery.TeamMemberQueryReferenceIF getSprayOperator(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getSprayedHouseholds();
    public com.runwaysdk.query.SelectableInteger getSprayedHouseholds(String alias);
    public com.runwaysdk.query.SelectableInteger getSprayedHouseholds(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getSprayedRooms();
    public com.runwaysdk.query.SelectableInteger getSprayedRooms(String alias);
    public com.runwaysdk.query.SelectableInteger getSprayedRooms(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getSprayedStructures();
    public com.runwaysdk.query.SelectableInteger getSprayedStructures(String alias);
    public com.runwaysdk.query.SelectableInteger getSprayedStructures(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getStructures();
    public com.runwaysdk.query.SelectableInteger getStructures(String alias);
    public com.runwaysdk.query.SelectableInteger getStructures(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getType();
    public com.runwaysdk.query.SelectableChar getType(String alias);
    public com.runwaysdk.query.SelectableChar getType(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getUsed();
    public com.runwaysdk.query.SelectableInteger getUsed(String alias);
    public com.runwaysdk.query.SelectableInteger getUsed(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getVerandas();
    public com.runwaysdk.query.SelectableInteger getVerandas(String alias);
    public com.runwaysdk.query.SelectableInteger getVerandas(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getVerandasLocked();
    public com.runwaysdk.query.SelectableInteger getVerandasLocked(String alias);
    public com.runwaysdk.query.SelectableInteger getVerandasLocked(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getVerandasOther();
    public com.runwaysdk.query.SelectableInteger getVerandasOther(String alias);
    public com.runwaysdk.query.SelectableInteger getVerandasOther(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getVerandasRefused();
    public com.runwaysdk.query.SelectableInteger getVerandasRefused(String alias);
    public com.runwaysdk.query.SelectableInteger getVerandasRefused(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getVerandasSprayed();
    public com.runwaysdk.query.SelectableInteger getVerandasSprayed(String alias);
    public com.runwaysdk.query.SelectableInteger getVerandasSprayed(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableInteger getWrongSurface();
    public com.runwaysdk.query.SelectableInteger getWrongSurface(String alias);
    public com.runwaysdk.query.SelectableInteger getWrongSurface(String alias, String displayLabel);

    public com.runwaysdk.query.Condition containsAny(dss.vector.solutions.irs.OperatorSprayStatus ... operatorSprayStatus);
    public com.runwaysdk.query.Condition notContainsAny(dss.vector.solutions.irs.OperatorSprayStatus ... operatorSprayStatus);
    public com.runwaysdk.query.Condition containsAll(dss.vector.solutions.irs.OperatorSprayStatus ... operatorSprayStatus);
    public com.runwaysdk.query.Condition notContainsAll(dss.vector.solutions.irs.OperatorSprayStatus ... operatorSprayStatus);
    public com.runwaysdk.query.Condition containsExactly(dss.vector.solutions.irs.OperatorSprayStatus ... operatorSprayStatus);
  }

/**
 * Implements type safe query methods.
 * This type is used when a join is performed on this class as a reference.
 **/
  public static class OperatorSprayStatusQueryMultiReference extends com.runwaysdk.query.AttributeMultiReference
 implements OperatorSprayStatusQueryMultiReferenceIF
, com.runwaysdk.generation.loader.Reloadable
  {

  public OperatorSprayStatusQueryMultiReference(com.runwaysdk.dataaccess.MdAttributeMultiReferenceDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias, String mdMultiReferenceTableName, com.runwaysdk.dataaccess.MdBusinessDAOIF referenceMdBusinessIF, String referenceTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String alias, String displayLabel)
  {
    super(mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, mdMultiReferenceTableName, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, alias, displayLabel);

  }



    public com.runwaysdk.query.Condition containsAny(dss.vector.solutions.irs.OperatorSprayStatus ... operatorSprayStatus)  {

      String[] itemIdArray = new String[operatorSprayStatus.length]; 

      for (int i=0; i<operatorSprayStatus.length; i++)
      {
        itemIdArray[i] = operatorSprayStatus[i].getId();
      }

      return this.containsAny(itemIdArray);
  }

    public com.runwaysdk.query.Condition notContainsAny(dss.vector.solutions.irs.OperatorSprayStatus ... operatorSprayStatus)  {

      String[] itemIdArray = new String[operatorSprayStatus.length]; 

      for (int i=0; i<operatorSprayStatus.length; i++)
      {
        itemIdArray[i] = operatorSprayStatus[i].getId();
      }

      return this.notContainsAny(itemIdArray);
  }

    public com.runwaysdk.query.Condition containsAll(dss.vector.solutions.irs.OperatorSprayStatus ... operatorSprayStatus)  {

      String[] itemIdArray = new String[operatorSprayStatus.length]; 

      for (int i=0; i<operatorSprayStatus.length; i++)
      {
        itemIdArray[i] = operatorSprayStatus[i].getId();
      }

      return this.containsAll(itemIdArray);
  }

    public com.runwaysdk.query.Condition notContainsAll(dss.vector.solutions.irs.OperatorSprayStatus ... operatorSprayStatus)  {

      String[] itemIdArray = new String[operatorSprayStatus.length]; 

      for (int i=0; i<operatorSprayStatus.length; i++)
      {
        itemIdArray[i] = operatorSprayStatus[i].getId();
      }

      return this.notContainsAll(itemIdArray);
  }

    public com.runwaysdk.query.Condition containsExactly(dss.vector.solutions.irs.OperatorSprayStatus ... operatorSprayStatus)  {

      String[] itemIdArray = new String[operatorSprayStatus.length]; 

      for (int i=0; i<operatorSprayStatus.length; i++)
      {
        itemIdArray[i] = operatorSprayStatus[i].getId();
      }

      return this.containsExactly(itemIdArray);
  }
  public com.runwaysdk.query.SelectableInteger getBedNets()
  {
    return getBedNets(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getBedNets(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.BEDNETS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getBedNets(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.BEDNETS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getCattleSheds()
  {
    return getCattleSheds(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getCattleSheds(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.CATTLESHEDS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getCattleSheds(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.CATTLESHEDS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getCattleShedsLocked()
  {
    return getCattleShedsLocked(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getCattleShedsLocked(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.CATTLESHEDSLOCKED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getCattleShedsLocked(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.CATTLESHEDSLOCKED, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getCattleShedsOther()
  {
    return getCattleShedsOther(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getCattleShedsOther(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.CATTLESHEDSOTHER, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getCattleShedsOther(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.CATTLESHEDSOTHER, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getCattleShedsRefused()
  {
    return getCattleShedsRefused(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getCattleShedsRefused(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.CATTLESHEDSREFUSED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getCattleShedsRefused(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.CATTLESHEDSREFUSED, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getCattleShedsSprayed()
  {
    return getCattleShedsSprayed(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getCattleShedsSprayed(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.CATTLESHEDSSPRAYED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getCattleShedsSprayed(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.CATTLESHEDSSPRAYED, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableMoment getCreateDate()
  {
    return getCreateDate(null);

  }
 
  public com.runwaysdk.query.SelectableMoment getCreateDate(String alias)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(dss.vector.solutions.irs.OperatorSprayStatus.CREATEDATE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableMoment getCreateDate(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(dss.vector.solutions.irs.OperatorSprayStatus.CREATEDATE, alias, displayLabel);

  }
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy()
  {
    return getCreatedBy(null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias)
  {
    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.get(dss.vector.solutions.irs.OperatorSprayStatus.CREATEDBY, alias, null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.get(dss.vector.solutions.irs.OperatorSprayStatus.CREATEDBY,  alias, displayLabel);

  }
  public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain()
  {
    return getEntityDomain(null);

  }
 
  public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias)
  {
    return (com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF)this.get(dss.vector.solutions.irs.OperatorSprayStatus.ENTITYDOMAIN, alias, null);

  }
 
  public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF)this.get(dss.vector.solutions.irs.OperatorSprayStatus.ENTITYDOMAIN,  alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getHouseholds()
  {
    return getHouseholds(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getHouseholds(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.HOUSEHOLDS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getHouseholds(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.HOUSEHOLDS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getId()
  {
    return getId(null);

  }
 
  public com.runwaysdk.query.SelectableChar getId(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(dss.vector.solutions.irs.OperatorSprayStatus.ID, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getId(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(dss.vector.solutions.irs.OperatorSprayStatus.ID, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getKeyName()
  {
    return getKeyName(null);

  }
 
  public com.runwaysdk.query.SelectableChar getKeyName(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(dss.vector.solutions.irs.OperatorSprayStatus.KEYNAME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getKeyName(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(dss.vector.solutions.irs.OperatorSprayStatus.KEYNAME, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableMoment getLastUpdateDate()
  {
    return getLastUpdateDate(null);

  }
 
  public com.runwaysdk.query.SelectableMoment getLastUpdateDate(String alias)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(dss.vector.solutions.irs.OperatorSprayStatus.LASTUPDATEDATE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableMoment getLastUpdateDate(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(dss.vector.solutions.irs.OperatorSprayStatus.LASTUPDATEDATE, alias, displayLabel);

  }
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy()
  {
    return getLastUpdatedBy(null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias)
  {
    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.get(dss.vector.solutions.irs.OperatorSprayStatus.LASTUPDATEDBY, alias, null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.get(dss.vector.solutions.irs.OperatorSprayStatus.LASTUPDATEDBY,  alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getLocked()
  {
    return getLocked(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getLocked(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.LOCKED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getLocked(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.LOCKED, alias, displayLabel);

  }
  public com.runwaysdk.system.UsersQuery.UsersQueryReferenceIF getLockedBy()
  {
    return getLockedBy(null);

  }
 
  public com.runwaysdk.system.UsersQuery.UsersQueryReferenceIF getLockedBy(String alias)
  {
    return (com.runwaysdk.system.UsersQuery.UsersQueryReferenceIF)this.get(dss.vector.solutions.irs.OperatorSprayStatus.LOCKEDBY, alias, null);

  }
 
  public com.runwaysdk.system.UsersQuery.UsersQueryReferenceIF getLockedBy(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.UsersQuery.UsersQueryReferenceIF)this.get(dss.vector.solutions.irs.OperatorSprayStatus.LOCKEDBY,  alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getNozzlesUsed()
  {
    return getNozzlesUsed(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getNozzlesUsed(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.NOZZLESUSED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getNozzlesUsed(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.NOZZLESUSED, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getNumberOfPeople()
  {
    return getNumberOfPeople(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getNumberOfPeople(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.NUMBEROFPEOPLE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getNumberOfPeople(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.NUMBEROFPEOPLE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getOperatorTarget()
  {
    return getOperatorTarget(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getOperatorTarget(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.OPERATORTARGET, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getOperatorTarget(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.OPERATORTARGET, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getOther()
  {
    return getOther(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getOther(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.OTHER, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getOther(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.OTHER, alias, displayLabel);

  }
  public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner()
  {
    return getOwner(null);

  }
 
  public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias)
  {
    return (com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF)this.get(dss.vector.solutions.irs.OperatorSprayStatus.OWNER, alias, null);

  }
 
  public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF)this.get(dss.vector.solutions.irs.OperatorSprayStatus.OWNER,  alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getPeople()
  {
    return getPeople(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getPeople(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.PEOPLE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getPeople(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.PEOPLE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getPrevSprayedHouseholds()
  {
    return getPrevSprayedHouseholds(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getPrevSprayedHouseholds(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.PREVSPRAYEDHOUSEHOLDS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getPrevSprayedHouseholds(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.PREVSPRAYEDHOUSEHOLDS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getPrevSprayedStructures()
  {
    return getPrevSprayedStructures(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getPrevSprayedStructures(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.PREVSPRAYEDSTRUCTURES, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getPrevSprayedStructures(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.PREVSPRAYEDSTRUCTURES, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getPumpsUsed()
  {
    return getPumpsUsed(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getPumpsUsed(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.PUMPSUSED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getPumpsUsed(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.PUMPSUSED, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getReceived()
  {
    return getReceived(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getReceived(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.RECEIVED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getReceived(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.RECEIVED, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getRefills()
  {
    return getRefills(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getRefills(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.REFILLS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getRefills(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.REFILLS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getRefused()
  {
    return getRefused(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getRefused(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.REFUSED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getRefused(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.REFUSED, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getReturned()
  {
    return getReturned(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getReturned(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.RETURNED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getReturned(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.RETURNED, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getRooms()
  {
    return getRooms(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getRooms(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.ROOMS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getRooms(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.ROOMS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getRoomsWithBedNets()
  {
    return getRoomsWithBedNets(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getRoomsWithBedNets(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.ROOMSWITHBEDNETS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getRoomsWithBedNets(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.ROOMSWITHBEDNETS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableLong getSeq()
  {
    return getSeq(null);

  }
 
  public com.runwaysdk.query.SelectableLong getSeq(String alias)
  {
    return (com.runwaysdk.query.SelectableLong)this.get(dss.vector.solutions.irs.OperatorSprayStatus.SEQ, alias, null);

  }
 
  public com.runwaysdk.query.SelectableLong getSeq(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableLong)this.get(dss.vector.solutions.irs.OperatorSprayStatus.SEQ, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getSiteMaster()
  {
    return getSiteMaster(null);

  }
 
  public com.runwaysdk.query.SelectableChar getSiteMaster(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(dss.vector.solutions.irs.OperatorSprayStatus.SITEMASTER, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getSiteMaster(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(dss.vector.solutions.irs.OperatorSprayStatus.SITEMASTER, alias, displayLabel);

  }
  public dss.vector.solutions.irs.TeamSprayQuery.TeamSprayQueryReferenceIF getSpray()
  {
    return getSpray(null);

  }
 
  public dss.vector.solutions.irs.TeamSprayQuery.TeamSprayQueryReferenceIF getSpray(String alias)
  {
    return (dss.vector.solutions.irs.TeamSprayQuery.TeamSprayQueryReferenceIF)this.get(dss.vector.solutions.irs.OperatorSprayStatus.SPRAY, alias, null);

  }
 
  public dss.vector.solutions.irs.TeamSprayQuery.TeamSprayQueryReferenceIF getSpray(String alias, String displayLabel)
  {
    return (dss.vector.solutions.irs.TeamSprayQuery.TeamSprayQueryReferenceIF)this.get(dss.vector.solutions.irs.OperatorSprayStatus.SPRAY,  alias, displayLabel);

  }
  public dss.vector.solutions.irs.TeamMemberQuery.TeamMemberQueryReferenceIF getSprayOperator()
  {
    return getSprayOperator(null);

  }
 
  public dss.vector.solutions.irs.TeamMemberQuery.TeamMemberQueryReferenceIF getSprayOperator(String alias)
  {
    return (dss.vector.solutions.irs.TeamMemberQuery.TeamMemberQueryReferenceIF)this.get(dss.vector.solutions.irs.OperatorSprayStatus.SPRAYOPERATOR, alias, null);

  }
 
  public dss.vector.solutions.irs.TeamMemberQuery.TeamMemberQueryReferenceIF getSprayOperator(String alias, String displayLabel)
  {
    return (dss.vector.solutions.irs.TeamMemberQuery.TeamMemberQueryReferenceIF)this.get(dss.vector.solutions.irs.OperatorSprayStatus.SPRAYOPERATOR,  alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getSprayedHouseholds()
  {
    return getSprayedHouseholds(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getSprayedHouseholds(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.SPRAYEDHOUSEHOLDS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getSprayedHouseholds(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.SPRAYEDHOUSEHOLDS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getSprayedRooms()
  {
    return getSprayedRooms(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getSprayedRooms(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.SPRAYEDROOMS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getSprayedRooms(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.SPRAYEDROOMS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getSprayedStructures()
  {
    return getSprayedStructures(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getSprayedStructures(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.SPRAYEDSTRUCTURES, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getSprayedStructures(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.SPRAYEDSTRUCTURES, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getStructures()
  {
    return getStructures(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getStructures(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.STRUCTURES, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getStructures(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.STRUCTURES, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getType()
  {
    return getType(null);

  }
 
  public com.runwaysdk.query.SelectableChar getType(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(dss.vector.solutions.irs.OperatorSprayStatus.TYPE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getType(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(dss.vector.solutions.irs.OperatorSprayStatus.TYPE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getUsed()
  {
    return getUsed(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getUsed(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.USED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getUsed(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.USED, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getVerandas()
  {
    return getVerandas(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getVerandas(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.VERANDAS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getVerandas(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.VERANDAS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getVerandasLocked()
  {
    return getVerandasLocked(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getVerandasLocked(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.VERANDASLOCKED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getVerandasLocked(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.VERANDASLOCKED, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getVerandasOther()
  {
    return getVerandasOther(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getVerandasOther(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.VERANDASOTHER, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getVerandasOther(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.VERANDASOTHER, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getVerandasRefused()
  {
    return getVerandasRefused(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getVerandasRefused(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.VERANDASREFUSED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getVerandasRefused(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.VERANDASREFUSED, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getVerandasSprayed()
  {
    return getVerandasSprayed(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getVerandasSprayed(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.VERANDASSPRAYED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getVerandasSprayed(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.VERANDASSPRAYED, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getWrongSurface()
  {
    return getWrongSurface(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getWrongSurface(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.WRONGSURFACE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getWrongSurface(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.get(dss.vector.solutions.irs.OperatorSprayStatus.WRONGSURFACE, alias, displayLabel);

  }
  protected com.runwaysdk.query.AttributeReference referenceFactory( com.runwaysdk.dataaccess.MdAttributeRefDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  com.runwaysdk.dataaccess.MdBusinessDAOIF referenceMdBusinessIF, String referenceTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String userDefinedAlias, String userDefinedDisplayLabel)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals(dss.vector.solutions.irs.OperatorSprayStatus.CREATEDBY)) 
    {
       return new com.runwaysdk.system.SingleActorQuery.SingleActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(dss.vector.solutions.irs.OperatorSprayStatus.ENTITYDOMAIN)) 
    {
       return new com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(dss.vector.solutions.irs.OperatorSprayStatus.LASTUPDATEDBY)) 
    {
       return new com.runwaysdk.system.SingleActorQuery.SingleActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(dss.vector.solutions.irs.OperatorSprayStatus.LOCKEDBY)) 
    {
       return new com.runwaysdk.system.UsersQuery.UsersQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(dss.vector.solutions.irs.OperatorSprayStatus.OWNER)) 
    {
       return new com.runwaysdk.system.ActorQuery.ActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(dss.vector.solutions.irs.OperatorSprayStatus.SPRAY)) 
    {
       return new dss.vector.solutions.irs.TeamSprayQuery.TeamSprayQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(dss.vector.solutions.irs.OperatorSprayStatus.SPRAYOPERATOR)) 
    {
       return new dss.vector.solutions.irs.TeamMemberQuery.TeamMemberQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else 
    {
      String error = "Attribute type ["+mdAttributeIF.getType()+"] is invalid.";
      throw new com.runwaysdk.query.QueryException(error);
    }
  }

  }
}
