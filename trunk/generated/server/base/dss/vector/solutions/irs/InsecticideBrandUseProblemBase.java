package dss.vector.solutions.irs;

@com.runwaysdk.business.ClassSignature(hash = -894522226)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to InsecticideBrandUseProblem.java
 *
 * @author Autogenerated by RunwaySDK
 */
public abstract class InsecticideBrandUseProblemBase extends dss.vector.solutions.NotificationProblem implements com.runwaysdk.generation.loader.Reloadable
{
  public final static String CLASS = "dss.vector.solutions.irs.InsecticideBrandUseProblem";
  public static java.lang.String ATTRIBUTELABEL = "attributeLabel";
  public static java.lang.String ATTRIBUTEVALUE = "attributeValue";
  public static java.lang.String INSECTICIDEUSELABEL = "insecticideUseLabel";
  public static java.lang.String INSECTICIDEUSEVALUE = "insecticideUseValue";
  private static final long serialVersionUID = -894522226;
  
  public InsecticideBrandUseProblemBase()
  {
    super();
  }
  
  public InsecticideBrandUseProblemBase(java.lang.String developerMessage)
  {
    super(developerMessage);
  }
  
  public String getAttributeLabel()
  {
    return getValue(ATTRIBUTELABEL);
  }
  
  public void validateAttributeLabel()
  {
    this.validateAttribute(ATTRIBUTELABEL);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeTextDAOIF getAttributeLabelMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.irs.InsecticideBrandUseProblem.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeTextDAOIF)mdClassIF.definesAttribute(ATTRIBUTELABEL);
  }
  
  public void setAttributeLabel(String value)
  {
    if(value == null)
    {
      setValue(ATTRIBUTELABEL, "");
    }
    else
    {
      setValue(ATTRIBUTELABEL, value);
    }
  }
  
  public String getAttributeValue()
  {
    return getValue(ATTRIBUTEVALUE);
  }
  
  public void validateAttributeValue()
  {
    this.validateAttribute(ATTRIBUTEVALUE);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeTextDAOIF getAttributeValueMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.irs.InsecticideBrandUseProblem.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeTextDAOIF)mdClassIF.definesAttribute(ATTRIBUTEVALUE);
  }
  
  public void setAttributeValue(String value)
  {
    if(value == null)
    {
      setValue(ATTRIBUTEVALUE, "");
    }
    else
    {
      setValue(ATTRIBUTEVALUE, value);
    }
  }
  
  public String getInsecticideUseLabel()
  {
    return getValue(INSECTICIDEUSELABEL);
  }
  
  public void validateInsecticideUseLabel()
  {
    this.validateAttribute(INSECTICIDEUSELABEL);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeTextDAOIF getInsecticideUseLabelMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.irs.InsecticideBrandUseProblem.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeTextDAOIF)mdClassIF.definesAttribute(INSECTICIDEUSELABEL);
  }
  
  public void setInsecticideUseLabel(String value)
  {
    if(value == null)
    {
      setValue(INSECTICIDEUSELABEL, "");
    }
    else
    {
      setValue(INSECTICIDEUSELABEL, value);
    }
  }
  
  public String getInsecticideUseValue()
  {
    return getValue(INSECTICIDEUSEVALUE);
  }
  
  public void validateInsecticideUseValue()
  {
    this.validateAttribute(INSECTICIDEUSEVALUE);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeTextDAOIF getInsecticideUseValueMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.irs.InsecticideBrandUseProblem.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeTextDAOIF)mdClassIF.definesAttribute(INSECTICIDEUSEVALUE);
  }
  
  public void setInsecticideUseValue(String value)
  {
    if(value == null)
    {
      setValue(INSECTICIDEUSEVALUE, "");
    }
    else
    {
      setValue(INSECTICIDEUSEVALUE, value);
    }
  }
  
  protected String getDeclaredType()
  {
    return CLASS;
  }
  
  public java.lang.String localize(java.util.Locale locale)
  {
    java.lang.String message = super.localize(locale);
    message = replace(message, "{attributeLabel}", this.getAttributeLabel());
    message = replace(message, "{attributeValue}", this.getAttributeValue());
    message = replace(message, "{insecticideUseLabel}", this.getInsecticideUseLabel());
    message = replace(message, "{insecticideUseValue}", this.getInsecticideUseValue());
    return message;
  }
  
  public String toString()
  {
    if (this.isNew())
    {
      return "New: "+ this.getClassDisplayLabel();
    }
    else
    {
      return super.toString();
    }
  }
}
