package dss.vector.solutions.irs;

@com.runwaysdk.business.ClassSignature(hash = -596213394)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to InsecticideBrandLabel.java
 *
 * @author Autogenerated by RunwaySDK
 */
public abstract class InsecticideBrandLabelBase extends com.runwaysdk.business.View implements com.runwaysdk.generation.loader.Reloadable
{
  public final static String CLASS = "dss.vector.solutions.irs.InsecticideBrandLabel";
  public static java.lang.String ACTIVEINGREDIENT = "activeIngredient";
  public static java.lang.String BRANDNAME = "brandName";
  public static java.lang.String CONCENTRATION = "concentration";
  public static java.lang.String CONCRETEID = "concreteId";
  public static java.lang.String ID = "id";
  private static final long serialVersionUID = -596213394;
  
  public InsecticideBrandLabelBase()
  {
    super();
  }
  
  public String getActiveIngredient()
  {
    return getValue(ACTIVEINGREDIENT);
  }
  
  public void validateActiveIngredient()
  {
    this.validateAttribute(ACTIVEINGREDIENT);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getActiveIngredientMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.irs.InsecticideBrandLabel.CLASS);
    return mdClassIF.definesAttribute(ACTIVEINGREDIENT);
  }
  
  public void setActiveIngredient(String value)
  {
    if(value == null)
    {
      setValue(ACTIVEINGREDIENT, "");
    }
    else
    {
      setValue(ACTIVEINGREDIENT, value);
    }
  }
  
  public String getBrandName()
  {
    return getValue(BRANDNAME);
  }
  
  public void validateBrandName()
  {
    this.validateAttribute(BRANDNAME);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getBrandNameMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.irs.InsecticideBrandLabel.CLASS);
    return mdClassIF.definesAttribute(BRANDNAME);
  }
  
  public void setBrandName(String value)
  {
    if(value == null)
    {
      setValue(BRANDNAME, "");
    }
    else
    {
      setValue(BRANDNAME, value);
    }
  }
  
  public Integer getConcentration()
  {
    return com.runwaysdk.constants.MdAttributeIntegerUtil.getTypeSafeValue(getValue(CONCENTRATION));
  }
  
  public void validateConcentration()
  {
    this.validateAttribute(CONCENTRATION);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getConcentrationMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.irs.InsecticideBrandLabel.CLASS);
    return mdClassIF.definesAttribute(CONCENTRATION);
  }
  
  public void setConcentration(Integer value)
  {
    if(value == null)
    {
      setValue(CONCENTRATION, "");
    }
    else
    {
      setValue(CONCENTRATION, java.lang.Integer.toString(value));
    }
  }
  
  public String getConcreteId()
  {
    return getValue(CONCRETEID);
  }
  
  public void validateConcreteId()
  {
    this.validateAttribute(CONCRETEID);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getConcreteIdMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.irs.InsecticideBrandLabel.CLASS);
    return mdClassIF.definesAttribute(CONCRETEID);
  }
  
  public void setConcreteId(String value)
  {
    if(value == null)
    {
      setValue(CONCRETEID, "");
    }
    else
    {
      setValue(CONCRETEID, value);
    }
  }
  
  public String getId()
  {
    return getValue(ID);
  }
  
  public void validateId()
  {
    this.validateAttribute(ID);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getIdMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.irs.InsecticideBrandLabel.CLASS);
    return mdClassIF.definesAttribute(ID);
  }
  
  protected String getDeclaredType()
  {
    return CLASS;
  }
  
  public static InsecticideBrandLabel get(String id)
  {
    return (InsecticideBrandLabel) com.runwaysdk.business.View.get(id);
  }
  
  public static dss.vector.solutions.irs.InsecticideBrandLabel getLabel(java.lang.String id)
  {
    String msg = "This method should never be invoked.  It should be overwritten in dss.vector.solutions.irs.InsecticideBrandLabel.java";
    throw new com.runwaysdk.dataaccess.metadata.ForbiddenMethodException(msg);
  }
  
  public String toString()
  {
    if (this.isNew())
    {
      return "New: "+ this.getClassDisplayLabel();
    }
    else
    {
      return super.toString();
    }
  }
}
