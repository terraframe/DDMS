package dss.vector.solutions.general;

@com.runwaysdk.business.ClassSignature(hash = -956087198)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to EmailConfiguration.java
 *
 * @author Autogenerated by RunwaySDK
 */
public abstract class EmailConfigurationBase extends com.runwaysdk.business.Business implements com.runwaysdk.generation.loader.Reloadable
{
  public final static String CLASS = "dss.vector.solutions.general.EmailConfiguration";
  public static java.lang.String CREATEDATE = "createDate";
  public static java.lang.String CREATEDBY = "createdBy";
  public static java.lang.String EMAILPASSWORD = "emailPassword";
  public static java.lang.String EMAILSERVER = "emailServer";
  public static java.lang.String EMAILUSERID = "emailUserid";
  public static java.lang.String ENTITYDOMAIN = "entityDomain";
  public static java.lang.String ID = "id";
  public static java.lang.String KEYNAME = "keyName";
  public static java.lang.String LASTUPDATEDATE = "lastUpdateDate";
  public static java.lang.String LASTUPDATEDBY = "lastUpdatedBy";
  public static java.lang.String LOCKEDBY = "lockedBy";
  public static java.lang.String OWNER = "owner";
  public static java.lang.String PROTOCOL = "protocol";
  public static java.lang.String RETRY = "retry";
  public static java.lang.String SEQ = "seq";
  public static java.lang.String SITEMASTER = "siteMaster";
  public static java.lang.String TIMEOUT = "timeout";
  public static java.lang.String TYPE = "type";
  private static final long serialVersionUID = -956087198;
  
  public EmailConfigurationBase()
  {
    super();
  }
  
  public java.util.Date getCreateDate()
  {
    return com.runwaysdk.constants.MdAttributeDateTimeUtil.getTypeSafeValue(getValue(CREATEDATE));
  }
  
  public void validateCreateDate()
  {
    this.validateAttribute(CREATEDATE);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getCreateDateMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.general.EmailConfiguration.CLASS);
    return mdClassIF.definesAttribute(CREATEDATE);
  }
  
  public com.runwaysdk.system.SingleActor getCreatedBy()
  {
    if (getValue(CREATEDBY).trim().equals(""))
    {
      return null;
    }
    else
    {
      return com.runwaysdk.system.SingleActor.get(getValue(CREATEDBY));
    }
  }
  
  public void validateCreatedBy()
  {
    this.validateAttribute(CREATEDBY);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getCreatedByMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.general.EmailConfiguration.CLASS);
    return mdClassIF.definesAttribute(CREATEDBY);
  }
  
  public String getEmailPassword()
  {
    return getValue(EMAILPASSWORD);
  }
  
  public void validateEmailPassword()
  {
    this.validateAttribute(EMAILPASSWORD);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getEmailPasswordMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.general.EmailConfiguration.CLASS);
    return mdClassIF.definesAttribute(EMAILPASSWORD);
  }
  
  public void setEmailPassword(String value)
  {
    if(value == null)
    {
      setValue(EMAILPASSWORD, "");
    }
    else
    {
      setValue(EMAILPASSWORD, value);
    }
  }
  
  public String getEmailServer()
  {
    return getValue(EMAILSERVER);
  }
  
  public void validateEmailServer()
  {
    this.validateAttribute(EMAILSERVER);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getEmailServerMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.general.EmailConfiguration.CLASS);
    return mdClassIF.definesAttribute(EMAILSERVER);
  }
  
  public void setEmailServer(String value)
  {
    if(value == null)
    {
      setValue(EMAILSERVER, "");
    }
    else
    {
      setValue(EMAILSERVER, value);
    }
  }
  
  public String getEmailUserid()
  {
    return getValue(EMAILUSERID);
  }
  
  public void validateEmailUserid()
  {
    this.validateAttribute(EMAILUSERID);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getEmailUseridMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.general.EmailConfiguration.CLASS);
    return mdClassIF.definesAttribute(EMAILUSERID);
  }
  
  public void setEmailUserid(String value)
  {
    if(value == null)
    {
      setValue(EMAILUSERID, "");
    }
    else
    {
      setValue(EMAILUSERID, value);
    }
  }
  
  public com.runwaysdk.system.metadata.MdDomain getEntityDomain()
  {
    if (getValue(ENTITYDOMAIN).trim().equals(""))
    {
      return null;
    }
    else
    {
      return com.runwaysdk.system.metadata.MdDomain.get(getValue(ENTITYDOMAIN));
    }
  }
  
  public void validateEntityDomain()
  {
    this.validateAttribute(ENTITYDOMAIN);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getEntityDomainMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.general.EmailConfiguration.CLASS);
    return mdClassIF.definesAttribute(ENTITYDOMAIN);
  }
  
  public void setEntityDomain(com.runwaysdk.system.metadata.MdDomain value)
  {
    if(value == null)
    {
      setValue(ENTITYDOMAIN, "");
    }
    else
    {
      setValue(ENTITYDOMAIN, value.getId());
    }
  }
  
  public String getId()
  {
    return getValue(ID);
  }
  
  public void validateId()
  {
    this.validateAttribute(ID);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getIdMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.general.EmailConfiguration.CLASS);
    return mdClassIF.definesAttribute(ID);
  }
  
  public String getKeyName()
  {
    return getValue(KEYNAME);
  }
  
  public void validateKeyName()
  {
    this.validateAttribute(KEYNAME);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getKeyNameMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.general.EmailConfiguration.CLASS);
    return mdClassIF.definesAttribute(KEYNAME);
  }
  
  public void setKeyName(String value)
  {
    if(value == null)
    {
      setValue(KEYNAME, "");
    }
    else
    {
      setValue(KEYNAME, value);
    }
  }
  
  public java.util.Date getLastUpdateDate()
  {
    return com.runwaysdk.constants.MdAttributeDateTimeUtil.getTypeSafeValue(getValue(LASTUPDATEDATE));
  }
  
  public void validateLastUpdateDate()
  {
    this.validateAttribute(LASTUPDATEDATE);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getLastUpdateDateMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.general.EmailConfiguration.CLASS);
    return mdClassIF.definesAttribute(LASTUPDATEDATE);
  }
  
  public com.runwaysdk.system.SingleActor getLastUpdatedBy()
  {
    if (getValue(LASTUPDATEDBY).trim().equals(""))
    {
      return null;
    }
    else
    {
      return com.runwaysdk.system.SingleActor.get(getValue(LASTUPDATEDBY));
    }
  }
  
  public void validateLastUpdatedBy()
  {
    this.validateAttribute(LASTUPDATEDBY);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getLastUpdatedByMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.general.EmailConfiguration.CLASS);
    return mdClassIF.definesAttribute(LASTUPDATEDBY);
  }
  
  public com.runwaysdk.system.Users getLockedBy()
  {
    if (getValue(LOCKEDBY).trim().equals(""))
    {
      return null;
    }
    else
    {
      return com.runwaysdk.system.Users.get(getValue(LOCKEDBY));
    }
  }
  
  public void validateLockedBy()
  {
    this.validateAttribute(LOCKEDBY);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getLockedByMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.general.EmailConfiguration.CLASS);
    return mdClassIF.definesAttribute(LOCKEDBY);
  }
  
  public com.runwaysdk.system.Actor getOwner()
  {
    if (getValue(OWNER).trim().equals(""))
    {
      return null;
    }
    else
    {
      return com.runwaysdk.system.Actor.get(getValue(OWNER));
    }
  }
  
  public void validateOwner()
  {
    this.validateAttribute(OWNER);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getOwnerMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.general.EmailConfiguration.CLASS);
    return mdClassIF.definesAttribute(OWNER);
  }
  
  public void setOwner(com.runwaysdk.system.Actor value)
  {
    if(value == null)
    {
      setValue(OWNER, "");
    }
    else
    {
      setValue(OWNER, value.getId());
    }
  }
  
  @SuppressWarnings("unchecked")
  public java.util.List<dss.vector.solutions.general.EmailProtocol> getProtocol()
  {
    return (java.util.List<dss.vector.solutions.general.EmailProtocol>) getEnumValues(PROTOCOL);
  }
  
  public void addProtocol(dss.vector.solutions.general.EmailProtocol value)
  {
    if(value != null)
    {
      addEnumItem(PROTOCOL, value.getId());
    }
  }
  
  public void removeProtocol(dss.vector.solutions.general.EmailProtocol value)
  {
    if(value != null)
    {
      removeEnumItem(PROTOCOL, value.getId());
    }
  }
  
  public void clearProtocol()
  {
    clearEnum(PROTOCOL);
  }
  
  public void validateProtocol()
  {
    this.validateAttribute(PROTOCOL);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getProtocolMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.general.EmailConfiguration.CLASS);
    return mdClassIF.definesAttribute(PROTOCOL);
  }
  
  public Integer getRetry()
  {
    return com.runwaysdk.constants.MdAttributeIntegerUtil.getTypeSafeValue(getValue(RETRY));
  }
  
  public void validateRetry()
  {
    this.validateAttribute(RETRY);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getRetryMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.general.EmailConfiguration.CLASS);
    return mdClassIF.definesAttribute(RETRY);
  }
  
  public void setRetry(Integer value)
  {
    if(value == null)
    {
      setValue(RETRY, "");
    }
    else
    {
      setValue(RETRY, java.lang.Integer.toString(value));
    }
  }
  
  public Long getSeq()
  {
    return com.runwaysdk.constants.MdAttributeLongUtil.getTypeSafeValue(getValue(SEQ));
  }
  
  public void validateSeq()
  {
    this.validateAttribute(SEQ);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getSeqMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.general.EmailConfiguration.CLASS);
    return mdClassIF.definesAttribute(SEQ);
  }
  
  public String getSiteMaster()
  {
    return getValue(SITEMASTER);
  }
  
  public void validateSiteMaster()
  {
    this.validateAttribute(SITEMASTER);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getSiteMasterMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.general.EmailConfiguration.CLASS);
    return mdClassIF.definesAttribute(SITEMASTER);
  }
  
  public Integer getTimeout()
  {
    return com.runwaysdk.constants.MdAttributeIntegerUtil.getTypeSafeValue(getValue(TIMEOUT));
  }
  
  public void validateTimeout()
  {
    this.validateAttribute(TIMEOUT);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getTimeoutMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.general.EmailConfiguration.CLASS);
    return mdClassIF.definesAttribute(TIMEOUT);
  }
  
  public void setTimeout(Integer value)
  {
    if(value == null)
    {
      setValue(TIMEOUT, "");
    }
    else
    {
      setValue(TIMEOUT, java.lang.Integer.toString(value));
    }
  }
  
  public String getType()
  {
    return getValue(TYPE);
  }
  
  public void validateType()
  {
    this.validateAttribute(TYPE);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getTypeMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.general.EmailConfiguration.CLASS);
    return mdClassIF.definesAttribute(TYPE);
  }
  
  protected String getDeclaredType()
  {
    return CLASS;
  }
  
  public static EmailConfigurationQuery getAllInstances(String sortAttribute, Boolean ascending, Integer pageSize, Integer pageNumber)
  {
    EmailConfigurationQuery query = new EmailConfigurationQuery(new com.runwaysdk.query.QueryFactory());
    com.runwaysdk.business.Entity.getAllInstances(query, sortAttribute, ascending, pageSize, pageNumber);
    return query;
  }
  
  public static EmailConfiguration get(String id)
  {
    return (EmailConfiguration) com.runwaysdk.business.Business.get(id);
  }
  
  public static EmailConfiguration getByKey(String key)
  {
    return (EmailConfiguration) com.runwaysdk.business.Business.get(CLASS, key);
  }
  
  public static EmailConfiguration lock(java.lang.String id)
  {
    EmailConfiguration _instance = EmailConfiguration.get(id);
    _instance.lock();
    
    return _instance;
  }
  
  public static EmailConfiguration unlock(java.lang.String id)
  {
    EmailConfiguration _instance = EmailConfiguration.get(id);
    _instance.unlock();
    
    return _instance;
  }
  
  public String toString()
  {
    if (this.isNew())
    {
      return "New: "+ this.getClassDisplayLabel();
    }
    else
    {
      return super.toString();
    }
  }
}
