/*******************************************************************************
 * Copyright (C) 2018 IVCC
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 ******************************************************************************/
package dss.vector.solutions.general;

@com.runwaysdk.business.ClassSignature(hash = -33291564)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to PopulationDataView.java
 *
 * @author Autogenerated by RunwaySDK
 */
public  abstract  class PopulationDataViewQueryBase extends com.runwaysdk.query.GeneratedViewQuery
 implements com.runwaysdk.generation.loader.Reloadable
{

  public PopulationDataViewQueryBase(com.runwaysdk.query.QueryFactory componentQueryFactory)
  {
    super(componentQueryFactory);
  }

  public PopulationDataViewQueryBase(com.runwaysdk.query.QueryFactory componentQueryFactory, com.runwaysdk.query.ViewQueryBuilder viewQueryBuilder)
  {
    super(componentQueryFactory, viewQueryBuilder);
  }
  public String getClassType()
  {
    return dss.vector.solutions.general.PopulationDataView.CLASS;
  }
  public com.runwaysdk.query.SelectableChar getConcreteId()
  {
    return getConcreteId(null);

  }
 
  public com.runwaysdk.query.SelectableChar getConcreteId(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getSelectable(dss.vector.solutions.general.PopulationDataView.CONCRETEID, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getConcreteId(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getSelectable(dss.vector.solutions.general.PopulationDataView.CONCRETEID, alias, displayLabel);

  }
 
  public com.runwaysdk.query.SelectableChar getEntityLabel()
  {
    return getEntityLabel(null);

  }
 
  public com.runwaysdk.query.SelectableChar getEntityLabel(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getSelectable(dss.vector.solutions.general.PopulationDataView.ENTITYLABEL, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getEntityLabel(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getSelectable(dss.vector.solutions.general.PopulationDataView.ENTITYLABEL, alias, displayLabel);

  }
 
  public com.runwaysdk.query.SelectableBoolean getEstimated()
  {
    return getEstimated(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getEstimated(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getSelectable(dss.vector.solutions.general.PopulationDataView.ESTIMATED, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getEstimated(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getSelectable(dss.vector.solutions.general.PopulationDataView.ESTIMATED, alias, displayLabel);

  }
 
  public com.runwaysdk.query.SelectableChar getGeoEntity()
  {
    return getGeoEntity(null);

  }
 
  public com.runwaysdk.query.SelectableChar getGeoEntity(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getSelectable(dss.vector.solutions.general.PopulationDataView.GEOENTITY, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getGeoEntity(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getSelectable(dss.vector.solutions.general.PopulationDataView.GEOENTITY, alias, displayLabel);

  }
 
  public com.runwaysdk.query.SelectableDouble getGrowthRate()
  {
    return getGrowthRate(null);

  }
 
  public com.runwaysdk.query.SelectableDouble getGrowthRate(String alias)
  {
    return (com.runwaysdk.query.SelectableDouble)this.getSelectable(dss.vector.solutions.general.PopulationDataView.GROWTHRATE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableDouble getGrowthRate(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableDouble)this.getSelectable(dss.vector.solutions.general.PopulationDataView.GROWTHRATE, alias, displayLabel);

  }
 
  public com.runwaysdk.query.SelectableChar getId()
  {
    return getId(null);

  }
 
  public com.runwaysdk.query.SelectableChar getId(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getSelectable(dss.vector.solutions.general.PopulationDataView.ID, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getId(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getSelectable(dss.vector.solutions.general.PopulationDataView.ID, alias, displayLabel);

  }
 
  public com.runwaysdk.query.SelectableLong getPopulation()
  {
    return getPopulation(null);

  }
 
  public com.runwaysdk.query.SelectableLong getPopulation(String alias)
  {
    return (com.runwaysdk.query.SelectableLong)this.getSelectable(dss.vector.solutions.general.PopulationDataView.POPULATION, alias, null);

  }
 
  public com.runwaysdk.query.SelectableLong getPopulation(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableLong)this.getSelectable(dss.vector.solutions.general.PopulationDataView.POPULATION, alias, displayLabel);

  }
 
  public com.runwaysdk.query.SelectableBoolean getPopulationType()
  {
    return getPopulationType(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getPopulationType(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getSelectable(dss.vector.solutions.general.PopulationDataView.POPULATIONTYPE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getPopulationType(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getSelectable(dss.vector.solutions.general.PopulationDataView.POPULATIONTYPE, alias, displayLabel);

  }
 
  public com.runwaysdk.query.SelectableInteger getYearOfData()
  {
    return getYearOfData(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getYearOfData(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getSelectable(dss.vector.solutions.general.PopulationDataView.YEAROFDATA, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getYearOfData(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getSelectable(dss.vector.solutions.general.PopulationDataView.YEAROFDATA, alias, displayLabel);

  }
 
  /**  
   * Returns an iterator of Business objects that match the query criteria specified
   * on this query object. 
   * @return iterator of Business objects that match the query criteria specified
   * on this query object.
   */
  @java.lang.SuppressWarnings("unchecked")
  public com.runwaysdk.query.OIterator<? extends PopulationDataView> getIterator()
  {
    com.runwaysdk.query.ValueIterator valueIterator;
    if (_pageSize != null && _pageNumber != null)
    {
      valueIterator = (com.runwaysdk.query.ValueIterator<com.runwaysdk.dataaccess.ValueObject>)this.getComponentQuery().getIterator(_pageSize, _pageNumber);
    }
    else
    {
      valueIterator = (com.runwaysdk.query.ValueIterator<com.runwaysdk.dataaccess.ValueObject>)this.getComponentQuery().getIterator();
    }
    return new com.runwaysdk.query.ViewIterator<PopulationDataView>(this.getMdClassIF(), valueIterator);
  }

}
