package dss.vector.solutions.ontology;

@com.terraframe.mojo.business.ClassSignature(hash = 1910322325)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to Term.java
 *
 * @author Autogenerated by TerraFrame
 */
public  class TermQuery extends com.terraframe.mojo.query.GeneratedBusinessQuery
 implements com.terraframe.mojo.generation.loader.Reloadable
{
private static final long serialVersionUID = 1910322325;

  public TermQuery(com.terraframe.mojo.query.QueryFactory componentQueryFactory)
  {
     super();
    if (this.getComponentQuery() == null)
    {
      com.terraframe.mojo.business.BusinessQuery businessQuery = componentQueryFactory.businessQuery(this.getClassType());

       this.setBusinessQuery(businessQuery);
    }
  }

  public TermQuery(com.terraframe.mojo.query.ValueQuery valueQuery)
  {
     super();
    if (this.getComponentQuery() == null)
    {
      com.terraframe.mojo.business.BusinessQuery businessQuery = new com.terraframe.mojo.business.BusinessQuery(valueQuery, this.getClassType());

       this.setBusinessQuery(businessQuery);
    }
  }

  public String getClassType()
  {
    return dss.vector.solutions.ontology.Term.CLASS;
  }
  public com.terraframe.mojo.query.AttributeChar getComment()
  {
    return getComment(null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getComment(String alias)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.getComponentQuery().attributeFactory(dss.vector.solutions.ontology.Term.COMMENT, "com.terraframe.mojo.system.metadata.MdAttributeText", alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getComment(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.getComponentQuery().attributeFactory(dss.vector.solutions.ontology.Term.COMMENT, "com.terraframe.mojo.system.metadata.MdAttributeText", alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeMoment getCreateDate()
  {
    return getCreateDate(null);

  }
 
  public com.terraframe.mojo.query.AttributeMoment getCreateDate(String alias)
  {
    return (com.terraframe.mojo.query.AttributeMoment)this.getComponentQuery().attributeFactory(dss.vector.solutions.ontology.Term.CREATEDATE, "com.terraframe.mojo.system.metadata.MdAttributeDateTime", alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeMoment getCreateDate(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeMoment)this.getComponentQuery().attributeFactory(dss.vector.solutions.ontology.Term.CREATEDATE, "com.terraframe.mojo.system.metadata.MdAttributeDateTime", alias, displayLabel);

  }
  public com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy()
  {
    return getCreatedBy(null);

  }
 
  public com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias)
  {

    com.terraframe.mojo.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap("createdBy");

    return (com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.ontology.Term.CREATEDBY, mdAttributeIF, this, alias, null);

  }
 
  public com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias, String displayLabel)
  {

    com.terraframe.mojo.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap("createdBy");

    return (com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.ontology.Term.CREATEDBY, mdAttributeIF, this, alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeChar getDef()
  {
    return getDef(null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getDef(String alias)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.getComponentQuery().attributeFactory(dss.vector.solutions.ontology.Term.DEF, "com.terraframe.mojo.system.metadata.MdAttributeText", alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getDef(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.getComponentQuery().attributeFactory(dss.vector.solutions.ontology.Term.DEF, "com.terraframe.mojo.system.metadata.MdAttributeText", alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeChar getDisplay()
  {
    return getDisplay(null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getDisplay(String alias)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.getComponentQuery().attributeFactory(dss.vector.solutions.ontology.Term.DISPLAY, "com.terraframe.mojo.system.metadata.MdAttributeCharacter", alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getDisplay(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.getComponentQuery().attributeFactory(dss.vector.solutions.ontology.Term.DISPLAY, "com.terraframe.mojo.system.metadata.MdAttributeCharacter", alias, displayLabel);

  }
  public com.terraframe.mojo.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain()
  {
    return getEntityDomain(null);

  }
 
  public com.terraframe.mojo.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias)
  {

    com.terraframe.mojo.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap("entityDomain");

    return (com.terraframe.mojo.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.ontology.Term.ENTITYDOMAIN, mdAttributeIF, this, alias, null);

  }
 
  public com.terraframe.mojo.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias, String displayLabel)
  {

    com.terraframe.mojo.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap("entityDomain");

    return (com.terraframe.mojo.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.ontology.Term.ENTITYDOMAIN, mdAttributeIF, this, alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeChar getId()
  {
    return getId(null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getId(String alias)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.getComponentQuery().attributeFactory(dss.vector.solutions.ontology.Term.ID, "com.terraframe.mojo.system.metadata.MdAttributeCharacter", alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getId(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.getComponentQuery().attributeFactory(dss.vector.solutions.ontology.Term.ID, "com.terraframe.mojo.system.metadata.MdAttributeCharacter", alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeChar getKeyName()
  {
    return getKeyName(null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getKeyName(String alias)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.getComponentQuery().attributeFactory(dss.vector.solutions.ontology.Term.KEYNAME, "com.terraframe.mojo.system.metadata.MdAttributeCharacter", alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getKeyName(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.getComponentQuery().attributeFactory(dss.vector.solutions.ontology.Term.KEYNAME, "com.terraframe.mojo.system.metadata.MdAttributeCharacter", alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeMoment getLastUpdateDate()
  {
    return getLastUpdateDate(null);

  }
 
  public com.terraframe.mojo.query.AttributeMoment getLastUpdateDate(String alias)
  {
    return (com.terraframe.mojo.query.AttributeMoment)this.getComponentQuery().attributeFactory(dss.vector.solutions.ontology.Term.LASTUPDATEDATE, "com.terraframe.mojo.system.metadata.MdAttributeDateTime", alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeMoment getLastUpdateDate(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeMoment)this.getComponentQuery().attributeFactory(dss.vector.solutions.ontology.Term.LASTUPDATEDATE, "com.terraframe.mojo.system.metadata.MdAttributeDateTime", alias, displayLabel);

  }
  public com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy()
  {
    return getLastUpdatedBy(null);

  }
 
  public com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias)
  {

    com.terraframe.mojo.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap("lastUpdatedBy");

    return (com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.ontology.Term.LASTUPDATEDBY, mdAttributeIF, this, alias, null);

  }
 
  public com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias, String displayLabel)
  {

    com.terraframe.mojo.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap("lastUpdatedBy");

    return (com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.ontology.Term.LASTUPDATEDBY, mdAttributeIF, this, alias, displayLabel);

  }
  public com.terraframe.mojo.system.UsersQuery.UsersQueryReferenceIF getLockedBy()
  {
    return getLockedBy(null);

  }
 
  public com.terraframe.mojo.system.UsersQuery.UsersQueryReferenceIF getLockedBy(String alias)
  {

    com.terraframe.mojo.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap("lockedBy");

    return (com.terraframe.mojo.system.UsersQuery.UsersQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.ontology.Term.LOCKEDBY, mdAttributeIF, this, alias, null);

  }
 
  public com.terraframe.mojo.system.UsersQuery.UsersQueryReferenceIF getLockedBy(String alias, String displayLabel)
  {

    com.terraframe.mojo.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap("lockedBy");

    return (com.terraframe.mojo.system.UsersQuery.UsersQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.ontology.Term.LOCKEDBY, mdAttributeIF, this, alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeChar getName()
  {
    return getName(null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getName(String alias)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.getComponentQuery().attributeFactory(dss.vector.solutions.ontology.Term.NAME, "com.terraframe.mojo.system.metadata.MdAttributeCharacter", alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getName(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.getComponentQuery().attributeFactory(dss.vector.solutions.ontology.Term.NAME, "com.terraframe.mojo.system.metadata.MdAttributeCharacter", alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeChar getNamespace()
  {
    return getNamespace(null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getNamespace(String alias)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.getComponentQuery().attributeFactory(dss.vector.solutions.ontology.Term.NAMESPACE, "com.terraframe.mojo.system.metadata.MdAttributeCharacter", alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getNamespace(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.getComponentQuery().attributeFactory(dss.vector.solutions.ontology.Term.NAMESPACE, "com.terraframe.mojo.system.metadata.MdAttributeCharacter", alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeBoolean getObsolete()
  {
    return getObsolete(null);

  }
 
  public com.terraframe.mojo.query.AttributeBoolean getObsolete(String alias)
  {
    return (com.terraframe.mojo.query.AttributeBoolean)this.getComponentQuery().attributeFactory(dss.vector.solutions.ontology.Term.OBSOLETE, "com.terraframe.mojo.system.metadata.MdAttributeBoolean", alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeBoolean getObsolete(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeBoolean)this.getComponentQuery().attributeFactory(dss.vector.solutions.ontology.Term.OBSOLETE, "com.terraframe.mojo.system.metadata.MdAttributeBoolean", alias, displayLabel);

  }
  public dss.vector.solutions.ontology.OntologyQuery.OntologyQueryReferenceIF getOntology()
  {
    return getOntology(null);

  }
 
  public dss.vector.solutions.ontology.OntologyQuery.OntologyQueryReferenceIF getOntology(String alias)
  {

    com.terraframe.mojo.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap("ontology");

    return (dss.vector.solutions.ontology.OntologyQuery.OntologyQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.ontology.Term.ONTOLOGY, mdAttributeIF, this, alias, null);

  }
 
  public dss.vector.solutions.ontology.OntologyQuery.OntologyQueryReferenceIF getOntology(String alias, String displayLabel)
  {

    com.terraframe.mojo.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap("ontology");

    return (dss.vector.solutions.ontology.OntologyQuery.OntologyQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.ontology.Term.ONTOLOGY, mdAttributeIF, this, alias, displayLabel);

  }
  public com.terraframe.mojo.system.ActorQuery.ActorQueryReferenceIF getOwner()
  {
    return getOwner(null);

  }
 
  public com.terraframe.mojo.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias)
  {

    com.terraframe.mojo.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap("owner");

    return (com.terraframe.mojo.system.ActorQuery.ActorQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.ontology.Term.OWNER, mdAttributeIF, this, alias, null);

  }
 
  public com.terraframe.mojo.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias, String displayLabel)
  {

    com.terraframe.mojo.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap("owner");

    return (com.terraframe.mojo.system.ActorQuery.ActorQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.ontology.Term.OWNER, mdAttributeIF, this, alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeLong getSeq()
  {
    return getSeq(null);

  }
 
  public com.terraframe.mojo.query.AttributeLong getSeq(String alias)
  {
    return (com.terraframe.mojo.query.AttributeLong)this.getComponentQuery().attributeFactory(dss.vector.solutions.ontology.Term.SEQ, "com.terraframe.mojo.system.metadata.MdAttributeLong", alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeLong getSeq(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeLong)this.getComponentQuery().attributeFactory(dss.vector.solutions.ontology.Term.SEQ, "com.terraframe.mojo.system.metadata.MdAttributeLong", alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeChar getSiteMaster()
  {
    return getSiteMaster(null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getSiteMaster(String alias)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.getComponentQuery().attributeFactory(dss.vector.solutions.ontology.Term.SITEMASTER, "com.terraframe.mojo.system.metadata.MdAttributeCharacter", alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getSiteMaster(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.getComponentQuery().attributeFactory(dss.vector.solutions.ontology.Term.SITEMASTER, "com.terraframe.mojo.system.metadata.MdAttributeCharacter", alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeChar getTermId()
  {
    return getTermId(null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getTermId(String alias)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.getComponentQuery().attributeFactory(dss.vector.solutions.ontology.Term.TERMID, "com.terraframe.mojo.system.metadata.MdAttributeCharacter", alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getTermId(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.getComponentQuery().attributeFactory(dss.vector.solutions.ontology.Term.TERMID, "com.terraframe.mojo.system.metadata.MdAttributeCharacter", alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeChar getType()
  {
    return getType(null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getType(String alias)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.getComponentQuery().attributeFactory(dss.vector.solutions.ontology.Term.TYPE, "com.terraframe.mojo.system.metadata.MdAttributeCharacter", alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getType(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.getComponentQuery().attributeFactory(dss.vector.solutions.ontology.Term.TYPE, "com.terraframe.mojo.system.metadata.MdAttributeCharacter", alias, displayLabel);

  }
  protected com.terraframe.mojo.query.AttributeReference referenceFactory( com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  com.terraframe.mojo.dataaccess.MdBusinessDAOIF referenceMdBusinessIF, String referenceTableAlias, com.terraframe.mojo.query.ComponentQuery rootQuery, java.util.Set<com.terraframe.mojo.query.Join> tableJoinSet, String userDefinedAlias, String userDefinedDisplayLabel)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals("createdBy")) 
    {
       return new com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReference((com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals("entityDomain")) 
    {
       return new com.terraframe.mojo.system.metadata.MdDomainQuery.MdDomainQueryReference((com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals("lastUpdatedBy")) 
    {
       return new com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReference((com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals("lockedBy")) 
    {
       return new com.terraframe.mojo.system.UsersQuery.UsersQueryReference((com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals("ontology")) 
    {
       return new dss.vector.solutions.ontology.OntologyQuery.OntologyQueryReference((com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals("owner")) 
    {
       return new com.terraframe.mojo.system.ActorQuery.ActorQueryReference((com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else 
    {
      String error = "Attribute type ["+mdAttributeIF.getType()+"] is invalid.";
      throw new com.terraframe.mojo.query.QueryException(error);
    }
  }

  /**  
   * Returns an iterator of Business objects that match the query criteria specified
   * on this query object. 
   * @return iterator of Business objects that match the query criteria specified
   * on this query object.
   */
  public com.terraframe.mojo.query.OIterator<? extends Term> getIterator()
  {
    this.checkNotUsedInValueQuery();
    String sqlStmt;
    if (_limit != null && _skip != null)
    {
      sqlStmt = this.getComponentQuery().getSQL(_limit, _skip);
    }
    else
    {
      sqlStmt = this.getComponentQuery().getSQL();
    }
    java.util.Map<String, com.terraframe.mojo.query.ColumnInfo> columnInfoMap = this.getComponentQuery().getColumnInfoMap();

    java.sql.ResultSet results = com.terraframe.mojo.dataaccess.database.Database.query(sqlStmt);
    return new com.terraframe.mojo.business.BusinessIterator<Term>(this.getComponentQuery().getMdEntityIF(), columnInfoMap, results);
  }


  public com.terraframe.mojo.query.Condition aNCVisitAggregatedIPTs()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.IPTANCVisit.CLASS);

    return this.getBusinessQuery().isChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition aNCVisitAggregatedIPTs(dss.vector.solutions.intervention.monitor.IPTANCVisitQuery iPTANCVisitQuery)
  {
    return this.getBusinessQuery().isChildIn(iPTANCVisitQuery);
  }

  public com.terraframe.mojo.query.Condition aNCVisitAggregatedIPTs(dss.vector.solutions.intervention.monitor.AggregatedIPTQuery aggregatedIPTQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.IPTANCVisit.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(aggregatedIPTQuery));

    return this.getBusinessQuery().isChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition aNCVisitAggregatedIPTs(dss.vector.solutions.intervention.monitor.AggregatedIPTQuery aggregatedIPTQuery, dss.vector.solutions.intervention.monitor.IPTANCVisitQuery iPTANCVisitQuery)
  {
    iPTANCVisitQuery.AND(iPTANCVisitQuery.hasParent(aggregatedIPTQuery));
    return this.getBusinessQuery().isChildIn(iPTANCVisitQuery);
  }


  public com.terraframe.mojo.query.Condition NOT_IN_aNCVisitAggregatedIPTs()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.IPTANCVisit.CLASS);

    return this.getBusinessQuery().isNotChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_aNCVisitAggregatedIPTs(dss.vector.solutions.intervention.monitor.IPTANCVisitQuery iPTANCVisitQuery)
  {
    return this.getBusinessQuery().isNotChildIn(iPTANCVisitQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_aNCVisitAggregatedIPTs(dss.vector.solutions.intervention.monitor.AggregatedIPTQuery aggregatedIPTQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.IPTANCVisit.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(aggregatedIPTQuery));

    return this.getBusinessQuery().isNotChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_aNCVisitAggregatedIPTs(dss.vector.solutions.intervention.monitor.AggregatedIPTQuery aggregatedIPTQuery, dss.vector.solutions.intervention.monitor.IPTANCVisitQuery iPTANCVisitQuery)
  {
    iPTANCVisitQuery.AND(iPTANCVisitQuery.hasParent(aggregatedIPTQuery));
    return this.getBusinessQuery().isNotChildIn(iPTANCVisitQuery);
  }


  public com.terraframe.mojo.query.Condition aggregatedITNsWithNets()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.ITNNet.CLASS);

    return this.getBusinessQuery().isChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition aggregatedITNsWithNets(dss.vector.solutions.intervention.monitor.ITNNetQuery iTNNetQuery)
  {
    return this.getBusinessQuery().isChildIn(iTNNetQuery);
  }

  public com.terraframe.mojo.query.Condition aggregatedITNsWithNets(dss.vector.solutions.intervention.monitor.ITNDataQuery iTNDataQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.ITNNet.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(iTNDataQuery));

    return this.getBusinessQuery().isChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition aggregatedITNsWithNets(dss.vector.solutions.intervention.monitor.ITNDataQuery iTNDataQuery, dss.vector.solutions.intervention.monitor.ITNNetQuery iTNNetQuery)
  {
    iTNNetQuery.AND(iTNNetQuery.hasParent(iTNDataQuery));
    return this.getBusinessQuery().isChildIn(iTNNetQuery);
  }


  public com.terraframe.mojo.query.Condition NOT_IN_aggregatedITNsWithNets()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.ITNNet.CLASS);

    return this.getBusinessQuery().isNotChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_aggregatedITNsWithNets(dss.vector.solutions.intervention.monitor.ITNNetQuery iTNNetQuery)
  {
    return this.getBusinessQuery().isNotChildIn(iTNNetQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_aggregatedITNsWithNets(dss.vector.solutions.intervention.monitor.ITNDataQuery iTNDataQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.ITNNet.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(iTNDataQuery));

    return this.getBusinessQuery().isNotChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_aggregatedITNsWithNets(dss.vector.solutions.intervention.monitor.ITNDataQuery iTNDataQuery, dss.vector.solutions.intervention.monitor.ITNNetQuery iTNNetQuery)
  {
    iTNNetQuery.AND(iTNNetQuery.hasParent(iTNDataQuery));
    return this.getBusinessQuery().isNotChildIn(iTNNetQuery);
  }


  public com.terraframe.mojo.query.Condition aggregatedITNsWithService()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.ITNService.CLASS);

    return this.getBusinessQuery().isChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition aggregatedITNsWithService(dss.vector.solutions.intervention.monitor.ITNServiceQuery iTNServiceQuery)
  {
    return this.getBusinessQuery().isChildIn(iTNServiceQuery);
  }

  public com.terraframe.mojo.query.Condition aggregatedITNsWithService(dss.vector.solutions.intervention.monitor.ITNDataQuery iTNDataQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.ITNService.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(iTNDataQuery));

    return this.getBusinessQuery().isChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition aggregatedITNsWithService(dss.vector.solutions.intervention.monitor.ITNDataQuery iTNDataQuery, dss.vector.solutions.intervention.monitor.ITNServiceQuery iTNServiceQuery)
  {
    iTNServiceQuery.AND(iTNServiceQuery.hasParent(iTNDataQuery));
    return this.getBusinessQuery().isChildIn(iTNServiceQuery);
  }


  public com.terraframe.mojo.query.Condition NOT_IN_aggregatedITNsWithService()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.ITNService.CLASS);

    return this.getBusinessQuery().isNotChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_aggregatedITNsWithService(dss.vector.solutions.intervention.monitor.ITNServiceQuery iTNServiceQuery)
  {
    return this.getBusinessQuery().isNotChildIn(iTNServiceQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_aggregatedITNsWithService(dss.vector.solutions.intervention.monitor.ITNDataQuery iTNDataQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.ITNService.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(iTNDataQuery));

    return this.getBusinessQuery().isNotChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_aggregatedITNsWithService(dss.vector.solutions.intervention.monitor.ITNDataQuery iTNDataQuery, dss.vector.solutions.intervention.monitor.ITNServiceQuery iTNServiceQuery)
  {
    iTNServiceQuery.AND(iTNServiceQuery.hasParent(iTNDataQuery));
    return this.getBusinessQuery().isNotChildIn(iTNServiceQuery);
  }


  public com.terraframe.mojo.query.Condition aggregatedITNsWithTargetGroups()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.ITNTargetGroup.CLASS);

    return this.getBusinessQuery().isChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition aggregatedITNsWithTargetGroups(dss.vector.solutions.intervention.monitor.ITNTargetGroupQuery iTNTargetGroupQuery)
  {
    return this.getBusinessQuery().isChildIn(iTNTargetGroupQuery);
  }

  public com.terraframe.mojo.query.Condition aggregatedITNsWithTargetGroups(dss.vector.solutions.intervention.monitor.ITNDataQuery iTNDataQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.ITNTargetGroup.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(iTNDataQuery));

    return this.getBusinessQuery().isChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition aggregatedITNsWithTargetGroups(dss.vector.solutions.intervention.monitor.ITNDataQuery iTNDataQuery, dss.vector.solutions.intervention.monitor.ITNTargetGroupQuery iTNTargetGroupQuery)
  {
    iTNTargetGroupQuery.AND(iTNTargetGroupQuery.hasParent(iTNDataQuery));
    return this.getBusinessQuery().isChildIn(iTNTargetGroupQuery);
  }


  public com.terraframe.mojo.query.Condition NOT_IN_aggregatedITNsWithTargetGroups()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.ITNTargetGroup.CLASS);

    return this.getBusinessQuery().isNotChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_aggregatedITNsWithTargetGroups(dss.vector.solutions.intervention.monitor.ITNTargetGroupQuery iTNTargetGroupQuery)
  {
    return this.getBusinessQuery().isNotChildIn(iTNTargetGroupQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_aggregatedITNsWithTargetGroups(dss.vector.solutions.intervention.monitor.ITNDataQuery iTNDataQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.ITNTargetGroup.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(iTNDataQuery));

    return this.getBusinessQuery().isNotChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_aggregatedITNsWithTargetGroups(dss.vector.solutions.intervention.monitor.ITNDataQuery iTNDataQuery, dss.vector.solutions.intervention.monitor.ITNTargetGroupQuery iTNTargetGroupQuery)
  {
    iTNTargetGroupQuery.AND(iTNTargetGroupQuery.hasParent(iTNDataQuery));
    return this.getBusinessQuery().isNotChildIn(iTNTargetGroupQuery);
  }


  public com.terraframe.mojo.query.Condition diagnosticAggregatedCases()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.surveillance.CaseDiagnostic.CLASS);

    return this.getBusinessQuery().isChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition diagnosticAggregatedCases(dss.vector.solutions.surveillance.CaseDiagnosticQuery caseDiagnosticQuery)
  {
    return this.getBusinessQuery().isChildIn(caseDiagnosticQuery);
  }

  public com.terraframe.mojo.query.Condition diagnosticAggregatedCases(dss.vector.solutions.surveillance.AggregatedCaseQuery aggregatedCaseQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.surveillance.CaseDiagnostic.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(aggregatedCaseQuery));

    return this.getBusinessQuery().isChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition diagnosticAggregatedCases(dss.vector.solutions.surveillance.AggregatedCaseQuery aggregatedCaseQuery, dss.vector.solutions.surveillance.CaseDiagnosticQuery caseDiagnosticQuery)
  {
    caseDiagnosticQuery.AND(caseDiagnosticQuery.hasParent(aggregatedCaseQuery));
    return this.getBusinessQuery().isChildIn(caseDiagnosticQuery);
  }


  public com.terraframe.mojo.query.Condition NOT_IN_diagnosticAggregatedCases()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.surveillance.CaseDiagnostic.CLASS);

    return this.getBusinessQuery().isNotChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_diagnosticAggregatedCases(dss.vector.solutions.surveillance.CaseDiagnosticQuery caseDiagnosticQuery)
  {
    return this.getBusinessQuery().isNotChildIn(caseDiagnosticQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_diagnosticAggregatedCases(dss.vector.solutions.surveillance.AggregatedCaseQuery aggregatedCaseQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.surveillance.CaseDiagnostic.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(aggregatedCaseQuery));

    return this.getBusinessQuery().isNotChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_diagnosticAggregatedCases(dss.vector.solutions.surveillance.AggregatedCaseQuery aggregatedCaseQuery, dss.vector.solutions.surveillance.CaseDiagnosticQuery caseDiagnosticQuery)
  {
    caseDiagnosticQuery.AND(caseDiagnosticQuery.hasParent(aggregatedCaseQuery));
    return this.getBusinessQuery().isNotChildIn(caseDiagnosticQuery);
  }


  public com.terraframe.mojo.query.Condition doseAggregatedIPTs()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.IPTDose.CLASS);

    return this.getBusinessQuery().isChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition doseAggregatedIPTs(dss.vector.solutions.intervention.monitor.IPTDoseQuery iPTDoseQuery)
  {
    return this.getBusinessQuery().isChildIn(iPTDoseQuery);
  }

  public com.terraframe.mojo.query.Condition doseAggregatedIPTs(dss.vector.solutions.intervention.monitor.AggregatedIPTQuery aggregatedIPTQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.IPTDose.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(aggregatedIPTQuery));

    return this.getBusinessQuery().isChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition doseAggregatedIPTs(dss.vector.solutions.intervention.monitor.AggregatedIPTQuery aggregatedIPTQuery, dss.vector.solutions.intervention.monitor.IPTDoseQuery iPTDoseQuery)
  {
    iPTDoseQuery.AND(iPTDoseQuery.hasParent(aggregatedIPTQuery));
    return this.getBusinessQuery().isChildIn(iPTDoseQuery);
  }


  public com.terraframe.mojo.query.Condition NOT_IN_doseAggregatedIPTs()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.IPTDose.CLASS);

    return this.getBusinessQuery().isNotChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_doseAggregatedIPTs(dss.vector.solutions.intervention.monitor.IPTDoseQuery iPTDoseQuery)
  {
    return this.getBusinessQuery().isNotChildIn(iPTDoseQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_doseAggregatedIPTs(dss.vector.solutions.intervention.monitor.AggregatedIPTQuery aggregatedIPTQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.IPTDose.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(aggregatedIPTQuery));

    return this.getBusinessQuery().isNotChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_doseAggregatedIPTs(dss.vector.solutions.intervention.monitor.AggregatedIPTQuery aggregatedIPTQuery, dss.vector.solutions.intervention.monitor.IPTDoseQuery iPTDoseQuery)
  {
    iPTDoseQuery.AND(iPTDoseQuery.hasParent(aggregatedIPTQuery));
    return this.getBusinessQuery().isNotChildIn(iPTDoseQuery);
  }


  public com.terraframe.mojo.query.Condition iTNCommunityDistributionsWithNets()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.ITNCommunityNet.CLASS);

    return this.getBusinessQuery().isChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition iTNCommunityDistributionsWithNets(dss.vector.solutions.intervention.monitor.ITNCommunityNetQuery iTNCommunityNetQuery)
  {
    return this.getBusinessQuery().isChildIn(iTNCommunityNetQuery);
  }

  public com.terraframe.mojo.query.Condition iTNCommunityDistributionsWithNets(dss.vector.solutions.intervention.monitor.ITNCommunityDistributionQuery iTNCommunityDistributionQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.ITNCommunityNet.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(iTNCommunityDistributionQuery));

    return this.getBusinessQuery().isChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition iTNCommunityDistributionsWithNets(dss.vector.solutions.intervention.monitor.ITNCommunityDistributionQuery iTNCommunityDistributionQuery, dss.vector.solutions.intervention.monitor.ITNCommunityNetQuery iTNCommunityNetQuery)
  {
    iTNCommunityNetQuery.AND(iTNCommunityNetQuery.hasParent(iTNCommunityDistributionQuery));
    return this.getBusinessQuery().isChildIn(iTNCommunityNetQuery);
  }


  public com.terraframe.mojo.query.Condition NOT_IN_iTNCommunityDistributionsWithNets()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.ITNCommunityNet.CLASS);

    return this.getBusinessQuery().isNotChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_iTNCommunityDistributionsWithNets(dss.vector.solutions.intervention.monitor.ITNCommunityNetQuery iTNCommunityNetQuery)
  {
    return this.getBusinessQuery().isNotChildIn(iTNCommunityNetQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_iTNCommunityDistributionsWithNets(dss.vector.solutions.intervention.monitor.ITNCommunityDistributionQuery iTNCommunityDistributionQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.ITNCommunityNet.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(iTNCommunityDistributionQuery));

    return this.getBusinessQuery().isNotChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_iTNCommunityDistributionsWithNets(dss.vector.solutions.intervention.monitor.ITNCommunityDistributionQuery iTNCommunityDistributionQuery, dss.vector.solutions.intervention.monitor.ITNCommunityNetQuery iTNCommunityNetQuery)
  {
    iTNCommunityNetQuery.AND(iTNCommunityNetQuery.hasParent(iTNCommunityDistributionQuery));
    return this.getBusinessQuery().isNotChildIn(iTNCommunityNetQuery);
  }


  public com.terraframe.mojo.query.Condition iTNCommunityDistributionsWithTargetGroups()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.ITNCommunityTargetGroup.CLASS);

    return this.getBusinessQuery().isChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition iTNCommunityDistributionsWithTargetGroups(dss.vector.solutions.intervention.monitor.ITNCommunityTargetGroupQuery iTNCommunityTargetGroupQuery)
  {
    return this.getBusinessQuery().isChildIn(iTNCommunityTargetGroupQuery);
  }

  public com.terraframe.mojo.query.Condition iTNCommunityDistributionsWithTargetGroups(dss.vector.solutions.intervention.monitor.ITNCommunityDistributionQuery iTNCommunityDistributionQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.ITNCommunityTargetGroup.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(iTNCommunityDistributionQuery));

    return this.getBusinessQuery().isChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition iTNCommunityDistributionsWithTargetGroups(dss.vector.solutions.intervention.monitor.ITNCommunityDistributionQuery iTNCommunityDistributionQuery, dss.vector.solutions.intervention.monitor.ITNCommunityTargetGroupQuery iTNCommunityTargetGroupQuery)
  {
    iTNCommunityTargetGroupQuery.AND(iTNCommunityTargetGroupQuery.hasParent(iTNCommunityDistributionQuery));
    return this.getBusinessQuery().isChildIn(iTNCommunityTargetGroupQuery);
  }


  public com.terraframe.mojo.query.Condition NOT_IN_iTNCommunityDistributionsWithTargetGroups()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.ITNCommunityTargetGroup.CLASS);

    return this.getBusinessQuery().isNotChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_iTNCommunityDistributionsWithTargetGroups(dss.vector.solutions.intervention.monitor.ITNCommunityTargetGroupQuery iTNCommunityTargetGroupQuery)
  {
    return this.getBusinessQuery().isNotChildIn(iTNCommunityTargetGroupQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_iTNCommunityDistributionsWithTargetGroups(dss.vector.solutions.intervention.monitor.ITNCommunityDistributionQuery iTNCommunityDistributionQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.ITNCommunityTargetGroup.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(iTNCommunityDistributionQuery));

    return this.getBusinessQuery().isNotChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_iTNCommunityDistributionsWithTargetGroups(dss.vector.solutions.intervention.monitor.ITNCommunityDistributionQuery iTNCommunityDistributionQuery, dss.vector.solutions.intervention.monitor.ITNCommunityTargetGroupQuery iTNCommunityTargetGroupQuery)
  {
    iTNCommunityTargetGroupQuery.AND(iTNCommunityTargetGroupQuery.hasParent(iTNCommunityDistributionQuery));
    return this.getBusinessQuery().isNotChildIn(iTNCommunityTargetGroupQuery);
  }


  public com.terraframe.mojo.query.Condition iTNFacilityDistributionsWithNets()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.ITNDistributionTargetGroup.CLASS);

    return this.getBusinessQuery().isChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition iTNFacilityDistributionsWithNets(dss.vector.solutions.intervention.monitor.ITNDistributionTargetGroupQuery iTNDistributionTargetGroupQuery)
  {
    return this.getBusinessQuery().isChildIn(iTNDistributionTargetGroupQuery);
  }

  public com.terraframe.mojo.query.Condition iTNFacilityDistributionsWithNets(dss.vector.solutions.intervention.monitor.ITNDistributionQuery iTNDistributionQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.ITNDistributionTargetGroup.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(iTNDistributionQuery));

    return this.getBusinessQuery().isChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition iTNFacilityDistributionsWithNets(dss.vector.solutions.intervention.monitor.ITNDistributionQuery iTNDistributionQuery, dss.vector.solutions.intervention.monitor.ITNDistributionTargetGroupQuery iTNDistributionTargetGroupQuery)
  {
    iTNDistributionTargetGroupQuery.AND(iTNDistributionTargetGroupQuery.hasParent(iTNDistributionQuery));
    return this.getBusinessQuery().isChildIn(iTNDistributionTargetGroupQuery);
  }


  public com.terraframe.mojo.query.Condition NOT_IN_iTNFacilityDistributionsWithNets()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.ITNDistributionTargetGroup.CLASS);

    return this.getBusinessQuery().isNotChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_iTNFacilityDistributionsWithNets(dss.vector.solutions.intervention.monitor.ITNDistributionTargetGroupQuery iTNDistributionTargetGroupQuery)
  {
    return this.getBusinessQuery().isNotChildIn(iTNDistributionTargetGroupQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_iTNFacilityDistributionsWithNets(dss.vector.solutions.intervention.monitor.ITNDistributionQuery iTNDistributionQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.ITNDistributionTargetGroup.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(iTNDistributionQuery));

    return this.getBusinessQuery().isNotChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_iTNFacilityDistributionsWithNets(dss.vector.solutions.intervention.monitor.ITNDistributionQuery iTNDistributionQuery, dss.vector.solutions.intervention.monitor.ITNDistributionTargetGroupQuery iTNDistributionTargetGroupQuery)
  {
    iTNDistributionTargetGroupQuery.AND(iTNDistributionTargetGroupQuery.hasParent(iTNDistributionQuery));
    return this.getBusinessQuery().isNotChildIn(iTNDistributionTargetGroupQuery);
  }


  public com.terraframe.mojo.query.Condition individualInstance()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.surveillance.IndividualCaseSymptom.CLASS);

    return this.getBusinessQuery().isChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition individualInstance(dss.vector.solutions.surveillance.IndividualCaseSymptomQuery individualCaseSymptomQuery)
  {
    return this.getBusinessQuery().isChildIn(individualCaseSymptomQuery);
  }

  public com.terraframe.mojo.query.Condition individualInstance(dss.vector.solutions.intervention.monitor.IndividualInstanceQuery individualInstanceQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.surveillance.IndividualCaseSymptom.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(individualInstanceQuery));

    return this.getBusinessQuery().isChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition individualInstance(dss.vector.solutions.intervention.monitor.IndividualInstanceQuery individualInstanceQuery, dss.vector.solutions.surveillance.IndividualCaseSymptomQuery individualCaseSymptomQuery)
  {
    individualCaseSymptomQuery.AND(individualCaseSymptomQuery.hasParent(individualInstanceQuery));
    return this.getBusinessQuery().isChildIn(individualCaseSymptomQuery);
  }


  public com.terraframe.mojo.query.Condition NOT_IN_individualInstance()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.surveillance.IndividualCaseSymptom.CLASS);

    return this.getBusinessQuery().isNotChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_individualInstance(dss.vector.solutions.surveillance.IndividualCaseSymptomQuery individualCaseSymptomQuery)
  {
    return this.getBusinessQuery().isNotChildIn(individualCaseSymptomQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_individualInstance(dss.vector.solutions.intervention.monitor.IndividualInstanceQuery individualInstanceQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.surveillance.IndividualCaseSymptom.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(individualInstanceQuery));

    return this.getBusinessQuery().isNotChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_individualInstance(dss.vector.solutions.intervention.monitor.IndividualInstanceQuery individualInstanceQuery, dss.vector.solutions.surveillance.IndividualCaseSymptomQuery individualCaseSymptomQuery)
  {
    individualCaseSymptomQuery.AND(individualCaseSymptomQuery.hasParent(individualInstanceQuery));
    return this.getBusinessQuery().isNotChildIn(individualCaseSymptomQuery);
  }


  public com.terraframe.mojo.query.Condition parentTerm()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.ontology.TermRelationship.CLASS);

    return this.getBusinessQuery().isChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition parentTerm(dss.vector.solutions.ontology.TermRelationshipQuery termRelationshipQuery)
  {
    return this.getBusinessQuery().isChildIn(termRelationshipQuery);
  }

  public com.terraframe.mojo.query.Condition parentTerm(dss.vector.solutions.ontology.TermQuery termQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.ontology.TermRelationship.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(termQuery));

    return this.getBusinessQuery().isChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition parentTerm(dss.vector.solutions.ontology.TermQuery termQuery, dss.vector.solutions.ontology.TermRelationshipQuery termRelationshipQuery)
  {
    termRelationshipQuery.AND(termRelationshipQuery.hasParent(termQuery));
    return this.getBusinessQuery().isChildIn(termRelationshipQuery);
  }


  public com.terraframe.mojo.query.Condition NOT_IN_parentTerm()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.ontology.TermRelationship.CLASS);

    return this.getBusinessQuery().isNotChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_parentTerm(dss.vector.solutions.ontology.TermRelationshipQuery termRelationshipQuery)
  {
    return this.getBusinessQuery().isNotChildIn(termRelationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_parentTerm(dss.vector.solutions.ontology.TermQuery termQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.ontology.TermRelationship.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(termQuery));

    return this.getBusinessQuery().isNotChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_parentTerm(dss.vector.solutions.ontology.TermQuery termQuery, dss.vector.solutions.ontology.TermRelationshipQuery termRelationshipQuery)
  {
    termRelationshipQuery.AND(termRelationshipQuery.hasParent(termQuery));
    return this.getBusinessQuery().isNotChildIn(termRelationshipQuery);
  }


  public com.terraframe.mojo.query.Condition patientAggregatedIPTs()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.IPTPatients.CLASS);

    return this.getBusinessQuery().isChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition patientAggregatedIPTs(dss.vector.solutions.intervention.monitor.IPTPatientsQuery iPTPatientsQuery)
  {
    return this.getBusinessQuery().isChildIn(iPTPatientsQuery);
  }

  public com.terraframe.mojo.query.Condition patientAggregatedIPTs(dss.vector.solutions.intervention.monitor.AggregatedIPTQuery aggregatedIPTQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.IPTPatients.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(aggregatedIPTQuery));

    return this.getBusinessQuery().isChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition patientAggregatedIPTs(dss.vector.solutions.intervention.monitor.AggregatedIPTQuery aggregatedIPTQuery, dss.vector.solutions.intervention.monitor.IPTPatientsQuery iPTPatientsQuery)
  {
    iPTPatientsQuery.AND(iPTPatientsQuery.hasParent(aggregatedIPTQuery));
    return this.getBusinessQuery().isChildIn(iPTPatientsQuery);
  }


  public com.terraframe.mojo.query.Condition NOT_IN_patientAggregatedIPTs()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.IPTPatients.CLASS);

    return this.getBusinessQuery().isNotChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_patientAggregatedIPTs(dss.vector.solutions.intervention.monitor.IPTPatientsQuery iPTPatientsQuery)
  {
    return this.getBusinessQuery().isNotChildIn(iPTPatientsQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_patientAggregatedIPTs(dss.vector.solutions.intervention.monitor.AggregatedIPTQuery aggregatedIPTQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.IPTPatients.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(aggregatedIPTQuery));

    return this.getBusinessQuery().isNotChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_patientAggregatedIPTs(dss.vector.solutions.intervention.monitor.AggregatedIPTQuery aggregatedIPTQuery, dss.vector.solutions.intervention.monitor.IPTPatientsQuery iPTPatientsQuery)
  {
    iPTPatientsQuery.AND(iPTPatientsQuery.hasParent(aggregatedIPTQuery));
    return this.getBusinessQuery().isNotChildIn(iPTPatientsQuery);
  }


  public com.terraframe.mojo.query.Condition personsWithTreatmentLocations()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.SurveyedPersonTreatmentLocation.CLASS);

    return this.getBusinessQuery().isChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition personsWithTreatmentLocations(dss.vector.solutions.intervention.monitor.SurveyedPersonTreatmentLocationQuery surveyedPersonTreatmentLocationQuery)
  {
    return this.getBusinessQuery().isChildIn(surveyedPersonTreatmentLocationQuery);
  }

  public com.terraframe.mojo.query.Condition personsWithTreatmentLocations(dss.vector.solutions.intervention.monitor.SurveyedPersonQuery surveyedPersonQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.SurveyedPersonTreatmentLocation.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(surveyedPersonQuery));

    return this.getBusinessQuery().isChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition personsWithTreatmentLocations(dss.vector.solutions.intervention.monitor.SurveyedPersonQuery surveyedPersonQuery, dss.vector.solutions.intervention.monitor.SurveyedPersonTreatmentLocationQuery surveyedPersonTreatmentLocationQuery)
  {
    surveyedPersonTreatmentLocationQuery.AND(surveyedPersonTreatmentLocationQuery.hasParent(surveyedPersonQuery));
    return this.getBusinessQuery().isChildIn(surveyedPersonTreatmentLocationQuery);
  }


  public com.terraframe.mojo.query.Condition NOT_IN_personsWithTreatmentLocations()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.SurveyedPersonTreatmentLocation.CLASS);

    return this.getBusinessQuery().isNotChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_personsWithTreatmentLocations(dss.vector.solutions.intervention.monitor.SurveyedPersonTreatmentLocationQuery surveyedPersonTreatmentLocationQuery)
  {
    return this.getBusinessQuery().isNotChildIn(surveyedPersonTreatmentLocationQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_personsWithTreatmentLocations(dss.vector.solutions.intervention.monitor.SurveyedPersonQuery surveyedPersonQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.SurveyedPersonTreatmentLocation.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(surveyedPersonQuery));

    return this.getBusinessQuery().isNotChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_personsWithTreatmentLocations(dss.vector.solutions.intervention.monitor.SurveyedPersonQuery surveyedPersonQuery, dss.vector.solutions.intervention.monitor.SurveyedPersonTreatmentLocationQuery surveyedPersonTreatmentLocationQuery)
  {
    surveyedPersonTreatmentLocationQuery.AND(surveyedPersonTreatmentLocationQuery.hasParent(surveyedPersonQuery));
    return this.getBusinessQuery().isNotChildIn(surveyedPersonTreatmentLocationQuery);
  }


  public com.terraframe.mojo.query.Condition personsWithTreatments()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.SurveyedPersonTreatment.CLASS);

    return this.getBusinessQuery().isChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition personsWithTreatments(dss.vector.solutions.intervention.monitor.SurveyedPersonTreatmentQuery surveyedPersonTreatmentQuery)
  {
    return this.getBusinessQuery().isChildIn(surveyedPersonTreatmentQuery);
  }

  public com.terraframe.mojo.query.Condition personsWithTreatments(dss.vector.solutions.intervention.monitor.SurveyedPersonQuery surveyedPersonQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.SurveyedPersonTreatment.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(surveyedPersonQuery));

    return this.getBusinessQuery().isChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition personsWithTreatments(dss.vector.solutions.intervention.monitor.SurveyedPersonQuery surveyedPersonQuery, dss.vector.solutions.intervention.monitor.SurveyedPersonTreatmentQuery surveyedPersonTreatmentQuery)
  {
    surveyedPersonTreatmentQuery.AND(surveyedPersonTreatmentQuery.hasParent(surveyedPersonQuery));
    return this.getBusinessQuery().isChildIn(surveyedPersonTreatmentQuery);
  }


  public com.terraframe.mojo.query.Condition NOT_IN_personsWithTreatments()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.SurveyedPersonTreatment.CLASS);

    return this.getBusinessQuery().isNotChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_personsWithTreatments(dss.vector.solutions.intervention.monitor.SurveyedPersonTreatmentQuery surveyedPersonTreatmentQuery)
  {
    return this.getBusinessQuery().isNotChildIn(surveyedPersonTreatmentQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_personsWithTreatments(dss.vector.solutions.intervention.monitor.SurveyedPersonQuery surveyedPersonQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.SurveyedPersonTreatment.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(surveyedPersonQuery));

    return this.getBusinessQuery().isNotChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_personsWithTreatments(dss.vector.solutions.intervention.monitor.SurveyedPersonQuery surveyedPersonQuery, dss.vector.solutions.intervention.monitor.SurveyedPersonTreatmentQuery surveyedPersonTreatmentQuery)
  {
    surveyedPersonTreatmentQuery.AND(surveyedPersonTreatmentQuery.hasParent(surveyedPersonQuery));
    return this.getBusinessQuery().isNotChildIn(surveyedPersonTreatmentQuery);
  }


  public com.terraframe.mojo.query.Condition referralAggregatedCase()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.surveillance.CaseReferral.CLASS);

    return this.getBusinessQuery().isChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition referralAggregatedCase(dss.vector.solutions.surveillance.CaseReferralQuery caseReferralQuery)
  {
    return this.getBusinessQuery().isChildIn(caseReferralQuery);
  }

  public com.terraframe.mojo.query.Condition referralAggregatedCase(dss.vector.solutions.surveillance.AggregatedCaseQuery aggregatedCaseQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.surveillance.CaseReferral.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(aggregatedCaseQuery));

    return this.getBusinessQuery().isChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition referralAggregatedCase(dss.vector.solutions.surveillance.AggregatedCaseQuery aggregatedCaseQuery, dss.vector.solutions.surveillance.CaseReferralQuery caseReferralQuery)
  {
    caseReferralQuery.AND(caseReferralQuery.hasParent(aggregatedCaseQuery));
    return this.getBusinessQuery().isChildIn(caseReferralQuery);
  }


  public com.terraframe.mojo.query.Condition NOT_IN_referralAggregatedCase()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.surveillance.CaseReferral.CLASS);

    return this.getBusinessQuery().isNotChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_referralAggregatedCase(dss.vector.solutions.surveillance.CaseReferralQuery caseReferralQuery)
  {
    return this.getBusinessQuery().isNotChildIn(caseReferralQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_referralAggregatedCase(dss.vector.solutions.surveillance.AggregatedCaseQuery aggregatedCaseQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.surveillance.CaseReferral.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(aggregatedCaseQuery));

    return this.getBusinessQuery().isNotChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_referralAggregatedCase(dss.vector.solutions.surveillance.AggregatedCaseQuery aggregatedCaseQuery, dss.vector.solutions.surveillance.CaseReferralQuery caseReferralQuery)
  {
    caseReferralQuery.AND(caseReferralQuery.hasParent(aggregatedCaseQuery));
    return this.getBusinessQuery().isNotChildIn(caseReferralQuery);
  }


  public com.terraframe.mojo.query.Condition stockAggregatedCases()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.surveillance.CaseTreatmentStock.CLASS);

    return this.getBusinessQuery().isChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition stockAggregatedCases(dss.vector.solutions.surveillance.CaseTreatmentStockQuery caseTreatmentStockQuery)
  {
    return this.getBusinessQuery().isChildIn(caseTreatmentStockQuery);
  }

  public com.terraframe.mojo.query.Condition stockAggregatedCases(dss.vector.solutions.surveillance.AggregatedCaseQuery aggregatedCaseQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.surveillance.CaseTreatmentStock.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(aggregatedCaseQuery));

    return this.getBusinessQuery().isChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition stockAggregatedCases(dss.vector.solutions.surveillance.AggregatedCaseQuery aggregatedCaseQuery, dss.vector.solutions.surveillance.CaseTreatmentStockQuery caseTreatmentStockQuery)
  {
    caseTreatmentStockQuery.AND(caseTreatmentStockQuery.hasParent(aggregatedCaseQuery));
    return this.getBusinessQuery().isChildIn(caseTreatmentStockQuery);
  }


  public com.terraframe.mojo.query.Condition NOT_IN_stockAggregatedCases()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.surveillance.CaseTreatmentStock.CLASS);

    return this.getBusinessQuery().isNotChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_stockAggregatedCases(dss.vector.solutions.surveillance.CaseTreatmentStockQuery caseTreatmentStockQuery)
  {
    return this.getBusinessQuery().isNotChildIn(caseTreatmentStockQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_stockAggregatedCases(dss.vector.solutions.surveillance.AggregatedCaseQuery aggregatedCaseQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.surveillance.CaseTreatmentStock.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(aggregatedCaseQuery));

    return this.getBusinessQuery().isNotChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_stockAggregatedCases(dss.vector.solutions.surveillance.AggregatedCaseQuery aggregatedCaseQuery, dss.vector.solutions.surveillance.CaseTreatmentStockQuery caseTreatmentStockQuery)
  {
    caseTreatmentStockQuery.AND(caseTreatmentStockQuery.hasParent(aggregatedCaseQuery));
    return this.getBusinessQuery().isNotChildIn(caseTreatmentStockQuery);
  }


  public com.terraframe.mojo.query.Condition treatmentAggregatedCases()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.surveillance.CaseTreatment.CLASS);

    return this.getBusinessQuery().isChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition treatmentAggregatedCases(dss.vector.solutions.surveillance.CaseTreatmentQuery caseTreatmentQuery)
  {
    return this.getBusinessQuery().isChildIn(caseTreatmentQuery);
  }

  public com.terraframe.mojo.query.Condition treatmentAggregatedCases(dss.vector.solutions.surveillance.AggregatedCaseQuery aggregatedCaseQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.surveillance.CaseTreatment.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(aggregatedCaseQuery));

    return this.getBusinessQuery().isChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition treatmentAggregatedCases(dss.vector.solutions.surveillance.AggregatedCaseQuery aggregatedCaseQuery, dss.vector.solutions.surveillance.CaseTreatmentQuery caseTreatmentQuery)
  {
    caseTreatmentQuery.AND(caseTreatmentQuery.hasParent(aggregatedCaseQuery));
    return this.getBusinessQuery().isChildIn(caseTreatmentQuery);
  }


  public com.terraframe.mojo.query.Condition NOT_IN_treatmentAggregatedCases()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.surveillance.CaseTreatment.CLASS);

    return this.getBusinessQuery().isNotChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_treatmentAggregatedCases(dss.vector.solutions.surveillance.CaseTreatmentQuery caseTreatmentQuery)
  {
    return this.getBusinessQuery().isNotChildIn(caseTreatmentQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_treatmentAggregatedCases(dss.vector.solutions.surveillance.AggregatedCaseQuery aggregatedCaseQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.surveillance.CaseTreatment.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(aggregatedCaseQuery));

    return this.getBusinessQuery().isNotChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_treatmentAggregatedCases(dss.vector.solutions.surveillance.AggregatedCaseQuery aggregatedCaseQuery, dss.vector.solutions.surveillance.CaseTreatmentQuery caseTreatmentQuery)
  {
    caseTreatmentQuery.AND(caseTreatmentQuery.hasParent(aggregatedCaseQuery));
    return this.getBusinessQuery().isNotChildIn(caseTreatmentQuery);
  }


  public com.terraframe.mojo.query.Condition treatmentAggregatedIPTs()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.IPTTreatment.CLASS);

    return this.getBusinessQuery().isChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition treatmentAggregatedIPTs(dss.vector.solutions.intervention.monitor.IPTTreatmentQuery iPTTreatmentQuery)
  {
    return this.getBusinessQuery().isChildIn(iPTTreatmentQuery);
  }

  public com.terraframe.mojo.query.Condition treatmentAggregatedIPTs(dss.vector.solutions.intervention.monitor.AggregatedIPTQuery aggregatedIPTQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.IPTTreatment.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(aggregatedIPTQuery));

    return this.getBusinessQuery().isChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition treatmentAggregatedIPTs(dss.vector.solutions.intervention.monitor.AggregatedIPTQuery aggregatedIPTQuery, dss.vector.solutions.intervention.monitor.IPTTreatmentQuery iPTTreatmentQuery)
  {
    iPTTreatmentQuery.AND(iPTTreatmentQuery.hasParent(aggregatedIPTQuery));
    return this.getBusinessQuery().isChildIn(iPTTreatmentQuery);
  }


  public com.terraframe.mojo.query.Condition NOT_IN_treatmentAggregatedIPTs()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.IPTTreatment.CLASS);

    return this.getBusinessQuery().isNotChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_treatmentAggregatedIPTs(dss.vector.solutions.intervention.monitor.IPTTreatmentQuery iPTTreatmentQuery)
  {
    return this.getBusinessQuery().isNotChildIn(iPTTreatmentQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_treatmentAggregatedIPTs(dss.vector.solutions.intervention.monitor.AggregatedIPTQuery aggregatedIPTQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.IPTTreatment.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(aggregatedIPTQuery));

    return this.getBusinessQuery().isNotChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_treatmentAggregatedIPTs(dss.vector.solutions.intervention.monitor.AggregatedIPTQuery aggregatedIPTQuery, dss.vector.solutions.intervention.monitor.IPTTreatmentQuery iPTTreatmentQuery)
  {
    iPTTreatmentQuery.AND(iPTTreatmentQuery.hasParent(aggregatedIPTQuery));
    return this.getBusinessQuery().isNotChildIn(iPTTreatmentQuery);
  }


  public com.terraframe.mojo.query.Condition treatmentMethodAggregatedCase()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.surveillance.CaseTreatmentMethod.CLASS);

    return this.getBusinessQuery().isChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition treatmentMethodAggregatedCase(dss.vector.solutions.surveillance.CaseTreatmentMethodQuery caseTreatmentMethodQuery)
  {
    return this.getBusinessQuery().isChildIn(caseTreatmentMethodQuery);
  }

  public com.terraframe.mojo.query.Condition treatmentMethodAggregatedCase(dss.vector.solutions.surveillance.AggregatedCaseQuery aggregatedCaseQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.surveillance.CaseTreatmentMethod.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(aggregatedCaseQuery));

    return this.getBusinessQuery().isChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition treatmentMethodAggregatedCase(dss.vector.solutions.surveillance.AggregatedCaseQuery aggregatedCaseQuery, dss.vector.solutions.surveillance.CaseTreatmentMethodQuery caseTreatmentMethodQuery)
  {
    caseTreatmentMethodQuery.AND(caseTreatmentMethodQuery.hasParent(aggregatedCaseQuery));
    return this.getBusinessQuery().isChildIn(caseTreatmentMethodQuery);
  }


  public com.terraframe.mojo.query.Condition NOT_IN_treatmentMethodAggregatedCase()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.surveillance.CaseTreatmentMethod.CLASS);

    return this.getBusinessQuery().isNotChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_treatmentMethodAggregatedCase(dss.vector.solutions.surveillance.CaseTreatmentMethodQuery caseTreatmentMethodQuery)
  {
    return this.getBusinessQuery().isNotChildIn(caseTreatmentMethodQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_treatmentMethodAggregatedCase(dss.vector.solutions.surveillance.AggregatedCaseQuery aggregatedCaseQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.surveillance.CaseTreatmentMethod.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(aggregatedCaseQuery));

    return this.getBusinessQuery().isNotChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_treatmentMethodAggregatedCase(dss.vector.solutions.surveillance.AggregatedCaseQuery aggregatedCaseQuery, dss.vector.solutions.surveillance.CaseTreatmentMethodQuery caseTreatmentMethodQuery)
  {
    caseTreatmentMethodQuery.AND(caseTreatmentMethodQuery.hasParent(aggregatedCaseQuery));
    return this.getBusinessQuery().isNotChildIn(caseTreatmentMethodQuery);
  }


  public com.terraframe.mojo.query.Condition childTerm()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.ontology.TermRelationship.CLASS);

    return this.getBusinessQuery().isParentIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition childTerm(dss.vector.solutions.ontology.TermRelationshipQuery termRelationshipQuery)
  {
    return this.getBusinessQuery().isParentIn(termRelationshipQuery);
  }

  public com.terraframe.mojo.query.Condition childTerm(dss.vector.solutions.ontology.TermQuery termQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.ontology.TermRelationship.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(termQuery));

    return this.getBusinessQuery().isParentIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition childTerm(dss.vector.solutions.ontology.TermQuery termQuery, dss.vector.solutions.ontology.TermRelationshipQuery termRelationshipQuery)
  {
    termRelationshipQuery.AND(termRelationshipQuery.hasChild(termQuery));
    return this.getBusinessQuery().isParentIn(termRelationshipQuery);
  }


  public com.terraframe.mojo.query.Condition NOT_IN_childTerm()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.ontology.TermRelationship.CLASS);

    return this.getBusinessQuery().isNotParentIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_childTerm(dss.vector.solutions.ontology.TermRelationshipQuery termRelationshipQuery)
  {
    return this.getBusinessQuery().isNotParentIn(termRelationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_childTerm(dss.vector.solutions.ontology.TermQuery termQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.ontology.TermRelationship.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(termQuery));

    return this.getBusinessQuery().isNotParentIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_childTerm(dss.vector.solutions.ontology.TermQuery termQuery, dss.vector.solutions.ontology.TermRelationshipQuery termRelationshipQuery)
  {
    termRelationshipQuery.AND(termRelationshipQuery.hasChild(termQuery));
    return this.getBusinessQuery().isNotParentIn(termRelationshipQuery);
  }


/**
 * Interface that masks all type unsafe query methods and defines all type safe methods.
 * This type is used when a join is performed on this class as a reference.
 **/
  public interface TermQueryReferenceIF extends com.terraframe.mojo.generation.loader.Reloadable, com.terraframe.mojo.query.SelectableReference
  {

    public com.terraframe.mojo.query.AttributeChar getComment();
    public com.terraframe.mojo.query.AttributeChar getComment(String alias);
    public com.terraframe.mojo.query.AttributeChar getComment(String alias, String displayLabel);
    public com.terraframe.mojo.query.AttributeMoment getCreateDate();
    public com.terraframe.mojo.query.AttributeMoment getCreateDate(String alias);
    public com.terraframe.mojo.query.AttributeMoment getCreateDate(String alias, String displayLabel);
    public com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy();
    public com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias);
    public com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias, String displayLabel);
    public com.terraframe.mojo.query.AttributeChar getDef();
    public com.terraframe.mojo.query.AttributeChar getDef(String alias);
    public com.terraframe.mojo.query.AttributeChar getDef(String alias, String displayLabel);
    public com.terraframe.mojo.query.AttributeChar getDisplay();
    public com.terraframe.mojo.query.AttributeChar getDisplay(String alias);
    public com.terraframe.mojo.query.AttributeChar getDisplay(String alias, String displayLabel);
    public com.terraframe.mojo.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain();
    public com.terraframe.mojo.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias);
    public com.terraframe.mojo.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias, String displayLabel);
    public com.terraframe.mojo.query.AttributeChar getId();
    public com.terraframe.mojo.query.AttributeChar getId(String alias);
    public com.terraframe.mojo.query.AttributeChar getId(String alias, String displayLabel);
    public com.terraframe.mojo.query.AttributeChar getKeyName();
    public com.terraframe.mojo.query.AttributeChar getKeyName(String alias);
    public com.terraframe.mojo.query.AttributeChar getKeyName(String alias, String displayLabel);
    public com.terraframe.mojo.query.AttributeMoment getLastUpdateDate();
    public com.terraframe.mojo.query.AttributeMoment getLastUpdateDate(String alias);
    public com.terraframe.mojo.query.AttributeMoment getLastUpdateDate(String alias, String displayLabel);
    public com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy();
    public com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias);
    public com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias, String displayLabel);
    public com.terraframe.mojo.system.UsersQuery.UsersQueryReferenceIF getLockedBy();
    public com.terraframe.mojo.system.UsersQuery.UsersQueryReferenceIF getLockedBy(String alias);
    public com.terraframe.mojo.system.UsersQuery.UsersQueryReferenceIF getLockedBy(String alias, String displayLabel);
    public com.terraframe.mojo.query.AttributeChar getName();
    public com.terraframe.mojo.query.AttributeChar getName(String alias);
    public com.terraframe.mojo.query.AttributeChar getName(String alias, String displayLabel);
    public com.terraframe.mojo.query.AttributeChar getNamespace();
    public com.terraframe.mojo.query.AttributeChar getNamespace(String alias);
    public com.terraframe.mojo.query.AttributeChar getNamespace(String alias, String displayLabel);
    public com.terraframe.mojo.query.AttributeBoolean getObsolete();
    public com.terraframe.mojo.query.AttributeBoolean getObsolete(String alias);
    public com.terraframe.mojo.query.AttributeBoolean getObsolete(String alias, String displayLabel);
    public dss.vector.solutions.ontology.OntologyQuery.OntologyQueryReferenceIF getOntology();
    public dss.vector.solutions.ontology.OntologyQuery.OntologyQueryReferenceIF getOntology(String alias);
    public dss.vector.solutions.ontology.OntologyQuery.OntologyQueryReferenceIF getOntology(String alias, String displayLabel);
    public com.terraframe.mojo.system.ActorQuery.ActorQueryReferenceIF getOwner();
    public com.terraframe.mojo.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias);
    public com.terraframe.mojo.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias, String displayLabel);
    public com.terraframe.mojo.query.AttributeLong getSeq();
    public com.terraframe.mojo.query.AttributeLong getSeq(String alias);
    public com.terraframe.mojo.query.AttributeLong getSeq(String alias, String displayLabel);
    public com.terraframe.mojo.query.AttributeChar getSiteMaster();
    public com.terraframe.mojo.query.AttributeChar getSiteMaster(String alias);
    public com.terraframe.mojo.query.AttributeChar getSiteMaster(String alias, String displayLabel);
    public com.terraframe.mojo.query.AttributeChar getTermId();
    public com.terraframe.mojo.query.AttributeChar getTermId(String alias);
    public com.terraframe.mojo.query.AttributeChar getTermId(String alias, String displayLabel);
    public com.terraframe.mojo.query.AttributeChar getType();
    public com.terraframe.mojo.query.AttributeChar getType(String alias);
    public com.terraframe.mojo.query.AttributeChar getType(String alias, String displayLabel);

    public com.terraframe.mojo.query.BasicCondition EQ(dss.vector.solutions.ontology.Term term);

    public com.terraframe.mojo.query.BasicCondition NE(dss.vector.solutions.ontology.Term term);


  public com.terraframe.mojo.query.Condition childTerm();

  public com.terraframe.mojo.query.Condition childTerm(dss.vector.solutions.ontology.TermQuery termQuery);

  public com.terraframe.mojo.query.Condition childTerm(dss.vector.solutions.ontology.TermQuery termQuery, dss.vector.solutions.ontology.TermRelationshipQuery termRelationshipQuery);


  public com.terraframe.mojo.query.Condition NOT_IN_childTerm();

  public com.terraframe.mojo.query.Condition NOT_IN_childTerm(dss.vector.solutions.ontology.TermQuery termQuery);

  public com.terraframe.mojo.query.Condition NOT_IN_childTerm(dss.vector.solutions.ontology.TermQuery termQuery, dss.vector.solutions.ontology.TermRelationshipQuery termRelationshipQuery);


  public com.terraframe.mojo.query.Condition aNCVisitAggregatedIPTs();
  public com.terraframe.mojo.query.Condition aNCVisitAggregatedIPTs(dss.vector.solutions.intervention.monitor.AggregatedIPTQuery aggregatedIPTQuery);

  public com.terraframe.mojo.query.Condition aNCVisitAggregatedIPTs(dss.vector.solutions.intervention.monitor.AggregatedIPTQuery aggregatedIPTQuery, dss.vector.solutions.intervention.monitor.IPTANCVisitQuery iPTANCVisitQuery);


  public com.terraframe.mojo.query.Condition aggregatedITNsWithNets();
  public com.terraframe.mojo.query.Condition aggregatedITNsWithNets(dss.vector.solutions.intervention.monitor.ITNDataQuery iTNDataQuery);

  public com.terraframe.mojo.query.Condition aggregatedITNsWithNets(dss.vector.solutions.intervention.monitor.ITNDataQuery iTNDataQuery, dss.vector.solutions.intervention.monitor.ITNNetQuery iTNNetQuery);


  public com.terraframe.mojo.query.Condition aggregatedITNsWithService();
  public com.terraframe.mojo.query.Condition aggregatedITNsWithService(dss.vector.solutions.intervention.monitor.ITNDataQuery iTNDataQuery);

  public com.terraframe.mojo.query.Condition aggregatedITNsWithService(dss.vector.solutions.intervention.monitor.ITNDataQuery iTNDataQuery, dss.vector.solutions.intervention.monitor.ITNServiceQuery iTNServiceQuery);


  public com.terraframe.mojo.query.Condition aggregatedITNsWithTargetGroups();
  public com.terraframe.mojo.query.Condition aggregatedITNsWithTargetGroups(dss.vector.solutions.intervention.monitor.ITNDataQuery iTNDataQuery);

  public com.terraframe.mojo.query.Condition aggregatedITNsWithTargetGroups(dss.vector.solutions.intervention.monitor.ITNDataQuery iTNDataQuery, dss.vector.solutions.intervention.monitor.ITNTargetGroupQuery iTNTargetGroupQuery);


  public com.terraframe.mojo.query.Condition diagnosticAggregatedCases();
  public com.terraframe.mojo.query.Condition diagnosticAggregatedCases(dss.vector.solutions.surveillance.AggregatedCaseQuery aggregatedCaseQuery);

  public com.terraframe.mojo.query.Condition diagnosticAggregatedCases(dss.vector.solutions.surveillance.AggregatedCaseQuery aggregatedCaseQuery, dss.vector.solutions.surveillance.CaseDiagnosticQuery caseDiagnosticQuery);


  public com.terraframe.mojo.query.Condition doseAggregatedIPTs();
  public com.terraframe.mojo.query.Condition doseAggregatedIPTs(dss.vector.solutions.intervention.monitor.AggregatedIPTQuery aggregatedIPTQuery);

  public com.terraframe.mojo.query.Condition doseAggregatedIPTs(dss.vector.solutions.intervention.monitor.AggregatedIPTQuery aggregatedIPTQuery, dss.vector.solutions.intervention.monitor.IPTDoseQuery iPTDoseQuery);


  public com.terraframe.mojo.query.Condition iTNCommunityDistributionsWithNets();
  public com.terraframe.mojo.query.Condition iTNCommunityDistributionsWithNets(dss.vector.solutions.intervention.monitor.ITNCommunityDistributionQuery iTNCommunityDistributionQuery);

  public com.terraframe.mojo.query.Condition iTNCommunityDistributionsWithNets(dss.vector.solutions.intervention.monitor.ITNCommunityDistributionQuery iTNCommunityDistributionQuery, dss.vector.solutions.intervention.monitor.ITNCommunityNetQuery iTNCommunityNetQuery);


  public com.terraframe.mojo.query.Condition iTNCommunityDistributionsWithTargetGroups();
  public com.terraframe.mojo.query.Condition iTNCommunityDistributionsWithTargetGroups(dss.vector.solutions.intervention.monitor.ITNCommunityDistributionQuery iTNCommunityDistributionQuery);

  public com.terraframe.mojo.query.Condition iTNCommunityDistributionsWithTargetGroups(dss.vector.solutions.intervention.monitor.ITNCommunityDistributionQuery iTNCommunityDistributionQuery, dss.vector.solutions.intervention.monitor.ITNCommunityTargetGroupQuery iTNCommunityTargetGroupQuery);


  public com.terraframe.mojo.query.Condition iTNFacilityDistributionsWithNets();
  public com.terraframe.mojo.query.Condition iTNFacilityDistributionsWithNets(dss.vector.solutions.intervention.monitor.ITNDistributionQuery iTNDistributionQuery);

  public com.terraframe.mojo.query.Condition iTNFacilityDistributionsWithNets(dss.vector.solutions.intervention.monitor.ITNDistributionQuery iTNDistributionQuery, dss.vector.solutions.intervention.monitor.ITNDistributionTargetGroupQuery iTNDistributionTargetGroupQuery);


  public com.terraframe.mojo.query.Condition individualInstance();
  public com.terraframe.mojo.query.Condition individualInstance(dss.vector.solutions.intervention.monitor.IndividualInstanceQuery individualInstanceQuery);

  public com.terraframe.mojo.query.Condition individualInstance(dss.vector.solutions.intervention.monitor.IndividualInstanceQuery individualInstanceQuery, dss.vector.solutions.surveillance.IndividualCaseSymptomQuery individualCaseSymptomQuery);


  public com.terraframe.mojo.query.Condition parentTerm();
  public com.terraframe.mojo.query.Condition parentTerm(dss.vector.solutions.ontology.TermQuery termQuery);

  public com.terraframe.mojo.query.Condition parentTerm(dss.vector.solutions.ontology.TermQuery termQuery, dss.vector.solutions.ontology.TermRelationshipQuery termRelationshipQuery);


  public com.terraframe.mojo.query.Condition patientAggregatedIPTs();
  public com.terraframe.mojo.query.Condition patientAggregatedIPTs(dss.vector.solutions.intervention.monitor.AggregatedIPTQuery aggregatedIPTQuery);

  public com.terraframe.mojo.query.Condition patientAggregatedIPTs(dss.vector.solutions.intervention.monitor.AggregatedIPTQuery aggregatedIPTQuery, dss.vector.solutions.intervention.monitor.IPTPatientsQuery iPTPatientsQuery);


  public com.terraframe.mojo.query.Condition personsWithTreatmentLocations();
  public com.terraframe.mojo.query.Condition personsWithTreatmentLocations(dss.vector.solutions.intervention.monitor.SurveyedPersonQuery surveyedPersonQuery);

  public com.terraframe.mojo.query.Condition personsWithTreatmentLocations(dss.vector.solutions.intervention.monitor.SurveyedPersonQuery surveyedPersonQuery, dss.vector.solutions.intervention.monitor.SurveyedPersonTreatmentLocationQuery surveyedPersonTreatmentLocationQuery);


  public com.terraframe.mojo.query.Condition personsWithTreatments();
  public com.terraframe.mojo.query.Condition personsWithTreatments(dss.vector.solutions.intervention.monitor.SurveyedPersonQuery surveyedPersonQuery);

  public com.terraframe.mojo.query.Condition personsWithTreatments(dss.vector.solutions.intervention.monitor.SurveyedPersonQuery surveyedPersonQuery, dss.vector.solutions.intervention.monitor.SurveyedPersonTreatmentQuery surveyedPersonTreatmentQuery);


  public com.terraframe.mojo.query.Condition referralAggregatedCase();
  public com.terraframe.mojo.query.Condition referralAggregatedCase(dss.vector.solutions.surveillance.AggregatedCaseQuery aggregatedCaseQuery);

  public com.terraframe.mojo.query.Condition referralAggregatedCase(dss.vector.solutions.surveillance.AggregatedCaseQuery aggregatedCaseQuery, dss.vector.solutions.surveillance.CaseReferralQuery caseReferralQuery);


  public com.terraframe.mojo.query.Condition stockAggregatedCases();
  public com.terraframe.mojo.query.Condition stockAggregatedCases(dss.vector.solutions.surveillance.AggregatedCaseQuery aggregatedCaseQuery);

  public com.terraframe.mojo.query.Condition stockAggregatedCases(dss.vector.solutions.surveillance.AggregatedCaseQuery aggregatedCaseQuery, dss.vector.solutions.surveillance.CaseTreatmentStockQuery caseTreatmentStockQuery);


  public com.terraframe.mojo.query.Condition treatmentAggregatedCases();
  public com.terraframe.mojo.query.Condition treatmentAggregatedCases(dss.vector.solutions.surveillance.AggregatedCaseQuery aggregatedCaseQuery);

  public com.terraframe.mojo.query.Condition treatmentAggregatedCases(dss.vector.solutions.surveillance.AggregatedCaseQuery aggregatedCaseQuery, dss.vector.solutions.surveillance.CaseTreatmentQuery caseTreatmentQuery);


  public com.terraframe.mojo.query.Condition treatmentAggregatedIPTs();
  public com.terraframe.mojo.query.Condition treatmentAggregatedIPTs(dss.vector.solutions.intervention.monitor.AggregatedIPTQuery aggregatedIPTQuery);

  public com.terraframe.mojo.query.Condition treatmentAggregatedIPTs(dss.vector.solutions.intervention.monitor.AggregatedIPTQuery aggregatedIPTQuery, dss.vector.solutions.intervention.monitor.IPTTreatmentQuery iPTTreatmentQuery);


  public com.terraframe.mojo.query.Condition treatmentMethodAggregatedCase();
  public com.terraframe.mojo.query.Condition treatmentMethodAggregatedCase(dss.vector.solutions.surveillance.AggregatedCaseQuery aggregatedCaseQuery);

  public com.terraframe.mojo.query.Condition treatmentMethodAggregatedCase(dss.vector.solutions.surveillance.AggregatedCaseQuery aggregatedCaseQuery, dss.vector.solutions.surveillance.CaseTreatmentMethodQuery caseTreatmentMethodQuery);


  public com.terraframe.mojo.query.Condition NOT_IN_aNCVisitAggregatedIPTs();
  public com.terraframe.mojo.query.Condition NOT_IN_aNCVisitAggregatedIPTs(dss.vector.solutions.intervention.monitor.AggregatedIPTQuery aggregatedIPTQuery);

  public com.terraframe.mojo.query.Condition NOT_IN_aNCVisitAggregatedIPTs(dss.vector.solutions.intervention.monitor.AggregatedIPTQuery aggregatedIPTQuery, dss.vector.solutions.intervention.monitor.IPTANCVisitQuery iPTANCVisitQuery);


  public com.terraframe.mojo.query.Condition NOT_IN_aggregatedITNsWithNets();
  public com.terraframe.mojo.query.Condition NOT_IN_aggregatedITNsWithNets(dss.vector.solutions.intervention.monitor.ITNDataQuery iTNDataQuery);

  public com.terraframe.mojo.query.Condition NOT_IN_aggregatedITNsWithNets(dss.vector.solutions.intervention.monitor.ITNDataQuery iTNDataQuery, dss.vector.solutions.intervention.monitor.ITNNetQuery iTNNetQuery);


  public com.terraframe.mojo.query.Condition NOT_IN_aggregatedITNsWithService();
  public com.terraframe.mojo.query.Condition NOT_IN_aggregatedITNsWithService(dss.vector.solutions.intervention.monitor.ITNDataQuery iTNDataQuery);

  public com.terraframe.mojo.query.Condition NOT_IN_aggregatedITNsWithService(dss.vector.solutions.intervention.monitor.ITNDataQuery iTNDataQuery, dss.vector.solutions.intervention.monitor.ITNServiceQuery iTNServiceQuery);


  public com.terraframe.mojo.query.Condition NOT_IN_aggregatedITNsWithTargetGroups();
  public com.terraframe.mojo.query.Condition NOT_IN_aggregatedITNsWithTargetGroups(dss.vector.solutions.intervention.monitor.ITNDataQuery iTNDataQuery);

  public com.terraframe.mojo.query.Condition NOT_IN_aggregatedITNsWithTargetGroups(dss.vector.solutions.intervention.monitor.ITNDataQuery iTNDataQuery, dss.vector.solutions.intervention.monitor.ITNTargetGroupQuery iTNTargetGroupQuery);


  public com.terraframe.mojo.query.Condition NOT_IN_diagnosticAggregatedCases();
  public com.terraframe.mojo.query.Condition NOT_IN_diagnosticAggregatedCases(dss.vector.solutions.surveillance.AggregatedCaseQuery aggregatedCaseQuery);

  public com.terraframe.mojo.query.Condition NOT_IN_diagnosticAggregatedCases(dss.vector.solutions.surveillance.AggregatedCaseQuery aggregatedCaseQuery, dss.vector.solutions.surveillance.CaseDiagnosticQuery caseDiagnosticQuery);


  public com.terraframe.mojo.query.Condition NOT_IN_doseAggregatedIPTs();
  public com.terraframe.mojo.query.Condition NOT_IN_doseAggregatedIPTs(dss.vector.solutions.intervention.monitor.AggregatedIPTQuery aggregatedIPTQuery);

  public com.terraframe.mojo.query.Condition NOT_IN_doseAggregatedIPTs(dss.vector.solutions.intervention.monitor.AggregatedIPTQuery aggregatedIPTQuery, dss.vector.solutions.intervention.monitor.IPTDoseQuery iPTDoseQuery);


  public com.terraframe.mojo.query.Condition NOT_IN_iTNCommunityDistributionsWithNets();
  public com.terraframe.mojo.query.Condition NOT_IN_iTNCommunityDistributionsWithNets(dss.vector.solutions.intervention.monitor.ITNCommunityDistributionQuery iTNCommunityDistributionQuery);

  public com.terraframe.mojo.query.Condition NOT_IN_iTNCommunityDistributionsWithNets(dss.vector.solutions.intervention.monitor.ITNCommunityDistributionQuery iTNCommunityDistributionQuery, dss.vector.solutions.intervention.monitor.ITNCommunityNetQuery iTNCommunityNetQuery);


  public com.terraframe.mojo.query.Condition NOT_IN_iTNCommunityDistributionsWithTargetGroups();
  public com.terraframe.mojo.query.Condition NOT_IN_iTNCommunityDistributionsWithTargetGroups(dss.vector.solutions.intervention.monitor.ITNCommunityDistributionQuery iTNCommunityDistributionQuery);

  public com.terraframe.mojo.query.Condition NOT_IN_iTNCommunityDistributionsWithTargetGroups(dss.vector.solutions.intervention.monitor.ITNCommunityDistributionQuery iTNCommunityDistributionQuery, dss.vector.solutions.intervention.monitor.ITNCommunityTargetGroupQuery iTNCommunityTargetGroupQuery);


  public com.terraframe.mojo.query.Condition NOT_IN_iTNFacilityDistributionsWithNets();
  public com.terraframe.mojo.query.Condition NOT_IN_iTNFacilityDistributionsWithNets(dss.vector.solutions.intervention.monitor.ITNDistributionQuery iTNDistributionQuery);

  public com.terraframe.mojo.query.Condition NOT_IN_iTNFacilityDistributionsWithNets(dss.vector.solutions.intervention.monitor.ITNDistributionQuery iTNDistributionQuery, dss.vector.solutions.intervention.monitor.ITNDistributionTargetGroupQuery iTNDistributionTargetGroupQuery);


  public com.terraframe.mojo.query.Condition NOT_IN_individualInstance();
  public com.terraframe.mojo.query.Condition NOT_IN_individualInstance(dss.vector.solutions.intervention.monitor.IndividualInstanceQuery individualInstanceQuery);

  public com.terraframe.mojo.query.Condition NOT_IN_individualInstance(dss.vector.solutions.intervention.monitor.IndividualInstanceQuery individualInstanceQuery, dss.vector.solutions.surveillance.IndividualCaseSymptomQuery individualCaseSymptomQuery);


  public com.terraframe.mojo.query.Condition NOT_IN_parentTerm();
  public com.terraframe.mojo.query.Condition NOT_IN_parentTerm(dss.vector.solutions.ontology.TermQuery termQuery);

  public com.terraframe.mojo.query.Condition NOT_IN_parentTerm(dss.vector.solutions.ontology.TermQuery termQuery, dss.vector.solutions.ontology.TermRelationshipQuery termRelationshipQuery);


  public com.terraframe.mojo.query.Condition NOT_IN_patientAggregatedIPTs();
  public com.terraframe.mojo.query.Condition NOT_IN_patientAggregatedIPTs(dss.vector.solutions.intervention.monitor.AggregatedIPTQuery aggregatedIPTQuery);

  public com.terraframe.mojo.query.Condition NOT_IN_patientAggregatedIPTs(dss.vector.solutions.intervention.monitor.AggregatedIPTQuery aggregatedIPTQuery, dss.vector.solutions.intervention.monitor.IPTPatientsQuery iPTPatientsQuery);


  public com.terraframe.mojo.query.Condition NOT_IN_personsWithTreatmentLocations();
  public com.terraframe.mojo.query.Condition NOT_IN_personsWithTreatmentLocations(dss.vector.solutions.intervention.monitor.SurveyedPersonQuery surveyedPersonQuery);

  public com.terraframe.mojo.query.Condition NOT_IN_personsWithTreatmentLocations(dss.vector.solutions.intervention.monitor.SurveyedPersonQuery surveyedPersonQuery, dss.vector.solutions.intervention.monitor.SurveyedPersonTreatmentLocationQuery surveyedPersonTreatmentLocationQuery);


  public com.terraframe.mojo.query.Condition NOT_IN_personsWithTreatments();
  public com.terraframe.mojo.query.Condition NOT_IN_personsWithTreatments(dss.vector.solutions.intervention.monitor.SurveyedPersonQuery surveyedPersonQuery);

  public com.terraframe.mojo.query.Condition NOT_IN_personsWithTreatments(dss.vector.solutions.intervention.monitor.SurveyedPersonQuery surveyedPersonQuery, dss.vector.solutions.intervention.monitor.SurveyedPersonTreatmentQuery surveyedPersonTreatmentQuery);


  public com.terraframe.mojo.query.Condition NOT_IN_referralAggregatedCase();
  public com.terraframe.mojo.query.Condition NOT_IN_referralAggregatedCase(dss.vector.solutions.surveillance.AggregatedCaseQuery aggregatedCaseQuery);

  public com.terraframe.mojo.query.Condition NOT_IN_referralAggregatedCase(dss.vector.solutions.surveillance.AggregatedCaseQuery aggregatedCaseQuery, dss.vector.solutions.surveillance.CaseReferralQuery caseReferralQuery);


  public com.terraframe.mojo.query.Condition NOT_IN_stockAggregatedCases();
  public com.terraframe.mojo.query.Condition NOT_IN_stockAggregatedCases(dss.vector.solutions.surveillance.AggregatedCaseQuery aggregatedCaseQuery);

  public com.terraframe.mojo.query.Condition NOT_IN_stockAggregatedCases(dss.vector.solutions.surveillance.AggregatedCaseQuery aggregatedCaseQuery, dss.vector.solutions.surveillance.CaseTreatmentStockQuery caseTreatmentStockQuery);


  public com.terraframe.mojo.query.Condition NOT_IN_treatmentAggregatedCases();
  public com.terraframe.mojo.query.Condition NOT_IN_treatmentAggregatedCases(dss.vector.solutions.surveillance.AggregatedCaseQuery aggregatedCaseQuery);

  public com.terraframe.mojo.query.Condition NOT_IN_treatmentAggregatedCases(dss.vector.solutions.surveillance.AggregatedCaseQuery aggregatedCaseQuery, dss.vector.solutions.surveillance.CaseTreatmentQuery caseTreatmentQuery);


  public com.terraframe.mojo.query.Condition NOT_IN_treatmentAggregatedIPTs();
  public com.terraframe.mojo.query.Condition NOT_IN_treatmentAggregatedIPTs(dss.vector.solutions.intervention.monitor.AggregatedIPTQuery aggregatedIPTQuery);

  public com.terraframe.mojo.query.Condition NOT_IN_treatmentAggregatedIPTs(dss.vector.solutions.intervention.monitor.AggregatedIPTQuery aggregatedIPTQuery, dss.vector.solutions.intervention.monitor.IPTTreatmentQuery iPTTreatmentQuery);


  public com.terraframe.mojo.query.Condition NOT_IN_treatmentMethodAggregatedCase();
  public com.terraframe.mojo.query.Condition NOT_IN_treatmentMethodAggregatedCase(dss.vector.solutions.surveillance.AggregatedCaseQuery aggregatedCaseQuery);

  public com.terraframe.mojo.query.Condition NOT_IN_treatmentMethodAggregatedCase(dss.vector.solutions.surveillance.AggregatedCaseQuery aggregatedCaseQuery, dss.vector.solutions.surveillance.CaseTreatmentMethodQuery caseTreatmentMethodQuery);

  }

/**
 * Implements type safe query methods.
 * This type is used when a join is performed on this class as a reference.
 **/
  public static class TermQueryReference extends com.terraframe.mojo.query.AttributeReference
 implements TermQueryReferenceIF
, com.terraframe.mojo.generation.loader.Reloadable
  {
private static final long serialVersionUID = 1695534771;

  public TermQueryReference(com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias, com.terraframe.mojo.dataaccess.MdBusinessDAOIF referenceMdBusinessIF, String referenceTableAlias, com.terraframe.mojo.query.ComponentQuery rootQuery, java.util.Set<com.terraframe.mojo.query.Join> tableJoinSet, String alias, String displayLabel)
  {
    super(mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, alias, displayLabel);

  }


    public com.terraframe.mojo.query.BasicCondition EQ(dss.vector.solutions.ontology.Term term)
    {
      return this.EQ(term.getId());
    }

    public com.terraframe.mojo.query.BasicCondition NE(dss.vector.solutions.ontology.Term term)
    {
      return this.NE(term.getId());
    }

  public com.terraframe.mojo.query.AttributeChar getComment()
  {
    return getComment(null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getComment(String alias)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.attributeFactory("comment", "com.terraframe.mojo.system.metadata.MdAttributeText", alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getComment(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.attributeFactory("comment", "com.terraframe.mojo.system.metadata.MdAttributeText", alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeMoment getCreateDate()
  {
    return getCreateDate(null);

  }
 
  public com.terraframe.mojo.query.AttributeMoment getCreateDate(String alias)
  {
    return (com.terraframe.mojo.query.AttributeMoment)this.attributeFactory("createDate", "com.terraframe.mojo.system.metadata.MdAttributeDateTime", alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeMoment getCreateDate(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeMoment)this.attributeFactory("createDate", "com.terraframe.mojo.system.metadata.MdAttributeDateTime", alias, displayLabel);

  }
  public com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy()
  {
    return getCreatedBy(null);

  }
 
  public com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias)
  {
    return (com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF)this.attributeFactory("createdBy", "com.terraframe.mojo.system.metadata.MdAttributeReference", alias, null);

  }
 
  public com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF)this.attributeFactory("createdBy", "com.terraframe.mojo.system.metadata.MdAttributeReference", alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeChar getDef()
  {
    return getDef(null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getDef(String alias)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.attributeFactory("def", "com.terraframe.mojo.system.metadata.MdAttributeText", alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getDef(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.attributeFactory("def", "com.terraframe.mojo.system.metadata.MdAttributeText", alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeChar getDisplay()
  {
    return getDisplay(null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getDisplay(String alias)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.attributeFactory("display", "com.terraframe.mojo.system.metadata.MdAttributeCharacter", alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getDisplay(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.attributeFactory("display", "com.terraframe.mojo.system.metadata.MdAttributeCharacter", alias, displayLabel);

  }
  public com.terraframe.mojo.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain()
  {
    return getEntityDomain(null);

  }
 
  public com.terraframe.mojo.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias)
  {
    return (com.terraframe.mojo.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF)this.attributeFactory("entityDomain", "com.terraframe.mojo.system.metadata.MdAttributeReference", alias, null);

  }
 
  public com.terraframe.mojo.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF)this.attributeFactory("entityDomain", "com.terraframe.mojo.system.metadata.MdAttributeReference", alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeChar getId()
  {
    return getId(null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getId(String alias)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.attributeFactory("id", "com.terraframe.mojo.system.metadata.MdAttributeCharacter", alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getId(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.attributeFactory("id", "com.terraframe.mojo.system.metadata.MdAttributeCharacter", alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeChar getKeyName()
  {
    return getKeyName(null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getKeyName(String alias)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.attributeFactory("keyName", "com.terraframe.mojo.system.metadata.MdAttributeCharacter", alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getKeyName(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.attributeFactory("keyName", "com.terraframe.mojo.system.metadata.MdAttributeCharacter", alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeMoment getLastUpdateDate()
  {
    return getLastUpdateDate(null);

  }
 
  public com.terraframe.mojo.query.AttributeMoment getLastUpdateDate(String alias)
  {
    return (com.terraframe.mojo.query.AttributeMoment)this.attributeFactory("lastUpdateDate", "com.terraframe.mojo.system.metadata.MdAttributeDateTime", alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeMoment getLastUpdateDate(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeMoment)this.attributeFactory("lastUpdateDate", "com.terraframe.mojo.system.metadata.MdAttributeDateTime", alias, displayLabel);

  }
  public com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy()
  {
    return getLastUpdatedBy(null);

  }
 
  public com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias)
  {
    return (com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF)this.attributeFactory("lastUpdatedBy", "com.terraframe.mojo.system.metadata.MdAttributeReference", alias, null);

  }
 
  public com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF)this.attributeFactory("lastUpdatedBy", "com.terraframe.mojo.system.metadata.MdAttributeReference", alias, displayLabel);

  }
  public com.terraframe.mojo.system.UsersQuery.UsersQueryReferenceIF getLockedBy()
  {
    return getLockedBy(null);

  }
 
  public com.terraframe.mojo.system.UsersQuery.UsersQueryReferenceIF getLockedBy(String alias)
  {
    return (com.terraframe.mojo.system.UsersQuery.UsersQueryReferenceIF)this.attributeFactory("lockedBy", "com.terraframe.mojo.system.metadata.MdAttributeReference", alias, null);

  }
 
  public com.terraframe.mojo.system.UsersQuery.UsersQueryReferenceIF getLockedBy(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.system.UsersQuery.UsersQueryReferenceIF)this.attributeFactory("lockedBy", "com.terraframe.mojo.system.metadata.MdAttributeReference", alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeChar getName()
  {
    return getName(null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getName(String alias)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.attributeFactory("name", "com.terraframe.mojo.system.metadata.MdAttributeCharacter", alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getName(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.attributeFactory("name", "com.terraframe.mojo.system.metadata.MdAttributeCharacter", alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeChar getNamespace()
  {
    return getNamespace(null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getNamespace(String alias)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.attributeFactory("namespace", "com.terraframe.mojo.system.metadata.MdAttributeCharacter", alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getNamespace(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.attributeFactory("namespace", "com.terraframe.mojo.system.metadata.MdAttributeCharacter", alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeBoolean getObsolete()
  {
    return getObsolete(null);

  }
 
  public com.terraframe.mojo.query.AttributeBoolean getObsolete(String alias)
  {
    return (com.terraframe.mojo.query.AttributeBoolean)this.attributeFactory("obsolete", "com.terraframe.mojo.system.metadata.MdAttributeBoolean", alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeBoolean getObsolete(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeBoolean)this.attributeFactory("obsolete", "com.terraframe.mojo.system.metadata.MdAttributeBoolean", alias, displayLabel);

  }
  public dss.vector.solutions.ontology.OntologyQuery.OntologyQueryReferenceIF getOntology()
  {
    return getOntology(null);

  }
 
  public dss.vector.solutions.ontology.OntologyQuery.OntologyQueryReferenceIF getOntology(String alias)
  {
    return (dss.vector.solutions.ontology.OntologyQuery.OntologyQueryReferenceIF)this.attributeFactory("ontology", "com.terraframe.mojo.system.metadata.MdAttributeReference", alias, null);

  }
 
  public dss.vector.solutions.ontology.OntologyQuery.OntologyQueryReferenceIF getOntology(String alias, String displayLabel)
  {
    return (dss.vector.solutions.ontology.OntologyQuery.OntologyQueryReferenceIF)this.attributeFactory("ontology", "com.terraframe.mojo.system.metadata.MdAttributeReference", alias, displayLabel);

  }
  public com.terraframe.mojo.system.ActorQuery.ActorQueryReferenceIF getOwner()
  {
    return getOwner(null);

  }
 
  public com.terraframe.mojo.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias)
  {
    return (com.terraframe.mojo.system.ActorQuery.ActorQueryReferenceIF)this.attributeFactory("owner", "com.terraframe.mojo.system.metadata.MdAttributeReference", alias, null);

  }
 
  public com.terraframe.mojo.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.system.ActorQuery.ActorQueryReferenceIF)this.attributeFactory("owner", "com.terraframe.mojo.system.metadata.MdAttributeReference", alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeLong getSeq()
  {
    return getSeq(null);

  }
 
  public com.terraframe.mojo.query.AttributeLong getSeq(String alias)
  {
    return (com.terraframe.mojo.query.AttributeLong)this.attributeFactory("seq", "com.terraframe.mojo.system.metadata.MdAttributeLong", alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeLong getSeq(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeLong)this.attributeFactory("seq", "com.terraframe.mojo.system.metadata.MdAttributeLong", alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeChar getSiteMaster()
  {
    return getSiteMaster(null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getSiteMaster(String alias)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.attributeFactory("siteMaster", "com.terraframe.mojo.system.metadata.MdAttributeCharacter", alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getSiteMaster(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.attributeFactory("siteMaster", "com.terraframe.mojo.system.metadata.MdAttributeCharacter", alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeChar getTermId()
  {
    return getTermId(null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getTermId(String alias)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.attributeFactory("termId", "com.terraframe.mojo.system.metadata.MdAttributeCharacter", alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getTermId(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.attributeFactory("termId", "com.terraframe.mojo.system.metadata.MdAttributeCharacter", alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeChar getType()
  {
    return getType(null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getType(String alias)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.attributeFactory("type", "com.terraframe.mojo.system.metadata.MdAttributeCharacter", alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getType(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.attributeFactory("type", "com.terraframe.mojo.system.metadata.MdAttributeCharacter", alias, displayLabel);

  }

  public com.terraframe.mojo.query.Condition childTerm()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.ontology.TermRelationship.CLASS);

    return this.isParentIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition childTerm(dss.vector.solutions.ontology.TermQuery termQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.ontology.TermRelationship.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(termQuery));

    return this.isParentIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition childTerm(dss.vector.solutions.ontology.TermQuery termQuery, dss.vector.solutions.ontology.TermRelationshipQuery termRelationshipQuery)
  {
    termRelationshipQuery.AND(termRelationshipQuery.hasChild(termQuery));
    return this.isParentIn(termRelationshipQuery);
  }


  public com.terraframe.mojo.query.Condition NOT_IN_childTerm()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.ontology.TermRelationship.CLASS);

    return this.isNotParentIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_childTerm(dss.vector.solutions.ontology.TermQuery termQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.ontology.TermRelationship.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(termQuery));

    return this.isNotParentIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_childTerm(dss.vector.solutions.ontology.TermQuery termQuery, dss.vector.solutions.ontology.TermRelationshipQuery termRelationshipQuery)
  {
    termRelationshipQuery.AND(termRelationshipQuery.hasChild(termQuery));
    return this.isNotParentIn(termRelationshipQuery);
  }


  public com.terraframe.mojo.query.Condition aNCVisitAggregatedIPTs()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.IPTANCVisit.CLASS);

    return this.isChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition aNCVisitAggregatedIPTs(dss.vector.solutions.intervention.monitor.AggregatedIPTQuery aggregatedIPTQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.IPTANCVisit.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(aggregatedIPTQuery));

    return this.isChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition aNCVisitAggregatedIPTs(dss.vector.solutions.intervention.monitor.AggregatedIPTQuery aggregatedIPTQuery, dss.vector.solutions.intervention.monitor.IPTANCVisitQuery iPTANCVisitQuery)
  {
    iPTANCVisitQuery.AND(iPTANCVisitQuery.hasParent(aggregatedIPTQuery));
    return this.isChildIn(iPTANCVisitQuery);
  }


  public com.terraframe.mojo.query.Condition aggregatedITNsWithNets()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.ITNNet.CLASS);

    return this.isChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition aggregatedITNsWithNets(dss.vector.solutions.intervention.monitor.ITNDataQuery iTNDataQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.ITNNet.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(iTNDataQuery));

    return this.isChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition aggregatedITNsWithNets(dss.vector.solutions.intervention.monitor.ITNDataQuery iTNDataQuery, dss.vector.solutions.intervention.monitor.ITNNetQuery iTNNetQuery)
  {
    iTNNetQuery.AND(iTNNetQuery.hasParent(iTNDataQuery));
    return this.isChildIn(iTNNetQuery);
  }


  public com.terraframe.mojo.query.Condition aggregatedITNsWithService()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.ITNService.CLASS);

    return this.isChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition aggregatedITNsWithService(dss.vector.solutions.intervention.monitor.ITNDataQuery iTNDataQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.ITNService.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(iTNDataQuery));

    return this.isChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition aggregatedITNsWithService(dss.vector.solutions.intervention.monitor.ITNDataQuery iTNDataQuery, dss.vector.solutions.intervention.monitor.ITNServiceQuery iTNServiceQuery)
  {
    iTNServiceQuery.AND(iTNServiceQuery.hasParent(iTNDataQuery));
    return this.isChildIn(iTNServiceQuery);
  }


  public com.terraframe.mojo.query.Condition aggregatedITNsWithTargetGroups()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.ITNTargetGroup.CLASS);

    return this.isChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition aggregatedITNsWithTargetGroups(dss.vector.solutions.intervention.monitor.ITNDataQuery iTNDataQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.ITNTargetGroup.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(iTNDataQuery));

    return this.isChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition aggregatedITNsWithTargetGroups(dss.vector.solutions.intervention.monitor.ITNDataQuery iTNDataQuery, dss.vector.solutions.intervention.monitor.ITNTargetGroupQuery iTNTargetGroupQuery)
  {
    iTNTargetGroupQuery.AND(iTNTargetGroupQuery.hasParent(iTNDataQuery));
    return this.isChildIn(iTNTargetGroupQuery);
  }


  public com.terraframe.mojo.query.Condition diagnosticAggregatedCases()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.surveillance.CaseDiagnostic.CLASS);

    return this.isChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition diagnosticAggregatedCases(dss.vector.solutions.surveillance.AggregatedCaseQuery aggregatedCaseQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.surveillance.CaseDiagnostic.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(aggregatedCaseQuery));

    return this.isChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition diagnosticAggregatedCases(dss.vector.solutions.surveillance.AggregatedCaseQuery aggregatedCaseQuery, dss.vector.solutions.surveillance.CaseDiagnosticQuery caseDiagnosticQuery)
  {
    caseDiagnosticQuery.AND(caseDiagnosticQuery.hasParent(aggregatedCaseQuery));
    return this.isChildIn(caseDiagnosticQuery);
  }


  public com.terraframe.mojo.query.Condition doseAggregatedIPTs()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.IPTDose.CLASS);

    return this.isChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition doseAggregatedIPTs(dss.vector.solutions.intervention.monitor.AggregatedIPTQuery aggregatedIPTQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.IPTDose.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(aggregatedIPTQuery));

    return this.isChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition doseAggregatedIPTs(dss.vector.solutions.intervention.monitor.AggregatedIPTQuery aggregatedIPTQuery, dss.vector.solutions.intervention.monitor.IPTDoseQuery iPTDoseQuery)
  {
    iPTDoseQuery.AND(iPTDoseQuery.hasParent(aggregatedIPTQuery));
    return this.isChildIn(iPTDoseQuery);
  }


  public com.terraframe.mojo.query.Condition iTNCommunityDistributionsWithNets()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.ITNCommunityNet.CLASS);

    return this.isChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition iTNCommunityDistributionsWithNets(dss.vector.solutions.intervention.monitor.ITNCommunityDistributionQuery iTNCommunityDistributionQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.ITNCommunityNet.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(iTNCommunityDistributionQuery));

    return this.isChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition iTNCommunityDistributionsWithNets(dss.vector.solutions.intervention.monitor.ITNCommunityDistributionQuery iTNCommunityDistributionQuery, dss.vector.solutions.intervention.monitor.ITNCommunityNetQuery iTNCommunityNetQuery)
  {
    iTNCommunityNetQuery.AND(iTNCommunityNetQuery.hasParent(iTNCommunityDistributionQuery));
    return this.isChildIn(iTNCommunityNetQuery);
  }


  public com.terraframe.mojo.query.Condition iTNCommunityDistributionsWithTargetGroups()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.ITNCommunityTargetGroup.CLASS);

    return this.isChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition iTNCommunityDistributionsWithTargetGroups(dss.vector.solutions.intervention.monitor.ITNCommunityDistributionQuery iTNCommunityDistributionQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.ITNCommunityTargetGroup.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(iTNCommunityDistributionQuery));

    return this.isChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition iTNCommunityDistributionsWithTargetGroups(dss.vector.solutions.intervention.monitor.ITNCommunityDistributionQuery iTNCommunityDistributionQuery, dss.vector.solutions.intervention.monitor.ITNCommunityTargetGroupQuery iTNCommunityTargetGroupQuery)
  {
    iTNCommunityTargetGroupQuery.AND(iTNCommunityTargetGroupQuery.hasParent(iTNCommunityDistributionQuery));
    return this.isChildIn(iTNCommunityTargetGroupQuery);
  }


  public com.terraframe.mojo.query.Condition iTNFacilityDistributionsWithNets()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.ITNDistributionTargetGroup.CLASS);

    return this.isChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition iTNFacilityDistributionsWithNets(dss.vector.solutions.intervention.monitor.ITNDistributionQuery iTNDistributionQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.ITNDistributionTargetGroup.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(iTNDistributionQuery));

    return this.isChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition iTNFacilityDistributionsWithNets(dss.vector.solutions.intervention.monitor.ITNDistributionQuery iTNDistributionQuery, dss.vector.solutions.intervention.monitor.ITNDistributionTargetGroupQuery iTNDistributionTargetGroupQuery)
  {
    iTNDistributionTargetGroupQuery.AND(iTNDistributionTargetGroupQuery.hasParent(iTNDistributionQuery));
    return this.isChildIn(iTNDistributionTargetGroupQuery);
  }


  public com.terraframe.mojo.query.Condition individualInstance()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.surveillance.IndividualCaseSymptom.CLASS);

    return this.isChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition individualInstance(dss.vector.solutions.intervention.monitor.IndividualInstanceQuery individualInstanceQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.surveillance.IndividualCaseSymptom.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(individualInstanceQuery));

    return this.isChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition individualInstance(dss.vector.solutions.intervention.monitor.IndividualInstanceQuery individualInstanceQuery, dss.vector.solutions.surveillance.IndividualCaseSymptomQuery individualCaseSymptomQuery)
  {
    individualCaseSymptomQuery.AND(individualCaseSymptomQuery.hasParent(individualInstanceQuery));
    return this.isChildIn(individualCaseSymptomQuery);
  }


  public com.terraframe.mojo.query.Condition parentTerm()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.ontology.TermRelationship.CLASS);

    return this.isChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition parentTerm(dss.vector.solutions.ontology.TermQuery termQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.ontology.TermRelationship.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(termQuery));

    return this.isChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition parentTerm(dss.vector.solutions.ontology.TermQuery termQuery, dss.vector.solutions.ontology.TermRelationshipQuery termRelationshipQuery)
  {
    termRelationshipQuery.AND(termRelationshipQuery.hasParent(termQuery));
    return this.isChildIn(termRelationshipQuery);
  }


  public com.terraframe.mojo.query.Condition patientAggregatedIPTs()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.IPTPatients.CLASS);

    return this.isChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition patientAggregatedIPTs(dss.vector.solutions.intervention.monitor.AggregatedIPTQuery aggregatedIPTQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.IPTPatients.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(aggregatedIPTQuery));

    return this.isChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition patientAggregatedIPTs(dss.vector.solutions.intervention.monitor.AggregatedIPTQuery aggregatedIPTQuery, dss.vector.solutions.intervention.monitor.IPTPatientsQuery iPTPatientsQuery)
  {
    iPTPatientsQuery.AND(iPTPatientsQuery.hasParent(aggregatedIPTQuery));
    return this.isChildIn(iPTPatientsQuery);
  }


  public com.terraframe.mojo.query.Condition personsWithTreatmentLocations()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.SurveyedPersonTreatmentLocation.CLASS);

    return this.isChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition personsWithTreatmentLocations(dss.vector.solutions.intervention.monitor.SurveyedPersonQuery surveyedPersonQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.SurveyedPersonTreatmentLocation.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(surveyedPersonQuery));

    return this.isChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition personsWithTreatmentLocations(dss.vector.solutions.intervention.monitor.SurveyedPersonQuery surveyedPersonQuery, dss.vector.solutions.intervention.monitor.SurveyedPersonTreatmentLocationQuery surveyedPersonTreatmentLocationQuery)
  {
    surveyedPersonTreatmentLocationQuery.AND(surveyedPersonTreatmentLocationQuery.hasParent(surveyedPersonQuery));
    return this.isChildIn(surveyedPersonTreatmentLocationQuery);
  }


  public com.terraframe.mojo.query.Condition personsWithTreatments()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.SurveyedPersonTreatment.CLASS);

    return this.isChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition personsWithTreatments(dss.vector.solutions.intervention.monitor.SurveyedPersonQuery surveyedPersonQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.SurveyedPersonTreatment.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(surveyedPersonQuery));

    return this.isChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition personsWithTreatments(dss.vector.solutions.intervention.monitor.SurveyedPersonQuery surveyedPersonQuery, dss.vector.solutions.intervention.monitor.SurveyedPersonTreatmentQuery surveyedPersonTreatmentQuery)
  {
    surveyedPersonTreatmentQuery.AND(surveyedPersonTreatmentQuery.hasParent(surveyedPersonQuery));
    return this.isChildIn(surveyedPersonTreatmentQuery);
  }


  public com.terraframe.mojo.query.Condition referralAggregatedCase()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.surveillance.CaseReferral.CLASS);

    return this.isChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition referralAggregatedCase(dss.vector.solutions.surveillance.AggregatedCaseQuery aggregatedCaseQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.surveillance.CaseReferral.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(aggregatedCaseQuery));

    return this.isChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition referralAggregatedCase(dss.vector.solutions.surveillance.AggregatedCaseQuery aggregatedCaseQuery, dss.vector.solutions.surveillance.CaseReferralQuery caseReferralQuery)
  {
    caseReferralQuery.AND(caseReferralQuery.hasParent(aggregatedCaseQuery));
    return this.isChildIn(caseReferralQuery);
  }


  public com.terraframe.mojo.query.Condition stockAggregatedCases()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.surveillance.CaseTreatmentStock.CLASS);

    return this.isChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition stockAggregatedCases(dss.vector.solutions.surveillance.AggregatedCaseQuery aggregatedCaseQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.surveillance.CaseTreatmentStock.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(aggregatedCaseQuery));

    return this.isChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition stockAggregatedCases(dss.vector.solutions.surveillance.AggregatedCaseQuery aggregatedCaseQuery, dss.vector.solutions.surveillance.CaseTreatmentStockQuery caseTreatmentStockQuery)
  {
    caseTreatmentStockQuery.AND(caseTreatmentStockQuery.hasParent(aggregatedCaseQuery));
    return this.isChildIn(caseTreatmentStockQuery);
  }


  public com.terraframe.mojo.query.Condition treatmentAggregatedCases()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.surveillance.CaseTreatment.CLASS);

    return this.isChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition treatmentAggregatedCases(dss.vector.solutions.surveillance.AggregatedCaseQuery aggregatedCaseQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.surveillance.CaseTreatment.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(aggregatedCaseQuery));

    return this.isChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition treatmentAggregatedCases(dss.vector.solutions.surveillance.AggregatedCaseQuery aggregatedCaseQuery, dss.vector.solutions.surveillance.CaseTreatmentQuery caseTreatmentQuery)
  {
    caseTreatmentQuery.AND(caseTreatmentQuery.hasParent(aggregatedCaseQuery));
    return this.isChildIn(caseTreatmentQuery);
  }


  public com.terraframe.mojo.query.Condition treatmentAggregatedIPTs()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.IPTTreatment.CLASS);

    return this.isChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition treatmentAggregatedIPTs(dss.vector.solutions.intervention.monitor.AggregatedIPTQuery aggregatedIPTQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.IPTTreatment.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(aggregatedIPTQuery));

    return this.isChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition treatmentAggregatedIPTs(dss.vector.solutions.intervention.monitor.AggregatedIPTQuery aggregatedIPTQuery, dss.vector.solutions.intervention.monitor.IPTTreatmentQuery iPTTreatmentQuery)
  {
    iPTTreatmentQuery.AND(iPTTreatmentQuery.hasParent(aggregatedIPTQuery));
    return this.isChildIn(iPTTreatmentQuery);
  }


  public com.terraframe.mojo.query.Condition treatmentMethodAggregatedCase()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.surveillance.CaseTreatmentMethod.CLASS);

    return this.isChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition treatmentMethodAggregatedCase(dss.vector.solutions.surveillance.AggregatedCaseQuery aggregatedCaseQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.surveillance.CaseTreatmentMethod.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(aggregatedCaseQuery));

    return this.isChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition treatmentMethodAggregatedCase(dss.vector.solutions.surveillance.AggregatedCaseQuery aggregatedCaseQuery, dss.vector.solutions.surveillance.CaseTreatmentMethodQuery caseTreatmentMethodQuery)
  {
    caseTreatmentMethodQuery.AND(caseTreatmentMethodQuery.hasParent(aggregatedCaseQuery));
    return this.isChildIn(caseTreatmentMethodQuery);
  }


  public com.terraframe.mojo.query.Condition NOT_IN_aNCVisitAggregatedIPTs()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.IPTANCVisit.CLASS);

    return this.isNotChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_aNCVisitAggregatedIPTs(dss.vector.solutions.intervention.monitor.AggregatedIPTQuery aggregatedIPTQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.IPTANCVisit.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(aggregatedIPTQuery));

    return this.isNotChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_aNCVisitAggregatedIPTs(dss.vector.solutions.intervention.monitor.AggregatedIPTQuery aggregatedIPTQuery, dss.vector.solutions.intervention.monitor.IPTANCVisitQuery iPTANCVisitQuery)
  {
    iPTANCVisitQuery.AND(iPTANCVisitQuery.hasParent(aggregatedIPTQuery));
    return this.isNotChildIn(iPTANCVisitQuery);
  }


  public com.terraframe.mojo.query.Condition NOT_IN_aggregatedITNsWithNets()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.ITNNet.CLASS);

    return this.isNotChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_aggregatedITNsWithNets(dss.vector.solutions.intervention.monitor.ITNDataQuery iTNDataQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.ITNNet.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(iTNDataQuery));

    return this.isNotChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_aggregatedITNsWithNets(dss.vector.solutions.intervention.monitor.ITNDataQuery iTNDataQuery, dss.vector.solutions.intervention.monitor.ITNNetQuery iTNNetQuery)
  {
    iTNNetQuery.AND(iTNNetQuery.hasParent(iTNDataQuery));
    return this.isNotChildIn(iTNNetQuery);
  }


  public com.terraframe.mojo.query.Condition NOT_IN_aggregatedITNsWithService()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.ITNService.CLASS);

    return this.isNotChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_aggregatedITNsWithService(dss.vector.solutions.intervention.monitor.ITNDataQuery iTNDataQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.ITNService.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(iTNDataQuery));

    return this.isNotChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_aggregatedITNsWithService(dss.vector.solutions.intervention.monitor.ITNDataQuery iTNDataQuery, dss.vector.solutions.intervention.monitor.ITNServiceQuery iTNServiceQuery)
  {
    iTNServiceQuery.AND(iTNServiceQuery.hasParent(iTNDataQuery));
    return this.isNotChildIn(iTNServiceQuery);
  }


  public com.terraframe.mojo.query.Condition NOT_IN_aggregatedITNsWithTargetGroups()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.ITNTargetGroup.CLASS);

    return this.isNotChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_aggregatedITNsWithTargetGroups(dss.vector.solutions.intervention.monitor.ITNDataQuery iTNDataQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.ITNTargetGroup.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(iTNDataQuery));

    return this.isNotChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_aggregatedITNsWithTargetGroups(dss.vector.solutions.intervention.monitor.ITNDataQuery iTNDataQuery, dss.vector.solutions.intervention.monitor.ITNTargetGroupQuery iTNTargetGroupQuery)
  {
    iTNTargetGroupQuery.AND(iTNTargetGroupQuery.hasParent(iTNDataQuery));
    return this.isNotChildIn(iTNTargetGroupQuery);
  }


  public com.terraframe.mojo.query.Condition NOT_IN_diagnosticAggregatedCases()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.surveillance.CaseDiagnostic.CLASS);

    return this.isNotChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_diagnosticAggregatedCases(dss.vector.solutions.surveillance.AggregatedCaseQuery aggregatedCaseQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.surveillance.CaseDiagnostic.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(aggregatedCaseQuery));

    return this.isNotChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_diagnosticAggregatedCases(dss.vector.solutions.surveillance.AggregatedCaseQuery aggregatedCaseQuery, dss.vector.solutions.surveillance.CaseDiagnosticQuery caseDiagnosticQuery)
  {
    caseDiagnosticQuery.AND(caseDiagnosticQuery.hasParent(aggregatedCaseQuery));
    return this.isNotChildIn(caseDiagnosticQuery);
  }


  public com.terraframe.mojo.query.Condition NOT_IN_doseAggregatedIPTs()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.IPTDose.CLASS);

    return this.isNotChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_doseAggregatedIPTs(dss.vector.solutions.intervention.monitor.AggregatedIPTQuery aggregatedIPTQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.IPTDose.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(aggregatedIPTQuery));

    return this.isNotChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_doseAggregatedIPTs(dss.vector.solutions.intervention.monitor.AggregatedIPTQuery aggregatedIPTQuery, dss.vector.solutions.intervention.monitor.IPTDoseQuery iPTDoseQuery)
  {
    iPTDoseQuery.AND(iPTDoseQuery.hasParent(aggregatedIPTQuery));
    return this.isNotChildIn(iPTDoseQuery);
  }


  public com.terraframe.mojo.query.Condition NOT_IN_iTNCommunityDistributionsWithNets()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.ITNCommunityNet.CLASS);

    return this.isNotChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_iTNCommunityDistributionsWithNets(dss.vector.solutions.intervention.monitor.ITNCommunityDistributionQuery iTNCommunityDistributionQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.ITNCommunityNet.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(iTNCommunityDistributionQuery));

    return this.isNotChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_iTNCommunityDistributionsWithNets(dss.vector.solutions.intervention.monitor.ITNCommunityDistributionQuery iTNCommunityDistributionQuery, dss.vector.solutions.intervention.monitor.ITNCommunityNetQuery iTNCommunityNetQuery)
  {
    iTNCommunityNetQuery.AND(iTNCommunityNetQuery.hasParent(iTNCommunityDistributionQuery));
    return this.isNotChildIn(iTNCommunityNetQuery);
  }


  public com.terraframe.mojo.query.Condition NOT_IN_iTNCommunityDistributionsWithTargetGroups()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.ITNCommunityTargetGroup.CLASS);

    return this.isNotChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_iTNCommunityDistributionsWithTargetGroups(dss.vector.solutions.intervention.monitor.ITNCommunityDistributionQuery iTNCommunityDistributionQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.ITNCommunityTargetGroup.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(iTNCommunityDistributionQuery));

    return this.isNotChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_iTNCommunityDistributionsWithTargetGroups(dss.vector.solutions.intervention.monitor.ITNCommunityDistributionQuery iTNCommunityDistributionQuery, dss.vector.solutions.intervention.monitor.ITNCommunityTargetGroupQuery iTNCommunityTargetGroupQuery)
  {
    iTNCommunityTargetGroupQuery.AND(iTNCommunityTargetGroupQuery.hasParent(iTNCommunityDistributionQuery));
    return this.isNotChildIn(iTNCommunityTargetGroupQuery);
  }


  public com.terraframe.mojo.query.Condition NOT_IN_iTNFacilityDistributionsWithNets()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.ITNDistributionTargetGroup.CLASS);

    return this.isNotChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_iTNFacilityDistributionsWithNets(dss.vector.solutions.intervention.monitor.ITNDistributionQuery iTNDistributionQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.ITNDistributionTargetGroup.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(iTNDistributionQuery));

    return this.isNotChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_iTNFacilityDistributionsWithNets(dss.vector.solutions.intervention.monitor.ITNDistributionQuery iTNDistributionQuery, dss.vector.solutions.intervention.monitor.ITNDistributionTargetGroupQuery iTNDistributionTargetGroupQuery)
  {
    iTNDistributionTargetGroupQuery.AND(iTNDistributionTargetGroupQuery.hasParent(iTNDistributionQuery));
    return this.isNotChildIn(iTNDistributionTargetGroupQuery);
  }


  public com.terraframe.mojo.query.Condition NOT_IN_individualInstance()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.surveillance.IndividualCaseSymptom.CLASS);

    return this.isNotChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_individualInstance(dss.vector.solutions.intervention.monitor.IndividualInstanceQuery individualInstanceQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.surveillance.IndividualCaseSymptom.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(individualInstanceQuery));

    return this.isNotChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_individualInstance(dss.vector.solutions.intervention.monitor.IndividualInstanceQuery individualInstanceQuery, dss.vector.solutions.surveillance.IndividualCaseSymptomQuery individualCaseSymptomQuery)
  {
    individualCaseSymptomQuery.AND(individualCaseSymptomQuery.hasParent(individualInstanceQuery));
    return this.isNotChildIn(individualCaseSymptomQuery);
  }


  public com.terraframe.mojo.query.Condition NOT_IN_parentTerm()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.ontology.TermRelationship.CLASS);

    return this.isNotChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_parentTerm(dss.vector.solutions.ontology.TermQuery termQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.ontology.TermRelationship.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(termQuery));

    return this.isNotChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_parentTerm(dss.vector.solutions.ontology.TermQuery termQuery, dss.vector.solutions.ontology.TermRelationshipQuery termRelationshipQuery)
  {
    termRelationshipQuery.AND(termRelationshipQuery.hasParent(termQuery));
    return this.isNotChildIn(termRelationshipQuery);
  }


  public com.terraframe.mojo.query.Condition NOT_IN_patientAggregatedIPTs()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.IPTPatients.CLASS);

    return this.isNotChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_patientAggregatedIPTs(dss.vector.solutions.intervention.monitor.AggregatedIPTQuery aggregatedIPTQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.IPTPatients.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(aggregatedIPTQuery));

    return this.isNotChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_patientAggregatedIPTs(dss.vector.solutions.intervention.monitor.AggregatedIPTQuery aggregatedIPTQuery, dss.vector.solutions.intervention.monitor.IPTPatientsQuery iPTPatientsQuery)
  {
    iPTPatientsQuery.AND(iPTPatientsQuery.hasParent(aggregatedIPTQuery));
    return this.isNotChildIn(iPTPatientsQuery);
  }


  public com.terraframe.mojo.query.Condition NOT_IN_personsWithTreatmentLocations()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.SurveyedPersonTreatmentLocation.CLASS);

    return this.isNotChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_personsWithTreatmentLocations(dss.vector.solutions.intervention.monitor.SurveyedPersonQuery surveyedPersonQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.SurveyedPersonTreatmentLocation.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(surveyedPersonQuery));

    return this.isNotChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_personsWithTreatmentLocations(dss.vector.solutions.intervention.monitor.SurveyedPersonQuery surveyedPersonQuery, dss.vector.solutions.intervention.monitor.SurveyedPersonTreatmentLocationQuery surveyedPersonTreatmentLocationQuery)
  {
    surveyedPersonTreatmentLocationQuery.AND(surveyedPersonTreatmentLocationQuery.hasParent(surveyedPersonQuery));
    return this.isNotChildIn(surveyedPersonTreatmentLocationQuery);
  }


  public com.terraframe.mojo.query.Condition NOT_IN_personsWithTreatments()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.SurveyedPersonTreatment.CLASS);

    return this.isNotChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_personsWithTreatments(dss.vector.solutions.intervention.monitor.SurveyedPersonQuery surveyedPersonQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.SurveyedPersonTreatment.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(surveyedPersonQuery));

    return this.isNotChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_personsWithTreatments(dss.vector.solutions.intervention.monitor.SurveyedPersonQuery surveyedPersonQuery, dss.vector.solutions.intervention.monitor.SurveyedPersonTreatmentQuery surveyedPersonTreatmentQuery)
  {
    surveyedPersonTreatmentQuery.AND(surveyedPersonTreatmentQuery.hasParent(surveyedPersonQuery));
    return this.isNotChildIn(surveyedPersonTreatmentQuery);
  }


  public com.terraframe.mojo.query.Condition NOT_IN_referralAggregatedCase()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.surveillance.CaseReferral.CLASS);

    return this.isNotChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_referralAggregatedCase(dss.vector.solutions.surveillance.AggregatedCaseQuery aggregatedCaseQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.surveillance.CaseReferral.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(aggregatedCaseQuery));

    return this.isNotChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_referralAggregatedCase(dss.vector.solutions.surveillance.AggregatedCaseQuery aggregatedCaseQuery, dss.vector.solutions.surveillance.CaseReferralQuery caseReferralQuery)
  {
    caseReferralQuery.AND(caseReferralQuery.hasParent(aggregatedCaseQuery));
    return this.isNotChildIn(caseReferralQuery);
  }


  public com.terraframe.mojo.query.Condition NOT_IN_stockAggregatedCases()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.surveillance.CaseTreatmentStock.CLASS);

    return this.isNotChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_stockAggregatedCases(dss.vector.solutions.surveillance.AggregatedCaseQuery aggregatedCaseQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.surveillance.CaseTreatmentStock.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(aggregatedCaseQuery));

    return this.isNotChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_stockAggregatedCases(dss.vector.solutions.surveillance.AggregatedCaseQuery aggregatedCaseQuery, dss.vector.solutions.surveillance.CaseTreatmentStockQuery caseTreatmentStockQuery)
  {
    caseTreatmentStockQuery.AND(caseTreatmentStockQuery.hasParent(aggregatedCaseQuery));
    return this.isNotChildIn(caseTreatmentStockQuery);
  }


  public com.terraframe.mojo.query.Condition NOT_IN_treatmentAggregatedCases()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.surveillance.CaseTreatment.CLASS);

    return this.isNotChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_treatmentAggregatedCases(dss.vector.solutions.surveillance.AggregatedCaseQuery aggregatedCaseQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.surveillance.CaseTreatment.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(aggregatedCaseQuery));

    return this.isNotChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_treatmentAggregatedCases(dss.vector.solutions.surveillance.AggregatedCaseQuery aggregatedCaseQuery, dss.vector.solutions.surveillance.CaseTreatmentQuery caseTreatmentQuery)
  {
    caseTreatmentQuery.AND(caseTreatmentQuery.hasParent(aggregatedCaseQuery));
    return this.isNotChildIn(caseTreatmentQuery);
  }


  public com.terraframe.mojo.query.Condition NOT_IN_treatmentAggregatedIPTs()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.IPTTreatment.CLASS);

    return this.isNotChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_treatmentAggregatedIPTs(dss.vector.solutions.intervention.monitor.AggregatedIPTQuery aggregatedIPTQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.IPTTreatment.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(aggregatedIPTQuery));

    return this.isNotChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_treatmentAggregatedIPTs(dss.vector.solutions.intervention.monitor.AggregatedIPTQuery aggregatedIPTQuery, dss.vector.solutions.intervention.monitor.IPTTreatmentQuery iPTTreatmentQuery)
  {
    iPTTreatmentQuery.AND(iPTTreatmentQuery.hasParent(aggregatedIPTQuery));
    return this.isNotChildIn(iPTTreatmentQuery);
  }


  public com.terraframe.mojo.query.Condition NOT_IN_treatmentMethodAggregatedCase()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.surveillance.CaseTreatmentMethod.CLASS);

    return this.isNotChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_treatmentMethodAggregatedCase(dss.vector.solutions.surveillance.AggregatedCaseQuery aggregatedCaseQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.surveillance.CaseTreatmentMethod.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(aggregatedCaseQuery));

    return this.isNotChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_treatmentMethodAggregatedCase(dss.vector.solutions.surveillance.AggregatedCaseQuery aggregatedCaseQuery, dss.vector.solutions.surveillance.CaseTreatmentMethodQuery caseTreatmentMethodQuery)
  {
    caseTreatmentMethodQuery.AND(caseTreatmentMethodQuery.hasParent(aggregatedCaseQuery));
    return this.isNotChildIn(caseTreatmentMethodQuery);
  }

  protected com.terraframe.mojo.query.AttributeReference referenceFactory( com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  com.terraframe.mojo.dataaccess.MdBusinessDAOIF referenceMdBusinessIF, String referenceTableAlias, com.terraframe.mojo.query.ComponentQuery rootQuery, java.util.Set<com.terraframe.mojo.query.Join> tableJoinSet, String userDefinedAlias, String userDefinedDisplayLabel)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals("createdBy")) 
    {
       return new com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReference((com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals("entityDomain")) 
    {
       return new com.terraframe.mojo.system.metadata.MdDomainQuery.MdDomainQueryReference((com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals("lastUpdatedBy")) 
    {
       return new com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReference((com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals("lockedBy")) 
    {
       return new com.terraframe.mojo.system.UsersQuery.UsersQueryReference((com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals("ontology")) 
    {
       return new dss.vector.solutions.ontology.OntologyQuery.OntologyQueryReference((com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals("owner")) 
    {
       return new com.terraframe.mojo.system.ActorQuery.ActorQueryReference((com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else 
    {
      String error = "Attribute type ["+mdAttributeIF.getType()+"] is invalid.";
      throw new com.terraframe.mojo.query.QueryException(error);
    }
  }

  }
}
