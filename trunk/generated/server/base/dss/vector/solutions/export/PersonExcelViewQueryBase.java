package dss.vector.solutions.export;

@com.runwaysdk.business.ClassSignature(hash = -931259702)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to PersonExcelView.java
 *
 * @author Autogenerated by RunwaySDK
 */
public  abstract  class PersonExcelViewQueryBase extends com.runwaysdk.query.GeneratedViewQuery
 implements com.runwaysdk.generation.loader.Reloadable
{
private static final long serialVersionUID = -931259702;

  public PersonExcelViewQueryBase(com.runwaysdk.query.QueryFactory componentQueryFactory)
  {
    super(componentQueryFactory);
  }

  public PersonExcelViewQueryBase(com.runwaysdk.query.QueryFactory componentQueryFactory, com.runwaysdk.query.ViewQueryBuilder viewQueryBuilder)
  {
    super(componentQueryFactory, viewQueryBuilder);
  }
  public String getClassType()
  {
    return dss.vector.solutions.export.PersonExcelView.CLASS;
  }
  public com.runwaysdk.query.SelectableMoment getDateOfBirth()
  {
    return getDateOfBirth(null);

  }
 
  public com.runwaysdk.query.SelectableMoment getDateOfBirth(String alias)
  {
    return (com.runwaysdk.query.SelectableMoment)this.getSelectable(dss.vector.solutions.export.PersonExcelView.DATEOFBIRTH, alias, null);

  }
 
  public com.runwaysdk.query.SelectableMoment getDateOfBirth(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableMoment)this.getSelectable(dss.vector.solutions.export.PersonExcelView.DATEOFBIRTH, alias, displayLabel);

  }
 
  public com.runwaysdk.query.SelectableChar getDisease()
  {
    return getDisease(null);

  }
 
  public com.runwaysdk.query.SelectableChar getDisease(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getSelectable(dss.vector.solutions.export.PersonExcelView.DISEASE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getDisease(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getSelectable(dss.vector.solutions.export.PersonExcelView.DISEASE, alias, displayLabel);

  }
 
  public com.runwaysdk.query.SelectableChar getFirstName()
  {
    return getFirstName(null);

  }
 
  public com.runwaysdk.query.SelectableChar getFirstName(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getSelectable(dss.vector.solutions.export.PersonExcelView.FIRSTNAME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getFirstName(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getSelectable(dss.vector.solutions.export.PersonExcelView.FIRSTNAME, alias, displayLabel);

  }
 
  public com.runwaysdk.query.SelectableChar getId()
  {
    return getId(null);

  }
 
  public com.runwaysdk.query.SelectableChar getId(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getSelectable(dss.vector.solutions.export.PersonExcelView.ID, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getId(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getSelectable(dss.vector.solutions.export.PersonExcelView.ID, alias, displayLabel);

  }
 
  public com.runwaysdk.query.SelectableBoolean getIsIPTRecipient()
  {
    return getIsIPTRecipient(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getIsIPTRecipient(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getSelectable(dss.vector.solutions.export.PersonExcelView.ISIPTRECIPIENT, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getIsIPTRecipient(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getSelectable(dss.vector.solutions.export.PersonExcelView.ISIPTRECIPIENT, alias, displayLabel);

  }
 
  public com.runwaysdk.query.SelectableBoolean getIsITNRecipient()
  {
    return getIsITNRecipient(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getIsITNRecipient(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getSelectable(dss.vector.solutions.export.PersonExcelView.ISITNRECIPIENT, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getIsITNRecipient(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getSelectable(dss.vector.solutions.export.PersonExcelView.ISITNRECIPIENT, alias, displayLabel);

  }
 
  public com.runwaysdk.query.SelectableBoolean getIsMDSSUser()
  {
    return getIsMDSSUser(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getIsMDSSUser(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getSelectable(dss.vector.solutions.export.PersonExcelView.ISMDSSUSER, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getIsMDSSUser(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getSelectable(dss.vector.solutions.export.PersonExcelView.ISMDSSUSER, alias, displayLabel);

  }
 
  public com.runwaysdk.query.SelectableBoolean getIsPatient()
  {
    return getIsPatient(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getIsPatient(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getSelectable(dss.vector.solutions.export.PersonExcelView.ISPATIENT, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getIsPatient(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getSelectable(dss.vector.solutions.export.PersonExcelView.ISPATIENT, alias, displayLabel);

  }
 
  public com.runwaysdk.query.SelectableBoolean getIsSprayLeader()
  {
    return getIsSprayLeader(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getIsSprayLeader(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getSelectable(dss.vector.solutions.export.PersonExcelView.ISSPRAYLEADER, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getIsSprayLeader(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getSelectable(dss.vector.solutions.export.PersonExcelView.ISSPRAYLEADER, alias, displayLabel);

  }
 
  public com.runwaysdk.query.SelectableBoolean getIsSprayOperator()
  {
    return getIsSprayOperator(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getIsSprayOperator(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getSelectable(dss.vector.solutions.export.PersonExcelView.ISSPRAYOPERATOR, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getIsSprayOperator(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getSelectable(dss.vector.solutions.export.PersonExcelView.ISSPRAYOPERATOR, alias, displayLabel);

  }
 
  public com.runwaysdk.query.SelectableBoolean getIsStockStaff()
  {
    return getIsStockStaff(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getIsStockStaff(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getSelectable(dss.vector.solutions.export.PersonExcelView.ISSTOCKSTAFF, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getIsStockStaff(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getSelectable(dss.vector.solutions.export.PersonExcelView.ISSTOCKSTAFF, alias, displayLabel);

  }
 
  public com.runwaysdk.query.SelectableBoolean getIsSupervisor()
  {
    return getIsSupervisor(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getIsSupervisor(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getSelectable(dss.vector.solutions.export.PersonExcelView.ISSUPERVISOR, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getIsSupervisor(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getSelectable(dss.vector.solutions.export.PersonExcelView.ISSUPERVISOR, alias, displayLabel);

  }
 
  public com.runwaysdk.query.SelectableChar getLastName()
  {
    return getLastName(null);

  }
 
  public com.runwaysdk.query.SelectableChar getLastName(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getSelectable(dss.vector.solutions.export.PersonExcelView.LASTNAME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getLastName(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getSelectable(dss.vector.solutions.export.PersonExcelView.LASTNAME, alias, displayLabel);

  }
 
  public com.runwaysdk.query.SelectableChar getMemberId()
  {
    return getMemberId(null);

  }
 
  public com.runwaysdk.query.SelectableChar getMemberId(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getSelectable(dss.vector.solutions.export.PersonExcelView.MEMBERID, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getMemberId(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getSelectable(dss.vector.solutions.export.PersonExcelView.MEMBERID, alias, displayLabel);

  }
 
  public com.runwaysdk.query.SelectableChar getPassword()
  {
    return getPassword(null);

  }
 
  public com.runwaysdk.query.SelectableChar getPassword(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getSelectable(dss.vector.solutions.export.PersonExcelView.PASSWORD, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getPassword(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getSelectable(dss.vector.solutions.export.PersonExcelView.PASSWORD, alias, displayLabel);

  }
 
  public dss.vector.solutions.geo.generated.GeoEntityQuery.GeoEntityQueryReferenceIF getResidentialGeoEntity()
  {
    return getResidentialGeoEntity(null);

  }
 
  public dss.vector.solutions.geo.generated.GeoEntityQuery.GeoEntityQueryReferenceIF getResidentialGeoEntity(String alias)
  {

    return (dss.vector.solutions.geo.generated.GeoEntityQuery.GeoEntityQueryReferenceIF)this.getSelectable(dss.vector.solutions.export.PersonExcelView.RESIDENTIALGEOENTITY, alias, null);

  }
 
  public dss.vector.solutions.geo.generated.GeoEntityQuery.GeoEntityQueryReferenceIF getResidentialGeoEntity(String alias, String displayLabel)
  {

    return (dss.vector.solutions.geo.generated.GeoEntityQuery.GeoEntityQueryReferenceIF)this.getSelectable(dss.vector.solutions.export.PersonExcelView.RESIDENTIALGEOENTITY, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getSex()
  {
    return getSex(null);

  }
 
  public com.runwaysdk.query.SelectableChar getSex(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getSelectable(dss.vector.solutions.export.PersonExcelView.SEX, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getSex(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getSelectable(dss.vector.solutions.export.PersonExcelView.SEX, alias, displayLabel);

  }
 
  public com.runwaysdk.query.SelectableChar getUsername()
  {
    return getUsername(null);

  }
 
  public com.runwaysdk.query.SelectableChar getUsername(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getSelectable(dss.vector.solutions.export.PersonExcelView.USERNAME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getUsername(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getSelectable(dss.vector.solutions.export.PersonExcelView.USERNAME, alias, displayLabel);

  }
 
  public dss.vector.solutions.geo.generated.GeoEntityQuery.GeoEntityQueryReferenceIF getWorkGeoEntity()
  {
    return getWorkGeoEntity(null);

  }
 
  public dss.vector.solutions.geo.generated.GeoEntityQuery.GeoEntityQueryReferenceIF getWorkGeoEntity(String alias)
  {

    return (dss.vector.solutions.geo.generated.GeoEntityQuery.GeoEntityQueryReferenceIF)this.getSelectable(dss.vector.solutions.export.PersonExcelView.WORKGEOENTITY, alias, null);

  }
 
  public dss.vector.solutions.geo.generated.GeoEntityQuery.GeoEntityQueryReferenceIF getWorkGeoEntity(String alias, String displayLabel)
  {

    return (dss.vector.solutions.geo.generated.GeoEntityQuery.GeoEntityQueryReferenceIF)this.getSelectable(dss.vector.solutions.export.PersonExcelView.WORKGEOENTITY, alias, displayLabel);

  }
  /**  
   * Returns an iterator of Business objects that match the query criteria specified
   * on this query object. 
   * @return iterator of Business objects that match the query criteria specified
   * on this query object.
   */
  @java.lang.SuppressWarnings("unchecked")
  public com.runwaysdk.query.OIterator<? extends PersonExcelView> getIterator()
  {
    com.runwaysdk.query.ValueIterator valueIterator;
    if (_pageSize != null && _pageNumber != null)
    {
      valueIterator = (com.runwaysdk.query.ValueIterator<com.runwaysdk.dataaccess.ValueObject>)this.getComponentQuery().getIterator(_pageSize, _pageNumber);
    }
    else
    {
      valueIterator = (com.runwaysdk.query.ValueIterator<com.runwaysdk.dataaccess.ValueObject>)this.getComponentQuery().getIterator();
    }
    return new com.runwaysdk.query.ViewIterator<PersonExcelView>(this.getMdClassIF(), valueIterator);
  }

}
