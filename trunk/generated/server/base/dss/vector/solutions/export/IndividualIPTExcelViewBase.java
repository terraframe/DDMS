package dss.vector.solutions.export;

@com.runwaysdk.business.ClassSignature(hash = -508403163)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to IndividualIPTExcelView.java
 *
 * @author Autogenerated by RunwaySDK
 */
public abstract class IndividualIPTExcelViewBase extends com.runwaysdk.business.View implements com.runwaysdk.generation.loader.Reloadable
{
  public final static String CLASS = "dss.vector.solutions.export.IndividualIPTExcelView";
  public static java.lang.String ADMINISTRATORNAME = "administratorName";
  public static java.lang.String ADMINISTRATORSURNAME = "administratorSurname";
  public static java.lang.String DOSENUMBER = "doseNumber";
  public static java.lang.String DOSETYPE = "doseType";
  public static java.lang.String FACILITY = "facility";
  public static java.lang.String ID = "id";
  public static java.lang.String ISANCVISIT = "isANCVisit";
  public static java.lang.String NUMBEROFRECEIVEDITNS = "numberOfReceivedITNs";
  public static java.lang.String PATIENTDOB = "patientDOB";
  public static java.lang.String PATIENTFIRSTNAME = "patientFirstName";
  public static java.lang.String PATIENTLASTNAME = "patientLastName";
  public static java.lang.String PATIENTSEX = "patientSex";
  public static java.lang.String PATIENTTYPE = "patientType";
  public static java.lang.String RECEIVEDITN = "receivedITN";
  public static java.lang.String RECEIVEDSUPPLEMENT = "receivedSupplement";
  public static java.lang.String RESIDENTIALLOCATION = "residentialLocation";
  public static java.lang.String SERVICEDATE = "serviceDate";
  public static java.lang.String VISITNUMBER = "visitNumber";
  public static java.lang.String WORKGEOENTITY = "workGeoEntity";
  public static java.lang.String WORKINFORMATION = "workInformation";
  private static final long serialVersionUID = -508403163;
  
  public IndividualIPTExcelViewBase()
  {
    super();
  }
  
  public String getAdministratorName()
  {
    return getValue(ADMINISTRATORNAME);
  }
  
  public void validateAdministratorName()
  {
    this.validateAttribute(ADMINISTRATORNAME);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getAdministratorNameMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.export.IndividualIPTExcelView.CLASS);
    return mdClassIF.definesAttribute(ADMINISTRATORNAME);
  }
  
  public void setAdministratorName(String value)
  {
    if(value == null)
    {
      setValue(ADMINISTRATORNAME, "");
    }
    else
    {
      setValue(ADMINISTRATORNAME, value);
    }
  }
  
  public String getAdministratorSurname()
  {
    return getValue(ADMINISTRATORSURNAME);
  }
  
  public void validateAdministratorSurname()
  {
    this.validateAttribute(ADMINISTRATORSURNAME);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getAdministratorSurnameMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.export.IndividualIPTExcelView.CLASS);
    return mdClassIF.definesAttribute(ADMINISTRATORSURNAME);
  }
  
  public void setAdministratorSurname(String value)
  {
    if(value == null)
    {
      setValue(ADMINISTRATORSURNAME, "");
    }
    else
    {
      setValue(ADMINISTRATORSURNAME, value);
    }
  }
  
  public String getDoseNumber()
  {
    return getValue(DOSENUMBER);
  }
  
  public void validateDoseNumber()
  {
    this.validateAttribute(DOSENUMBER);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getDoseNumberMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.export.IndividualIPTExcelView.CLASS);
    return mdClassIF.definesAttribute(DOSENUMBER);
  }
  
  public void setDoseNumber(String value)
  {
    if(value == null)
    {
      setValue(DOSENUMBER, "");
    }
    else
    {
      setValue(DOSENUMBER, value);
    }
  }
  
  public String getDoseType()
  {
    return getValue(DOSETYPE);
  }
  
  public void validateDoseType()
  {
    this.validateAttribute(DOSETYPE);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getDoseTypeMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.export.IndividualIPTExcelView.CLASS);
    return mdClassIF.definesAttribute(DOSETYPE);
  }
  
  public void setDoseType(String value)
  {
    if(value == null)
    {
      setValue(DOSETYPE, "");
    }
    else
    {
      setValue(DOSETYPE, value);
    }
  }
  
  public dss.vector.solutions.geo.generated.HealthFacility getFacility()
  {
    if (getValue(FACILITY).trim().equals(""))
    {
      return null;
    }
    else
    {
      return dss.vector.solutions.geo.generated.HealthFacility.get(getValue(FACILITY));
    }
  }
  
  public void validateFacility()
  {
    this.validateAttribute(FACILITY);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getFacilityMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.export.IndividualIPTExcelView.CLASS);
    return mdClassIF.definesAttribute(FACILITY);
  }
  
  public void setFacility(dss.vector.solutions.geo.generated.HealthFacility value)
  {
    if(value == null)
    {
      setValue(FACILITY, "");
    }
    else
    {
      setValue(FACILITY, value.getId());
    }
  }
  
  public String getId()
  {
    return getValue(ID);
  }
  
  public void validateId()
  {
    this.validateAttribute(ID);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getIdMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.export.IndividualIPTExcelView.CLASS);
    return mdClassIF.definesAttribute(ID);
  }
  
  public Boolean getIsANCVisit()
  {
    return com.runwaysdk.constants.MdAttributeBooleanUtil.getTypeSafeValue(getValue(ISANCVISIT));
  }
  
  public void validateIsANCVisit()
  {
    this.validateAttribute(ISANCVISIT);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getIsANCVisitMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.export.IndividualIPTExcelView.CLASS);
    return mdClassIF.definesAttribute(ISANCVISIT);
  }
  
  public void setIsANCVisit(Boolean value)
  {
    if(value == null)
    {
      setValue(ISANCVISIT, "");
    }
    else
    {
      setValue(ISANCVISIT, java.lang.Boolean.toString(value));
    }
  }
  
  public Integer getNumberOfReceivedITNs()
  {
    return com.runwaysdk.constants.MdAttributeIntegerUtil.getTypeSafeValue(getValue(NUMBEROFRECEIVEDITNS));
  }
  
  public void validateNumberOfReceivedITNs()
  {
    this.validateAttribute(NUMBEROFRECEIVEDITNS);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getNumberOfReceivedITNsMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.export.IndividualIPTExcelView.CLASS);
    return mdClassIF.definesAttribute(NUMBEROFRECEIVEDITNS);
  }
  
  public void setNumberOfReceivedITNs(Integer value)
  {
    if(value == null)
    {
      setValue(NUMBEROFRECEIVEDITNS, "");
    }
    else
    {
      setValue(NUMBEROFRECEIVEDITNS, java.lang.Integer.toString(value));
    }
  }
  
  public java.util.Date getPatientDOB()
  {
    return com.runwaysdk.constants.MdAttributeDateUtil.getTypeSafeValue(getValue(PATIENTDOB));
  }
  
  public void validatePatientDOB()
  {
    this.validateAttribute(PATIENTDOB);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getPatientDOBMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.export.IndividualIPTExcelView.CLASS);
    return mdClassIF.definesAttribute(PATIENTDOB);
  }
  
  public void setPatientDOB(java.util.Date value)
  {
    if(value == null)
    {
      setValue(PATIENTDOB, "");
    }
    else
    {
      setValue(PATIENTDOB, new java.text.SimpleDateFormat(com.runwaysdk.constants.Constants.DATE_FORMAT).format(value));
    }
  }
  
  public String getPatientFirstName()
  {
    return getValue(PATIENTFIRSTNAME);
  }
  
  public void validatePatientFirstName()
  {
    this.validateAttribute(PATIENTFIRSTNAME);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getPatientFirstNameMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.export.IndividualIPTExcelView.CLASS);
    return mdClassIF.definesAttribute(PATIENTFIRSTNAME);
  }
  
  public void setPatientFirstName(String value)
  {
    if(value == null)
    {
      setValue(PATIENTFIRSTNAME, "");
    }
    else
    {
      setValue(PATIENTFIRSTNAME, value);
    }
  }
  
  public String getPatientLastName()
  {
    return getValue(PATIENTLASTNAME);
  }
  
  public void validatePatientLastName()
  {
    this.validateAttribute(PATIENTLASTNAME);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getPatientLastNameMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.export.IndividualIPTExcelView.CLASS);
    return mdClassIF.definesAttribute(PATIENTLASTNAME);
  }
  
  public void setPatientLastName(String value)
  {
    if(value == null)
    {
      setValue(PATIENTLASTNAME, "");
    }
    else
    {
      setValue(PATIENTLASTNAME, value);
    }
  }
  
  public String getPatientSex()
  {
    return getValue(PATIENTSEX);
  }
  
  public void validatePatientSex()
  {
    this.validateAttribute(PATIENTSEX);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getPatientSexMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.export.IndividualIPTExcelView.CLASS);
    return mdClassIF.definesAttribute(PATIENTSEX);
  }
  
  public void setPatientSex(String value)
  {
    if(value == null)
    {
      setValue(PATIENTSEX, "");
    }
    else
    {
      setValue(PATIENTSEX, value);
    }
  }
  
  public String getPatientType()
  {
    return getValue(PATIENTTYPE);
  }
  
  public void validatePatientType()
  {
    this.validateAttribute(PATIENTTYPE);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getPatientTypeMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.export.IndividualIPTExcelView.CLASS);
    return mdClassIF.definesAttribute(PATIENTTYPE);
  }
  
  public void setPatientType(String value)
  {
    if(value == null)
    {
      setValue(PATIENTTYPE, "");
    }
    else
    {
      setValue(PATIENTTYPE, value);
    }
  }
  
  public Boolean getReceivedITN()
  {
    return com.runwaysdk.constants.MdAttributeBooleanUtil.getTypeSafeValue(getValue(RECEIVEDITN));
  }
  
  public void validateReceivedITN()
  {
    this.validateAttribute(RECEIVEDITN);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getReceivedITNMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.export.IndividualIPTExcelView.CLASS);
    return mdClassIF.definesAttribute(RECEIVEDITN);
  }
  
  public void setReceivedITN(Boolean value)
  {
    if(value == null)
    {
      setValue(RECEIVEDITN, "");
    }
    else
    {
      setValue(RECEIVEDITN, java.lang.Boolean.toString(value));
    }
  }
  
  public Boolean getReceivedSupplement()
  {
    return com.runwaysdk.constants.MdAttributeBooleanUtil.getTypeSafeValue(getValue(RECEIVEDSUPPLEMENT));
  }
  
  public void validateReceivedSupplement()
  {
    this.validateAttribute(RECEIVEDSUPPLEMENT);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getReceivedSupplementMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.export.IndividualIPTExcelView.CLASS);
    return mdClassIF.definesAttribute(RECEIVEDSUPPLEMENT);
  }
  
  public void setReceivedSupplement(Boolean value)
  {
    if(value == null)
    {
      setValue(RECEIVEDSUPPLEMENT, "");
    }
    else
    {
      setValue(RECEIVEDSUPPLEMENT, java.lang.Boolean.toString(value));
    }
  }
  
  public dss.vector.solutions.geo.generated.GeoEntity getResidentialLocation()
  {
    if (getValue(RESIDENTIALLOCATION).trim().equals(""))
    {
      return null;
    }
    else
    {
      return dss.vector.solutions.geo.generated.GeoEntity.get(getValue(RESIDENTIALLOCATION));
    }
  }
  
  public void validateResidentialLocation()
  {
    this.validateAttribute(RESIDENTIALLOCATION);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getResidentialLocationMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.export.IndividualIPTExcelView.CLASS);
    return mdClassIF.definesAttribute(RESIDENTIALLOCATION);
  }
  
  public void setResidentialLocation(dss.vector.solutions.geo.generated.GeoEntity value)
  {
    if(value == null)
    {
      setValue(RESIDENTIALLOCATION, "");
    }
    else
    {
      setValue(RESIDENTIALLOCATION, value.getId());
    }
  }
  
  public java.util.Date getServiceDate()
  {
    return com.runwaysdk.constants.MdAttributeDateUtil.getTypeSafeValue(getValue(SERVICEDATE));
  }
  
  public void validateServiceDate()
  {
    this.validateAttribute(SERVICEDATE);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getServiceDateMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.export.IndividualIPTExcelView.CLASS);
    return mdClassIF.definesAttribute(SERVICEDATE);
  }
  
  public void setServiceDate(java.util.Date value)
  {
    if(value == null)
    {
      setValue(SERVICEDATE, "");
    }
    else
    {
      setValue(SERVICEDATE, new java.text.SimpleDateFormat(com.runwaysdk.constants.Constants.DATE_FORMAT).format(value));
    }
  }
  
  public String getVisitNumber()
  {
    return getValue(VISITNUMBER);
  }
  
  public void validateVisitNumber()
  {
    this.validateAttribute(VISITNUMBER);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getVisitNumberMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.export.IndividualIPTExcelView.CLASS);
    return mdClassIF.definesAttribute(VISITNUMBER);
  }
  
  public void setVisitNumber(String value)
  {
    if(value == null)
    {
      setValue(VISITNUMBER, "");
    }
    else
    {
      setValue(VISITNUMBER, value);
    }
  }
  
  public dss.vector.solutions.geo.generated.GeoEntity getWorkGeoEntity()
  {
    if (getValue(WORKGEOENTITY).trim().equals(""))
    {
      return null;
    }
    else
    {
      return dss.vector.solutions.geo.generated.GeoEntity.get(getValue(WORKGEOENTITY));
    }
  }
  
  public void validateWorkGeoEntity()
  {
    this.validateAttribute(WORKGEOENTITY);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getWorkGeoEntityMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.export.IndividualIPTExcelView.CLASS);
    return mdClassIF.definesAttribute(WORKGEOENTITY);
  }
  
  public void setWorkGeoEntity(dss.vector.solutions.geo.generated.GeoEntity value)
  {
    if(value == null)
    {
      setValue(WORKGEOENTITY, "");
    }
    else
    {
      setValue(WORKGEOENTITY, value.getId());
    }
  }
  
  public String getWorkInformation()
  {
    return getValue(WORKINFORMATION);
  }
  
  public void validateWorkInformation()
  {
    this.validateAttribute(WORKINFORMATION);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getWorkInformationMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.export.IndividualIPTExcelView.CLASS);
    return mdClassIF.definesAttribute(WORKINFORMATION);
  }
  
  public void setWorkInformation(String value)
  {
    if(value == null)
    {
      setValue(WORKINFORMATION, "");
    }
    else
    {
      setValue(WORKINFORMATION, value);
    }
  }
  
  protected String getDeclaredType()
  {
    return CLASS;
  }
  
  public static IndividualIPTExcelView get(String id)
  {
    return (IndividualIPTExcelView) com.runwaysdk.business.View.get(id);
  }
  
  public String toString()
  {
    if (this.isNew())
    {
      return "New: "+ this.getClassDisplayLabel();
    }
    else
    {
      return super.toString();
    }
  }
}
