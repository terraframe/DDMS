/*******************************************************************************
 * Copyright (C) 2018 IVCC
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 ******************************************************************************/
package dss.vector.solutions.export;

@com.runwaysdk.business.ClassSignature(hash = 2092628878)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to IndividualIPTExcelView.java
 *
 * @author Autogenerated by RunwaySDK
 */
public  abstract  class IndividualIPTExcelViewQueryBase extends com.runwaysdk.query.GeneratedViewQuery
 implements com.runwaysdk.generation.loader.Reloadable
{

  public IndividualIPTExcelViewQueryBase(com.runwaysdk.query.QueryFactory componentQueryFactory)
  {
    super(componentQueryFactory);
  }

  public IndividualIPTExcelViewQueryBase(com.runwaysdk.query.QueryFactory componentQueryFactory, com.runwaysdk.query.ViewQueryBuilder viewQueryBuilder)
  {
    super(componentQueryFactory, viewQueryBuilder);
  }
  public String getClassType()
  {
    return dss.vector.solutions.export.IndividualIPTExcelView.CLASS;
  }
  public com.runwaysdk.query.SelectableChar getAdministratorName()
  {
    return getAdministratorName(null);

  }
 
  public com.runwaysdk.query.SelectableChar getAdministratorName(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getSelectable(dss.vector.solutions.export.IndividualIPTExcelView.ADMINISTRATORNAME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getAdministratorName(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getSelectable(dss.vector.solutions.export.IndividualIPTExcelView.ADMINISTRATORNAME, alias, displayLabel);

  }
 
  public com.runwaysdk.query.SelectableChar getAdministratorSurname()
  {
    return getAdministratorSurname(null);

  }
 
  public com.runwaysdk.query.SelectableChar getAdministratorSurname(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getSelectable(dss.vector.solutions.export.IndividualIPTExcelView.ADMINISTRATORSURNAME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getAdministratorSurname(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getSelectable(dss.vector.solutions.export.IndividualIPTExcelView.ADMINISTRATORSURNAME, alias, displayLabel);

  }
 
  public com.runwaysdk.query.SelectableChar getDoseNumber()
  {
    return getDoseNumber(null);

  }
 
  public com.runwaysdk.query.SelectableChar getDoseNumber(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getSelectable(dss.vector.solutions.export.IndividualIPTExcelView.DOSENUMBER, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getDoseNumber(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getSelectable(dss.vector.solutions.export.IndividualIPTExcelView.DOSENUMBER, alias, displayLabel);

  }
 
  public com.runwaysdk.query.SelectableChar getDoseType()
  {
    return getDoseType(null);

  }
 
  public com.runwaysdk.query.SelectableChar getDoseType(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getSelectable(dss.vector.solutions.export.IndividualIPTExcelView.DOSETYPE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getDoseType(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getSelectable(dss.vector.solutions.export.IndividualIPTExcelView.DOSETYPE, alias, displayLabel);

  }
 
  public dss.vector.solutions.geo.generated.HealthFacilityQuery.HealthFacilityQueryReferenceIF getFacility()
  {
    return getFacility(null);

  }
 
  public dss.vector.solutions.geo.generated.HealthFacilityQuery.HealthFacilityQueryReferenceIF getFacility(String alias)
  {

    return (dss.vector.solutions.geo.generated.HealthFacilityQuery.HealthFacilityQueryReferenceIF)this.getSelectable(dss.vector.solutions.export.IndividualIPTExcelView.FACILITY, alias, null);

  }
 
  public dss.vector.solutions.geo.generated.HealthFacilityQuery.HealthFacilityQueryReferenceIF getFacility(String alias, String displayLabel)
  {

    return (dss.vector.solutions.geo.generated.HealthFacilityQuery.HealthFacilityQueryReferenceIF)this.getSelectable(dss.vector.solutions.export.IndividualIPTExcelView.FACILITY, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getId()
  {
    return getId(null);

  }
 
  public com.runwaysdk.query.SelectableChar getId(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getSelectable(dss.vector.solutions.export.IndividualIPTExcelView.ID, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getId(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getSelectable(dss.vector.solutions.export.IndividualIPTExcelView.ID, alias, displayLabel);

  }
 
  public com.runwaysdk.query.SelectableBoolean getIsANCVisit()
  {
    return getIsANCVisit(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getIsANCVisit(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getSelectable(dss.vector.solutions.export.IndividualIPTExcelView.ISANCVISIT, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getIsANCVisit(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getSelectable(dss.vector.solutions.export.IndividualIPTExcelView.ISANCVISIT, alias, displayLabel);

  }
 
  public com.runwaysdk.query.SelectableInteger getNumberOfReceivedITNs()
  {
    return getNumberOfReceivedITNs(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getNumberOfReceivedITNs(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getSelectable(dss.vector.solutions.export.IndividualIPTExcelView.NUMBEROFRECEIVEDITNS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getNumberOfReceivedITNs(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getSelectable(dss.vector.solutions.export.IndividualIPTExcelView.NUMBEROFRECEIVEDITNS, alias, displayLabel);

  }
 
  public com.runwaysdk.query.SelectableMoment getPatientDOB()
  {
    return getPatientDOB(null);

  }
 
  public com.runwaysdk.query.SelectableMoment getPatientDOB(String alias)
  {
    return (com.runwaysdk.query.SelectableMoment)this.getSelectable(dss.vector.solutions.export.IndividualIPTExcelView.PATIENTDOB, alias, null);

  }
 
  public com.runwaysdk.query.SelectableMoment getPatientDOB(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableMoment)this.getSelectable(dss.vector.solutions.export.IndividualIPTExcelView.PATIENTDOB, alias, displayLabel);

  }
 
  public com.runwaysdk.query.SelectableChar getPatientFirstName()
  {
    return getPatientFirstName(null);

  }
 
  public com.runwaysdk.query.SelectableChar getPatientFirstName(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getSelectable(dss.vector.solutions.export.IndividualIPTExcelView.PATIENTFIRSTNAME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getPatientFirstName(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getSelectable(dss.vector.solutions.export.IndividualIPTExcelView.PATIENTFIRSTNAME, alias, displayLabel);

  }
 
  public com.runwaysdk.query.SelectableChar getPatientLastName()
  {
    return getPatientLastName(null);

  }
 
  public com.runwaysdk.query.SelectableChar getPatientLastName(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getSelectable(dss.vector.solutions.export.IndividualIPTExcelView.PATIENTLASTNAME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getPatientLastName(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getSelectable(dss.vector.solutions.export.IndividualIPTExcelView.PATIENTLASTNAME, alias, displayLabel);

  }
 
  public com.runwaysdk.query.SelectableChar getPatientSex()
  {
    return getPatientSex(null);

  }
 
  public com.runwaysdk.query.SelectableChar getPatientSex(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getSelectable(dss.vector.solutions.export.IndividualIPTExcelView.PATIENTSEX, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getPatientSex(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getSelectable(dss.vector.solutions.export.IndividualIPTExcelView.PATIENTSEX, alias, displayLabel);

  }
 
  public com.runwaysdk.query.SelectableChar getPatientType()
  {
    return getPatientType(null);

  }
 
  public com.runwaysdk.query.SelectableChar getPatientType(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getSelectable(dss.vector.solutions.export.IndividualIPTExcelView.PATIENTTYPE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getPatientType(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getSelectable(dss.vector.solutions.export.IndividualIPTExcelView.PATIENTTYPE, alias, displayLabel);

  }
 
  public com.runwaysdk.query.SelectableBoolean getReceivedITN()
  {
    return getReceivedITN(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getReceivedITN(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getSelectable(dss.vector.solutions.export.IndividualIPTExcelView.RECEIVEDITN, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getReceivedITN(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getSelectable(dss.vector.solutions.export.IndividualIPTExcelView.RECEIVEDITN, alias, displayLabel);

  }
 
  public com.runwaysdk.query.SelectableBoolean getReceivedSupplement()
  {
    return getReceivedSupplement(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getReceivedSupplement(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getSelectable(dss.vector.solutions.export.IndividualIPTExcelView.RECEIVEDSUPPLEMENT, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getReceivedSupplement(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getSelectable(dss.vector.solutions.export.IndividualIPTExcelView.RECEIVEDSUPPLEMENT, alias, displayLabel);

  }
 
  public dss.vector.solutions.geo.generated.GeoEntityQuery.GeoEntityQueryReferenceIF getResidentialLocation()
  {
    return getResidentialLocation(null);

  }
 
  public dss.vector.solutions.geo.generated.GeoEntityQuery.GeoEntityQueryReferenceIF getResidentialLocation(String alias)
  {

    return (dss.vector.solutions.geo.generated.GeoEntityQuery.GeoEntityQueryReferenceIF)this.getSelectable(dss.vector.solutions.export.IndividualIPTExcelView.RESIDENTIALLOCATION, alias, null);

  }
 
  public dss.vector.solutions.geo.generated.GeoEntityQuery.GeoEntityQueryReferenceIF getResidentialLocation(String alias, String displayLabel)
  {

    return (dss.vector.solutions.geo.generated.GeoEntityQuery.GeoEntityQueryReferenceIF)this.getSelectable(dss.vector.solutions.export.IndividualIPTExcelView.RESIDENTIALLOCATION, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableMoment getServiceDate()
  {
    return getServiceDate(null);

  }
 
  public com.runwaysdk.query.SelectableMoment getServiceDate(String alias)
  {
    return (com.runwaysdk.query.SelectableMoment)this.getSelectable(dss.vector.solutions.export.IndividualIPTExcelView.SERVICEDATE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableMoment getServiceDate(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableMoment)this.getSelectable(dss.vector.solutions.export.IndividualIPTExcelView.SERVICEDATE, alias, displayLabel);

  }
 
  public com.runwaysdk.query.SelectableChar getVisitNumber()
  {
    return getVisitNumber(null);

  }
 
  public com.runwaysdk.query.SelectableChar getVisitNumber(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getSelectable(dss.vector.solutions.export.IndividualIPTExcelView.VISITNUMBER, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getVisitNumber(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getSelectable(dss.vector.solutions.export.IndividualIPTExcelView.VISITNUMBER, alias, displayLabel);

  }
 
  public dss.vector.solutions.geo.generated.GeoEntityQuery.GeoEntityQueryReferenceIF getWorkGeoEntity()
  {
    return getWorkGeoEntity(null);

  }
 
  public dss.vector.solutions.geo.generated.GeoEntityQuery.GeoEntityQueryReferenceIF getWorkGeoEntity(String alias)
  {

    return (dss.vector.solutions.geo.generated.GeoEntityQuery.GeoEntityQueryReferenceIF)this.getSelectable(dss.vector.solutions.export.IndividualIPTExcelView.WORKGEOENTITY, alias, null);

  }
 
  public dss.vector.solutions.geo.generated.GeoEntityQuery.GeoEntityQueryReferenceIF getWorkGeoEntity(String alias, String displayLabel)
  {

    return (dss.vector.solutions.geo.generated.GeoEntityQuery.GeoEntityQueryReferenceIF)this.getSelectable(dss.vector.solutions.export.IndividualIPTExcelView.WORKGEOENTITY, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getWorkInformation()
  {
    return getWorkInformation(null);

  }
 
  public com.runwaysdk.query.SelectableChar getWorkInformation(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getSelectable(dss.vector.solutions.export.IndividualIPTExcelView.WORKINFORMATION, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getWorkInformation(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getSelectable(dss.vector.solutions.export.IndividualIPTExcelView.WORKINFORMATION, alias, displayLabel);

  }
 
  /**  
   * Returns an iterator of Business objects that match the query criteria specified
   * on this query object. 
   * @return iterator of Business objects that match the query criteria specified
   * on this query object.
   */
  @java.lang.SuppressWarnings("unchecked")
  public com.runwaysdk.query.OIterator<? extends IndividualIPTExcelView> getIterator()
  {
    com.runwaysdk.query.ValueIterator valueIterator;
    if (_pageSize != null && _pageNumber != null)
    {
      valueIterator = (com.runwaysdk.query.ValueIterator<com.runwaysdk.dataaccess.ValueObject>)this.getComponentQuery().getIterator(_pageSize, _pageNumber);
    }
    else
    {
      valueIterator = (com.runwaysdk.query.ValueIterator<com.runwaysdk.dataaccess.ValueObject>)this.getComponentQuery().getIterator();
    }
    return new com.runwaysdk.query.ViewIterator<IndividualIPTExcelView>(this.getMdClassIF(), valueIterator);
  }

}
