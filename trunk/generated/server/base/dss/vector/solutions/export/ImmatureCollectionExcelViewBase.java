package dss.vector.solutions.export;

@com.runwaysdk.business.ClassSignature(hash = 977216331)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to ImmatureCollectionExcelView.java
 *
 * @author Autogenerated by RunwaySDK
 */
public abstract class ImmatureCollectionExcelViewBase extends com.runwaysdk.business.View implements com.runwaysdk.generation.loader.Reloadable
{
  public final static String CLASS = "dss.vector.solutions.export.ImmatureCollectionExcelView";
  public static java.lang.String COLLECTIONID = "collectionId";
  public static java.lang.String CONTAINERTERM = "containerTerm";
  public static java.lang.String ENDDATE = "endDate";
  public static java.lang.String GEOENTITY = "geoEntity";
  public static java.lang.String ID = "id";
  public static java.lang.String NOTES = "notes";
  public static java.lang.String NUMBERCONTAINERS = "numberContainers";
  public static java.lang.String NUMBERDESTROYED = "numberDestroyed";
  public static java.lang.String NUMBEREXAMINED = "numberExamined";
  public static java.lang.String NUMBERIMMATURES = "numberImmatures";
  public static java.lang.String NUMBERINHABITANTS = "numberInhabitants";
  public static java.lang.String NUMBERLARVAE = "numberLarvae";
  public static java.lang.String NUMBERLARVAECOLLECTED = "numberLarvaeCollected";
  public static java.lang.String NUMBERPUPAE = "numberPupae";
  public static java.lang.String NUMBERPUPAECOLLECTED = "numberPupaeCollected";
  public static java.lang.String NUMBERWITHIMMATURES = "numberWithImmatures";
  public static java.lang.String NUMBERWITHLARVAE = "numberWithLarvae";
  public static java.lang.String NUMBERWITHLARVICIDE = "numberWithLarvicide";
  public static java.lang.String NUMBERWITHPUPAE = "numberWithPupae";
  public static java.lang.String NUMBERWITHWATER = "numberWithWater";
  public static java.lang.String PREMISESIZE = "premiseSize";
  public static java.lang.String PREMISETYPE = "premiseType";
  public static java.lang.String STARTDATE = "startDate";
  public static java.lang.String TAXON = "taxon";
  private static final long serialVersionUID = 977216331;
  
  public ImmatureCollectionExcelViewBase()
  {
    super();
  }
  
  public String getCollectionId()
  {
    return getValue(COLLECTIONID);
  }
  
  public void validateCollectionId()
  {
    this.validateAttribute(COLLECTIONID);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getCollectionIdMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.export.ImmatureCollectionExcelView.CLASS);
    return mdClassIF.definesAttribute(COLLECTIONID);
  }
  
  public void setCollectionId(String value)
  {
    if(value == null)
    {
      setValue(COLLECTIONID, "");
    }
    else
    {
      setValue(COLLECTIONID, value);
    }
  }
  
  public String getContainerTerm()
  {
    return getValue(CONTAINERTERM);
  }
  
  public void validateContainerTerm()
  {
    this.validateAttribute(CONTAINERTERM);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getContainerTermMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.export.ImmatureCollectionExcelView.CLASS);
    return mdClassIF.definesAttribute(CONTAINERTERM);
  }
  
  public void setContainerTerm(String value)
  {
    if(value == null)
    {
      setValue(CONTAINERTERM, "");
    }
    else
    {
      setValue(CONTAINERTERM, value);
    }
  }
  
  public java.util.Date getEndDate()
  {
    return com.runwaysdk.constants.MdAttributeDateUtil.getTypeSafeValue(getValue(ENDDATE));
  }
  
  public void validateEndDate()
  {
    this.validateAttribute(ENDDATE);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getEndDateMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.export.ImmatureCollectionExcelView.CLASS);
    return mdClassIF.definesAttribute(ENDDATE);
  }
  
  public void setEndDate(java.util.Date value)
  {
    if(value == null)
    {
      setValue(ENDDATE, "");
    }
    else
    {
      setValue(ENDDATE, new java.text.SimpleDateFormat(com.runwaysdk.constants.Constants.DATE_FORMAT).format(value));
    }
  }
  
  public dss.vector.solutions.geo.generated.GeoEntity getGeoEntity()
  {
    if (getValue(GEOENTITY).trim().equals(""))
    {
      return null;
    }
    else
    {
      return dss.vector.solutions.geo.generated.GeoEntity.get(getValue(GEOENTITY));
    }
  }
  
  public void validateGeoEntity()
  {
    this.validateAttribute(GEOENTITY);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getGeoEntityMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.export.ImmatureCollectionExcelView.CLASS);
    return mdClassIF.definesAttribute(GEOENTITY);
  }
  
  public void setGeoEntity(dss.vector.solutions.geo.generated.GeoEntity value)
  {
    if(value == null)
    {
      setValue(GEOENTITY, "");
    }
    else
    {
      setValue(GEOENTITY, value.getId());
    }
  }
  
  public String getId()
  {
    return getValue(ID);
  }
  
  public void validateId()
  {
    this.validateAttribute(ID);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getIdMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.export.ImmatureCollectionExcelView.CLASS);
    return mdClassIF.definesAttribute(ID);
  }
  
  public String getNotes()
  {
    return getValue(NOTES);
  }
  
  public void validateNotes()
  {
    this.validateAttribute(NOTES);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getNotesMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.export.ImmatureCollectionExcelView.CLASS);
    return mdClassIF.definesAttribute(NOTES);
  }
  
  public void setNotes(String value)
  {
    if(value == null)
    {
      setValue(NOTES, "");
    }
    else
    {
      setValue(NOTES, value);
    }
  }
  
  public Integer getNumberContainers()
  {
    return com.runwaysdk.constants.MdAttributeIntegerUtil.getTypeSafeValue(getValue(NUMBERCONTAINERS));
  }
  
  public void validateNumberContainers()
  {
    this.validateAttribute(NUMBERCONTAINERS);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getNumberContainersMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.export.ImmatureCollectionExcelView.CLASS);
    return mdClassIF.definesAttribute(NUMBERCONTAINERS);
  }
  
  public void setNumberContainers(Integer value)
  {
    if(value == null)
    {
      setValue(NUMBERCONTAINERS, "");
    }
    else
    {
      setValue(NUMBERCONTAINERS, java.lang.Integer.toString(value));
    }
  }
  
  public Integer getNumberDestroyed()
  {
    return com.runwaysdk.constants.MdAttributeIntegerUtil.getTypeSafeValue(getValue(NUMBERDESTROYED));
  }
  
  public void validateNumberDestroyed()
  {
    this.validateAttribute(NUMBERDESTROYED);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getNumberDestroyedMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.export.ImmatureCollectionExcelView.CLASS);
    return mdClassIF.definesAttribute(NUMBERDESTROYED);
  }
  
  public void setNumberDestroyed(Integer value)
  {
    if(value == null)
    {
      setValue(NUMBERDESTROYED, "");
    }
    else
    {
      setValue(NUMBERDESTROYED, java.lang.Integer.toString(value));
    }
  }
  
  public Integer getNumberExamined()
  {
    return com.runwaysdk.constants.MdAttributeIntegerUtil.getTypeSafeValue(getValue(NUMBEREXAMINED));
  }
  
  public void validateNumberExamined()
  {
    this.validateAttribute(NUMBEREXAMINED);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getNumberExaminedMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.export.ImmatureCollectionExcelView.CLASS);
    return mdClassIF.definesAttribute(NUMBEREXAMINED);
  }
  
  public void setNumberExamined(Integer value)
  {
    if(value == null)
    {
      setValue(NUMBEREXAMINED, "");
    }
    else
    {
      setValue(NUMBEREXAMINED, java.lang.Integer.toString(value));
    }
  }
  
  public Integer getNumberImmatures()
  {
    return com.runwaysdk.constants.MdAttributeIntegerUtil.getTypeSafeValue(getValue(NUMBERIMMATURES));
  }
  
  public void validateNumberImmatures()
  {
    this.validateAttribute(NUMBERIMMATURES);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getNumberImmaturesMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.export.ImmatureCollectionExcelView.CLASS);
    return mdClassIF.definesAttribute(NUMBERIMMATURES);
  }
  
  public void setNumberImmatures(Integer value)
  {
    if(value == null)
    {
      setValue(NUMBERIMMATURES, "");
    }
    else
    {
      setValue(NUMBERIMMATURES, java.lang.Integer.toString(value));
    }
  }
  
  public Integer getNumberInhabitants()
  {
    return com.runwaysdk.constants.MdAttributeIntegerUtil.getTypeSafeValue(getValue(NUMBERINHABITANTS));
  }
  
  public void validateNumberInhabitants()
  {
    this.validateAttribute(NUMBERINHABITANTS);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getNumberInhabitantsMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.export.ImmatureCollectionExcelView.CLASS);
    return mdClassIF.definesAttribute(NUMBERINHABITANTS);
  }
  
  public void setNumberInhabitants(Integer value)
  {
    if(value == null)
    {
      setValue(NUMBERINHABITANTS, "");
    }
    else
    {
      setValue(NUMBERINHABITANTS, java.lang.Integer.toString(value));
    }
  }
  
  public Integer getNumberLarvae()
  {
    return com.runwaysdk.constants.MdAttributeIntegerUtil.getTypeSafeValue(getValue(NUMBERLARVAE));
  }
  
  public void validateNumberLarvae()
  {
    this.validateAttribute(NUMBERLARVAE);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getNumberLarvaeMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.export.ImmatureCollectionExcelView.CLASS);
    return mdClassIF.definesAttribute(NUMBERLARVAE);
  }
  
  public void setNumberLarvae(Integer value)
  {
    if(value == null)
    {
      setValue(NUMBERLARVAE, "");
    }
    else
    {
      setValue(NUMBERLARVAE, java.lang.Integer.toString(value));
    }
  }
  
  public Integer getNumberLarvaeCollected()
  {
    return com.runwaysdk.constants.MdAttributeIntegerUtil.getTypeSafeValue(getValue(NUMBERLARVAECOLLECTED));
  }
  
  public void validateNumberLarvaeCollected()
  {
    this.validateAttribute(NUMBERLARVAECOLLECTED);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getNumberLarvaeCollectedMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.export.ImmatureCollectionExcelView.CLASS);
    return mdClassIF.definesAttribute(NUMBERLARVAECOLLECTED);
  }
  
  public void setNumberLarvaeCollected(Integer value)
  {
    if(value == null)
    {
      setValue(NUMBERLARVAECOLLECTED, "");
    }
    else
    {
      setValue(NUMBERLARVAECOLLECTED, java.lang.Integer.toString(value));
    }
  }
  
  public Integer getNumberPupae()
  {
    return com.runwaysdk.constants.MdAttributeIntegerUtil.getTypeSafeValue(getValue(NUMBERPUPAE));
  }
  
  public void validateNumberPupae()
  {
    this.validateAttribute(NUMBERPUPAE);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getNumberPupaeMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.export.ImmatureCollectionExcelView.CLASS);
    return mdClassIF.definesAttribute(NUMBERPUPAE);
  }
  
  public void setNumberPupae(Integer value)
  {
    if(value == null)
    {
      setValue(NUMBERPUPAE, "");
    }
    else
    {
      setValue(NUMBERPUPAE, java.lang.Integer.toString(value));
    }
  }
  
  public Integer getNumberPupaeCollected()
  {
    return com.runwaysdk.constants.MdAttributeIntegerUtil.getTypeSafeValue(getValue(NUMBERPUPAECOLLECTED));
  }
  
  public void validateNumberPupaeCollected()
  {
    this.validateAttribute(NUMBERPUPAECOLLECTED);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getNumberPupaeCollectedMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.export.ImmatureCollectionExcelView.CLASS);
    return mdClassIF.definesAttribute(NUMBERPUPAECOLLECTED);
  }
  
  public void setNumberPupaeCollected(Integer value)
  {
    if(value == null)
    {
      setValue(NUMBERPUPAECOLLECTED, "");
    }
    else
    {
      setValue(NUMBERPUPAECOLLECTED, java.lang.Integer.toString(value));
    }
  }
  
  public Integer getNumberWithImmatures()
  {
    return com.runwaysdk.constants.MdAttributeIntegerUtil.getTypeSafeValue(getValue(NUMBERWITHIMMATURES));
  }
  
  public void validateNumberWithImmatures()
  {
    this.validateAttribute(NUMBERWITHIMMATURES);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getNumberWithImmaturesMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.export.ImmatureCollectionExcelView.CLASS);
    return mdClassIF.definesAttribute(NUMBERWITHIMMATURES);
  }
  
  public void setNumberWithImmatures(Integer value)
  {
    if(value == null)
    {
      setValue(NUMBERWITHIMMATURES, "");
    }
    else
    {
      setValue(NUMBERWITHIMMATURES, java.lang.Integer.toString(value));
    }
  }
  
  public Integer getNumberWithLarvae()
  {
    return com.runwaysdk.constants.MdAttributeIntegerUtil.getTypeSafeValue(getValue(NUMBERWITHLARVAE));
  }
  
  public void validateNumberWithLarvae()
  {
    this.validateAttribute(NUMBERWITHLARVAE);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getNumberWithLarvaeMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.export.ImmatureCollectionExcelView.CLASS);
    return mdClassIF.definesAttribute(NUMBERWITHLARVAE);
  }
  
  public void setNumberWithLarvae(Integer value)
  {
    if(value == null)
    {
      setValue(NUMBERWITHLARVAE, "");
    }
    else
    {
      setValue(NUMBERWITHLARVAE, java.lang.Integer.toString(value));
    }
  }
  
  public Integer getNumberWithLarvicide()
  {
    return com.runwaysdk.constants.MdAttributeIntegerUtil.getTypeSafeValue(getValue(NUMBERWITHLARVICIDE));
  }
  
  public void validateNumberWithLarvicide()
  {
    this.validateAttribute(NUMBERWITHLARVICIDE);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getNumberWithLarvicideMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.export.ImmatureCollectionExcelView.CLASS);
    return mdClassIF.definesAttribute(NUMBERWITHLARVICIDE);
  }
  
  public void setNumberWithLarvicide(Integer value)
  {
    if(value == null)
    {
      setValue(NUMBERWITHLARVICIDE, "");
    }
    else
    {
      setValue(NUMBERWITHLARVICIDE, java.lang.Integer.toString(value));
    }
  }
  
  public Integer getNumberWithPupae()
  {
    return com.runwaysdk.constants.MdAttributeIntegerUtil.getTypeSafeValue(getValue(NUMBERWITHPUPAE));
  }
  
  public void validateNumberWithPupae()
  {
    this.validateAttribute(NUMBERWITHPUPAE);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getNumberWithPupaeMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.export.ImmatureCollectionExcelView.CLASS);
    return mdClassIF.definesAttribute(NUMBERWITHPUPAE);
  }
  
  public void setNumberWithPupae(Integer value)
  {
    if(value == null)
    {
      setValue(NUMBERWITHPUPAE, "");
    }
    else
    {
      setValue(NUMBERWITHPUPAE, java.lang.Integer.toString(value));
    }
  }
  
  public Integer getNumberWithWater()
  {
    return com.runwaysdk.constants.MdAttributeIntegerUtil.getTypeSafeValue(getValue(NUMBERWITHWATER));
  }
  
  public void validateNumberWithWater()
  {
    this.validateAttribute(NUMBERWITHWATER);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getNumberWithWaterMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.export.ImmatureCollectionExcelView.CLASS);
    return mdClassIF.definesAttribute(NUMBERWITHWATER);
  }
  
  public void setNumberWithWater(Integer value)
  {
    if(value == null)
    {
      setValue(NUMBERWITHWATER, "");
    }
    else
    {
      setValue(NUMBERWITHWATER, java.lang.Integer.toString(value));
    }
  }
  
  public java.math.BigDecimal getPremiseSize()
  {
    return com.runwaysdk.constants.MdAttributeDecimalUtil.getTypeSafeValue(getValue(PREMISESIZE));
  }
  
  public void validatePremiseSize()
  {
    this.validateAttribute(PREMISESIZE);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getPremiseSizeMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.export.ImmatureCollectionExcelView.CLASS);
    return mdClassIF.definesAttribute(PREMISESIZE);
  }
  
  public void setPremiseSize(java.math.BigDecimal value)
  {
    if(value == null)
    {
      setValue(PREMISESIZE, "");
    }
    else
    {
      setValue(PREMISESIZE, value.toString());
    }
  }
  
  public String getPremiseType()
  {
    return getValue(PREMISETYPE);
  }
  
  public void validatePremiseType()
  {
    this.validateAttribute(PREMISETYPE);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getPremiseTypeMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.export.ImmatureCollectionExcelView.CLASS);
    return mdClassIF.definesAttribute(PREMISETYPE);
  }
  
  public void setPremiseType(String value)
  {
    if(value == null)
    {
      setValue(PREMISETYPE, "");
    }
    else
    {
      setValue(PREMISETYPE, value);
    }
  }
  
  public java.util.Date getStartDate()
  {
    return com.runwaysdk.constants.MdAttributeDateUtil.getTypeSafeValue(getValue(STARTDATE));
  }
  
  public void validateStartDate()
  {
    this.validateAttribute(STARTDATE);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getStartDateMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.export.ImmatureCollectionExcelView.CLASS);
    return mdClassIF.definesAttribute(STARTDATE);
  }
  
  public void setStartDate(java.util.Date value)
  {
    if(value == null)
    {
      setValue(STARTDATE, "");
    }
    else
    {
      setValue(STARTDATE, new java.text.SimpleDateFormat(com.runwaysdk.constants.Constants.DATE_FORMAT).format(value));
    }
  }
  
  public String getTaxon()
  {
    return getValue(TAXON);
  }
  
  public void validateTaxon()
  {
    this.validateAttribute(TAXON);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getTaxonMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.export.ImmatureCollectionExcelView.CLASS);
    return mdClassIF.definesAttribute(TAXON);
  }
  
  public void setTaxon(String value)
  {
    if(value == null)
    {
      setValue(TAXON, "");
    }
    else
    {
      setValue(TAXON, value);
    }
  }
  
  protected String getDeclaredType()
  {
    return CLASS;
  }
  
  public static ImmatureCollectionExcelView get(String id)
  {
    return (ImmatureCollectionExcelView) com.runwaysdk.business.View.get(id);
  }
  
  public String toString()
  {
    if (this.isNew())
    {
      return "New: "+ this.getClassDisplayLabel();
    }
    else
    {
      return super.toString();
    }
  }
}
