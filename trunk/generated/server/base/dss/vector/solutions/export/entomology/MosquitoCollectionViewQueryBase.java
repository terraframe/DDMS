package dss.vector.solutions.export.entomology;

@com.terraframe.mojo.business.ClassSignature(hash = 641514234)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to MosquitoCollectionView.java
 *
 * @author Autogenerated by TerraFrame
 */
public  abstract  class MosquitoCollectionViewQueryBase extends com.terraframe.mojo.query.GeneratedViewQuery
 implements com.terraframe.mojo.generation.loader.Reloadable
{
private static final long serialVersionUID = 641514234;

  public MosquitoCollectionViewQueryBase(com.terraframe.mojo.query.QueryFactory componentQueryFactory)
  {
    super(componentQueryFactory);
  }

  public MosquitoCollectionViewQueryBase(com.terraframe.mojo.query.QueryFactory componentQueryFactory, com.terraframe.mojo.query.ViewQueryBuilder viewQueryBuilder)
  {
    super(componentQueryFactory, viewQueryBuilder);
  }
  public String getClassType()
  {
    return dss.vector.solutions.export.entomology.MosquitoCollectionView.CLASS;
  }
  public com.terraframe.mojo.query.AttributeChar getCollectionMethod()
  {
    return getCollectionMethod(null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getCollectionMethod(String alias)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.getSelectable(dss.vector.solutions.export.entomology.MosquitoCollectionView.COLLECTIONMETHOD, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getCollectionMethod(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.getSelectable(dss.vector.solutions.export.entomology.MosquitoCollectionView.COLLECTIONMETHOD, alias, displayLabel);

  }
 
  public com.terraframe.mojo.query.AttributeMoment getDateCollected()
  {
    return getDateCollected(null);

  }
 
  public com.terraframe.mojo.query.AttributeMoment getDateCollected(String alias)
  {
    return (com.terraframe.mojo.query.AttributeMoment)this.getSelectable(dss.vector.solutions.export.entomology.MosquitoCollectionView.DATECOLLECTED, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeMoment getDateCollected(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeMoment)this.getSelectable(dss.vector.solutions.export.entomology.MosquitoCollectionView.DATECOLLECTED, alias, displayLabel);

  }
 
  public dss.vector.solutions.geo.generated.GeoEntityQuery.GeoEntityQueryReferenceIF getGeoEntity()
  {
    return getGeoEntity(null);

  }
 
  public dss.vector.solutions.geo.generated.GeoEntityQuery.GeoEntityQueryReferenceIF getGeoEntity(String alias)
  {

    return (dss.vector.solutions.geo.generated.GeoEntityQuery.GeoEntityQueryReferenceIF)this.getSelectable(dss.vector.solutions.export.entomology.MosquitoCollectionView.GEOENTITY, alias, null);

  }
 
  public dss.vector.solutions.geo.generated.GeoEntityQuery.GeoEntityQueryReferenceIF getGeoEntity(String alias, String displayLabel)
  {

    return (dss.vector.solutions.geo.generated.GeoEntityQuery.GeoEntityQueryReferenceIF)this.getSelectable(dss.vector.solutions.export.entomology.MosquitoCollectionView.GEOENTITY, alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeChar getId()
  {
    return getId(null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getId(String alias)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.getSelectable(dss.vector.solutions.export.entomology.MosquitoCollectionView.ID, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getId(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.getSelectable(dss.vector.solutions.export.entomology.MosquitoCollectionView.ID, alias, displayLabel);

  }
 
  public com.terraframe.mojo.query.AttributeChar getIdentificationMethod()
  {
    return getIdentificationMethod(null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getIdentificationMethod(String alias)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.getSelectable(dss.vector.solutions.export.entomology.MosquitoCollectionView.IDENTIFICATIONMETHOD, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getIdentificationMethod(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.getSelectable(dss.vector.solutions.export.entomology.MosquitoCollectionView.IDENTIFICATIONMETHOD, alias, displayLabel);

  }
 
  public com.terraframe.mojo.query.AttributeInteger getQuantity()
  {
    return getQuantity(null);

  }
 
  public com.terraframe.mojo.query.AttributeInteger getQuantity(String alias)
  {
    return (com.terraframe.mojo.query.AttributeInteger)this.getSelectable(dss.vector.solutions.export.entomology.MosquitoCollectionView.QUANTITY, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeInteger getQuantity(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeInteger)this.getSelectable(dss.vector.solutions.export.entomology.MosquitoCollectionView.QUANTITY, alias, displayLabel);

  }
 
  public com.terraframe.mojo.query.AttributeInteger getQuantityFemale()
  {
    return getQuantityFemale(null);

  }
 
  public com.terraframe.mojo.query.AttributeInteger getQuantityFemale(String alias)
  {
    return (com.terraframe.mojo.query.AttributeInteger)this.getSelectable(dss.vector.solutions.export.entomology.MosquitoCollectionView.QUANTITYFEMALE, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeInteger getQuantityFemale(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeInteger)this.getSelectable(dss.vector.solutions.export.entomology.MosquitoCollectionView.QUANTITYFEMALE, alias, displayLabel);

  }
 
  public com.terraframe.mojo.query.AttributeInteger getQuantityMale()
  {
    return getQuantityMale(null);

  }
 
  public com.terraframe.mojo.query.AttributeInteger getQuantityMale(String alias)
  {
    return (com.terraframe.mojo.query.AttributeInteger)this.getSelectable(dss.vector.solutions.export.entomology.MosquitoCollectionView.QUANTITYMALE, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeInteger getQuantityMale(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeInteger)this.getSelectable(dss.vector.solutions.export.entomology.MosquitoCollectionView.QUANTITYMALE, alias, displayLabel);

  }
 
  public com.terraframe.mojo.query.AttributeChar getSpecie()
  {
    return getSpecie(null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getSpecie(String alias)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.getSelectable(dss.vector.solutions.export.entomology.MosquitoCollectionView.SPECIE, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getSpecie(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.getSelectable(dss.vector.solutions.export.entomology.MosquitoCollectionView.SPECIE, alias, displayLabel);

  }
 
  /**  
   * Returns an iterator of Business objects that match the query criteria specified
   * on this query object. 
   * @return iterator of Business objects that match the query criteria specified
   * on this query object.
   */
  @java.lang.SuppressWarnings("unchecked")
  public com.terraframe.mojo.query.OIterator<? extends MosquitoCollectionView> getIterator()
  {
    com.terraframe.mojo.query.ValueIterator valueIterator;
    if (_pageSize != null && _pageNumber != null)
    {
      valueIterator = (com.terraframe.mojo.query.ValueIterator<com.terraframe.mojo.dataaccess.ValueObject>)this.getComponentQuery().getIterator(_pageSize, _pageNumber);
    }
    else
    {
      valueIterator = (com.terraframe.mojo.query.ValueIterator<com.terraframe.mojo.dataaccess.ValueObject>)this.getComponentQuery().getIterator();
    }
    return new com.terraframe.mojo.query.ViewIterator<MosquitoCollectionView>(this.getMdClassIF(), valueIterator);
  }

}
