package dss.vector.solutions.export;

@com.runwaysdk.business.ClassSignature(hash = -1850962877)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to PupalCollectionExcelView.java
 *
 * @author Autogenerated by RunwaySDK
 */
public abstract class PupalCollectionExcelViewBase extends com.runwaysdk.business.View implements com.runwaysdk.generation.loader.Reloadable
{
  public final static String CLASS = "dss.vector.solutions.export.PupalCollectionExcelView";
  public static java.lang.String COLLECTIONID = "collectionId";
  public static java.lang.String CONTAINERID = "containerId";
  public static java.lang.String CONTAINERLENGTH = "containerLength";
  public static java.lang.String CONTAINERTYPE = "containerType";
  public static java.lang.String DIAMETER = "diameter";
  public static java.lang.String DRAWDOWNFREQUENCY = "drawdownFrequency";
  public static java.lang.String DRAWDOWNPERCENT = "drawdownPercent";
  public static java.lang.String ENDDATE = "endDate";
  public static java.lang.String FILLFREQUENCY = "fillFrequency";
  public static java.lang.String FILLMETHOD = "fillMethod";
  public static java.lang.String GEOENTITY = "geoEntity";
  public static java.lang.String HEIGHT = "height";
  public static java.lang.String ID = "id";
  public static java.lang.String LID = "lid";
  public static java.lang.String NOTES = "notes";
  public static java.lang.String NUMBEREXAMINED = "numberExamined";
  public static java.lang.String NUMBERINHABITANTS = "numberInhabitants";
  public static java.lang.String OPENINGDIAMETER = "openingDiameter";
  public static java.lang.String OPENINGLENGTH = "openingLength";
  public static java.lang.String OPENINGWIDTH = "openingWidth";
  public static java.lang.String PREMISESIZE = "premiseSize";
  public static java.lang.String PREMISETYPE = "premiseType";
  public static java.lang.String ROOF = "roof";
  public static java.lang.String SHADING = "shading";
  public static java.lang.String SHAPE = "shape";
  public static java.lang.String STARTDATE = "startDate";
  public static java.lang.String WIDTH = "width";
  private static final long serialVersionUID = -1850962877;
  
  public PupalCollectionExcelViewBase()
  {
    super();
  }
  
  public String getCollectionId()
  {
    return getValue(COLLECTIONID);
  }
  
  public void validateCollectionId()
  {
    this.validateAttribute(COLLECTIONID);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getCollectionIdMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.export.PupalCollectionExcelView.CLASS);
    return mdClassIF.definesAttribute(COLLECTIONID);
  }
  
  public void setCollectionId(String value)
  {
    if(value == null)
    {
      setValue(COLLECTIONID, "");
    }
    else
    {
      setValue(COLLECTIONID, value);
    }
  }
  
  public String getContainerId()
  {
    return getValue(CONTAINERID);
  }
  
  public void validateContainerId()
  {
    this.validateAttribute(CONTAINERID);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getContainerIdMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.export.PupalCollectionExcelView.CLASS);
    return mdClassIF.definesAttribute(CONTAINERID);
  }
  
  public void setContainerId(String value)
  {
    if(value == null)
    {
      setValue(CONTAINERID, "");
    }
    else
    {
      setValue(CONTAINERID, value);
    }
  }
  
  public java.math.BigDecimal getContainerLength()
  {
    return com.runwaysdk.constants.MdAttributeDecimalUtil.getTypeSafeValue(getValue(CONTAINERLENGTH));
  }
  
  public void validateContainerLength()
  {
    this.validateAttribute(CONTAINERLENGTH);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getContainerLengthMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.export.PupalCollectionExcelView.CLASS);
    return mdClassIF.definesAttribute(CONTAINERLENGTH);
  }
  
  public void setContainerLength(java.math.BigDecimal value)
  {
    if(value == null)
    {
      setValue(CONTAINERLENGTH, "");
    }
    else
    {
      setValue(CONTAINERLENGTH, value.toString());
    }
  }
  
  public String getContainerType()
  {
    return getValue(CONTAINERTYPE);
  }
  
  public void validateContainerType()
  {
    this.validateAttribute(CONTAINERTYPE);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getContainerTypeMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.export.PupalCollectionExcelView.CLASS);
    return mdClassIF.definesAttribute(CONTAINERTYPE);
  }
  
  public void setContainerType(String value)
  {
    if(value == null)
    {
      setValue(CONTAINERTYPE, "");
    }
    else
    {
      setValue(CONTAINERTYPE, value);
    }
  }
  
  public java.math.BigDecimal getDiameter()
  {
    return com.runwaysdk.constants.MdAttributeDecimalUtil.getTypeSafeValue(getValue(DIAMETER));
  }
  
  public void validateDiameter()
  {
    this.validateAttribute(DIAMETER);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getDiameterMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.export.PupalCollectionExcelView.CLASS);
    return mdClassIF.definesAttribute(DIAMETER);
  }
  
  public void setDiameter(java.math.BigDecimal value)
  {
    if(value == null)
    {
      setValue(DIAMETER, "");
    }
    else
    {
      setValue(DIAMETER, value.toString());
    }
  }
  
  public String getDrawdownFrequency()
  {
    return getValue(DRAWDOWNFREQUENCY);
  }
  
  public void validateDrawdownFrequency()
  {
    this.validateAttribute(DRAWDOWNFREQUENCY);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getDrawdownFrequencyMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.export.PupalCollectionExcelView.CLASS);
    return mdClassIF.definesAttribute(DRAWDOWNFREQUENCY);
  }
  
  public void setDrawdownFrequency(String value)
  {
    if(value == null)
    {
      setValue(DRAWDOWNFREQUENCY, "");
    }
    else
    {
      setValue(DRAWDOWNFREQUENCY, value);
    }
  }
  
  public Integer getDrawdownPercent()
  {
    return com.runwaysdk.constants.MdAttributeIntegerUtil.getTypeSafeValue(getValue(DRAWDOWNPERCENT));
  }
  
  public void validateDrawdownPercent()
  {
    this.validateAttribute(DRAWDOWNPERCENT);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getDrawdownPercentMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.export.PupalCollectionExcelView.CLASS);
    return mdClassIF.definesAttribute(DRAWDOWNPERCENT);
  }
  
  public void setDrawdownPercent(Integer value)
  {
    if(value == null)
    {
      setValue(DRAWDOWNPERCENT, "");
    }
    else
    {
      setValue(DRAWDOWNPERCENT, java.lang.Integer.toString(value));
    }
  }
  
  public java.util.Date getEndDate()
  {
    return com.runwaysdk.constants.MdAttributeDateUtil.getTypeSafeValue(getValue(ENDDATE));
  }
  
  public void validateEndDate()
  {
    this.validateAttribute(ENDDATE);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getEndDateMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.export.PupalCollectionExcelView.CLASS);
    return mdClassIF.definesAttribute(ENDDATE);
  }
  
  public void setEndDate(java.util.Date value)
  {
    if(value == null)
    {
      setValue(ENDDATE, "");
    }
    else
    {
      setValue(ENDDATE, new java.text.SimpleDateFormat(com.runwaysdk.constants.Constants.DATE_FORMAT).format(value));
    }
  }
  
  public String getFillFrequency()
  {
    return getValue(FILLFREQUENCY);
  }
  
  public void validateFillFrequency()
  {
    this.validateAttribute(FILLFREQUENCY);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getFillFrequencyMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.export.PupalCollectionExcelView.CLASS);
    return mdClassIF.definesAttribute(FILLFREQUENCY);
  }
  
  public void setFillFrequency(String value)
  {
    if(value == null)
    {
      setValue(FILLFREQUENCY, "");
    }
    else
    {
      setValue(FILLFREQUENCY, value);
    }
  }
  
  public String getFillMethod()
  {
    return getValue(FILLMETHOD);
  }
  
  public void validateFillMethod()
  {
    this.validateAttribute(FILLMETHOD);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getFillMethodMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.export.PupalCollectionExcelView.CLASS);
    return mdClassIF.definesAttribute(FILLMETHOD);
  }
  
  public void setFillMethod(String value)
  {
    if(value == null)
    {
      setValue(FILLMETHOD, "");
    }
    else
    {
      setValue(FILLMETHOD, value);
    }
  }
  
  public dss.vector.solutions.geo.generated.GeoEntity getGeoEntity()
  {
    if (getValue(GEOENTITY).trim().equals(""))
    {
      return null;
    }
    else
    {
      return dss.vector.solutions.geo.generated.GeoEntity.get(getValue(GEOENTITY));
    }
  }
  
  public void validateGeoEntity()
  {
    this.validateAttribute(GEOENTITY);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getGeoEntityMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.export.PupalCollectionExcelView.CLASS);
    return mdClassIF.definesAttribute(GEOENTITY);
  }
  
  public void setGeoEntity(dss.vector.solutions.geo.generated.GeoEntity value)
  {
    if(value == null)
    {
      setValue(GEOENTITY, "");
    }
    else
    {
      setValue(GEOENTITY, value.getId());
    }
  }
  
  public java.math.BigDecimal getHeight()
  {
    return com.runwaysdk.constants.MdAttributeDecimalUtil.getTypeSafeValue(getValue(HEIGHT));
  }
  
  public void validateHeight()
  {
    this.validateAttribute(HEIGHT);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getHeightMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.export.PupalCollectionExcelView.CLASS);
    return mdClassIF.definesAttribute(HEIGHT);
  }
  
  public void setHeight(java.math.BigDecimal value)
  {
    if(value == null)
    {
      setValue(HEIGHT, "");
    }
    else
    {
      setValue(HEIGHT, value.toString());
    }
  }
  
  public String getId()
  {
    return getValue(ID);
  }
  
  public void validateId()
  {
    this.validateAttribute(ID);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getIdMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.export.PupalCollectionExcelView.CLASS);
    return mdClassIF.definesAttribute(ID);
  }
  
  public String getLid()
  {
    return getValue(LID);
  }
  
  public void validateLid()
  {
    this.validateAttribute(LID);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getLidMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.export.PupalCollectionExcelView.CLASS);
    return mdClassIF.definesAttribute(LID);
  }
  
  public void setLid(String value)
  {
    if(value == null)
    {
      setValue(LID, "");
    }
    else
    {
      setValue(LID, value);
    }
  }
  
  public String getNotes()
  {
    return getValue(NOTES);
  }
  
  public void validateNotes()
  {
    this.validateAttribute(NOTES);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getNotesMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.export.PupalCollectionExcelView.CLASS);
    return mdClassIF.definesAttribute(NOTES);
  }
  
  public void setNotes(String value)
  {
    if(value == null)
    {
      setValue(NOTES, "");
    }
    else
    {
      setValue(NOTES, value);
    }
  }
  
  public Integer getNumberExamined()
  {
    return com.runwaysdk.constants.MdAttributeIntegerUtil.getTypeSafeValue(getValue(NUMBEREXAMINED));
  }
  
  public void validateNumberExamined()
  {
    this.validateAttribute(NUMBEREXAMINED);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getNumberExaminedMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.export.PupalCollectionExcelView.CLASS);
    return mdClassIF.definesAttribute(NUMBEREXAMINED);
  }
  
  public void setNumberExamined(Integer value)
  {
    if(value == null)
    {
      setValue(NUMBEREXAMINED, "");
    }
    else
    {
      setValue(NUMBEREXAMINED, java.lang.Integer.toString(value));
    }
  }
  
  public Integer getNumberInhabitants()
  {
    return com.runwaysdk.constants.MdAttributeIntegerUtil.getTypeSafeValue(getValue(NUMBERINHABITANTS));
  }
  
  public void validateNumberInhabitants()
  {
    this.validateAttribute(NUMBERINHABITANTS);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getNumberInhabitantsMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.export.PupalCollectionExcelView.CLASS);
    return mdClassIF.definesAttribute(NUMBERINHABITANTS);
  }
  
  public void setNumberInhabitants(Integer value)
  {
    if(value == null)
    {
      setValue(NUMBERINHABITANTS, "");
    }
    else
    {
      setValue(NUMBERINHABITANTS, java.lang.Integer.toString(value));
    }
  }
  
  public java.math.BigDecimal getOpeningDiameter()
  {
    return com.runwaysdk.constants.MdAttributeDecimalUtil.getTypeSafeValue(getValue(OPENINGDIAMETER));
  }
  
  public void validateOpeningDiameter()
  {
    this.validateAttribute(OPENINGDIAMETER);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getOpeningDiameterMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.export.PupalCollectionExcelView.CLASS);
    return mdClassIF.definesAttribute(OPENINGDIAMETER);
  }
  
  public void setOpeningDiameter(java.math.BigDecimal value)
  {
    if(value == null)
    {
      setValue(OPENINGDIAMETER, "");
    }
    else
    {
      setValue(OPENINGDIAMETER, value.toString());
    }
  }
  
  public java.math.BigDecimal getOpeningLength()
  {
    return com.runwaysdk.constants.MdAttributeDecimalUtil.getTypeSafeValue(getValue(OPENINGLENGTH));
  }
  
  public void validateOpeningLength()
  {
    this.validateAttribute(OPENINGLENGTH);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getOpeningLengthMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.export.PupalCollectionExcelView.CLASS);
    return mdClassIF.definesAttribute(OPENINGLENGTH);
  }
  
  public void setOpeningLength(java.math.BigDecimal value)
  {
    if(value == null)
    {
      setValue(OPENINGLENGTH, "");
    }
    else
    {
      setValue(OPENINGLENGTH, value.toString());
    }
  }
  
  public java.math.BigDecimal getOpeningWidth()
  {
    return com.runwaysdk.constants.MdAttributeDecimalUtil.getTypeSafeValue(getValue(OPENINGWIDTH));
  }
  
  public void validateOpeningWidth()
  {
    this.validateAttribute(OPENINGWIDTH);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getOpeningWidthMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.export.PupalCollectionExcelView.CLASS);
    return mdClassIF.definesAttribute(OPENINGWIDTH);
  }
  
  public void setOpeningWidth(java.math.BigDecimal value)
  {
    if(value == null)
    {
      setValue(OPENINGWIDTH, "");
    }
    else
    {
      setValue(OPENINGWIDTH, value.toString());
    }
  }
  
  public java.math.BigDecimal getPremiseSize()
  {
    return com.runwaysdk.constants.MdAttributeDecimalUtil.getTypeSafeValue(getValue(PREMISESIZE));
  }
  
  public void validatePremiseSize()
  {
    this.validateAttribute(PREMISESIZE);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getPremiseSizeMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.export.PupalCollectionExcelView.CLASS);
    return mdClassIF.definesAttribute(PREMISESIZE);
  }
  
  public void setPremiseSize(java.math.BigDecimal value)
  {
    if(value == null)
    {
      setValue(PREMISESIZE, "");
    }
    else
    {
      setValue(PREMISESIZE, value.toString());
    }
  }
  
  public String getPremiseType()
  {
    return getValue(PREMISETYPE);
  }
  
  public void validatePremiseType()
  {
    this.validateAttribute(PREMISETYPE);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getPremiseTypeMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.export.PupalCollectionExcelView.CLASS);
    return mdClassIF.definesAttribute(PREMISETYPE);
  }
  
  public void setPremiseType(String value)
  {
    if(value == null)
    {
      setValue(PREMISETYPE, "");
    }
    else
    {
      setValue(PREMISETYPE, value);
    }
  }
  
  public String getRoof()
  {
    return getValue(ROOF);
  }
  
  public void validateRoof()
  {
    this.validateAttribute(ROOF);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getRoofMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.export.PupalCollectionExcelView.CLASS);
    return mdClassIF.definesAttribute(ROOF);
  }
  
  public void setRoof(String value)
  {
    if(value == null)
    {
      setValue(ROOF, "");
    }
    else
    {
      setValue(ROOF, value);
    }
  }
  
  public String getShading()
  {
    return getValue(SHADING);
  }
  
  public void validateShading()
  {
    this.validateAttribute(SHADING);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getShadingMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.export.PupalCollectionExcelView.CLASS);
    return mdClassIF.definesAttribute(SHADING);
  }
  
  public void setShading(String value)
  {
    if(value == null)
    {
      setValue(SHADING, "");
    }
    else
    {
      setValue(SHADING, value);
    }
  }
  
  public String getShape()
  {
    return getValue(SHAPE);
  }
  
  public void validateShape()
  {
    this.validateAttribute(SHAPE);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getShapeMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.export.PupalCollectionExcelView.CLASS);
    return mdClassIF.definesAttribute(SHAPE);
  }
  
  public void setShape(String value)
  {
    if(value == null)
    {
      setValue(SHAPE, "");
    }
    else
    {
      setValue(SHAPE, value);
    }
  }
  
  public java.util.Date getStartDate()
  {
    return com.runwaysdk.constants.MdAttributeDateUtil.getTypeSafeValue(getValue(STARTDATE));
  }
  
  public void validateStartDate()
  {
    this.validateAttribute(STARTDATE);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getStartDateMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.export.PupalCollectionExcelView.CLASS);
    return mdClassIF.definesAttribute(STARTDATE);
  }
  
  public void setStartDate(java.util.Date value)
  {
    if(value == null)
    {
      setValue(STARTDATE, "");
    }
    else
    {
      setValue(STARTDATE, new java.text.SimpleDateFormat(com.runwaysdk.constants.Constants.DATE_FORMAT).format(value));
    }
  }
  
  public java.math.BigDecimal getWidth()
  {
    return com.runwaysdk.constants.MdAttributeDecimalUtil.getTypeSafeValue(getValue(WIDTH));
  }
  
  public void validateWidth()
  {
    this.validateAttribute(WIDTH);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDAOIF getWidthMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.export.PupalCollectionExcelView.CLASS);
    return mdClassIF.definesAttribute(WIDTH);
  }
  
  public void setWidth(java.math.BigDecimal value)
  {
    if(value == null)
    {
      setValue(WIDTH, "");
    }
    else
    {
      setValue(WIDTH, value.toString());
    }
  }
  
  protected String getDeclaredType()
  {
    return CLASS;
  }
  
  public static PupalCollectionExcelView get(String id)
  {
    return (PupalCollectionExcelView) com.runwaysdk.business.View.get(id);
  }
  
  public String toString()
  {
    if (this.isNew())
    {
      return "New: "+ this.getClassDisplayLabel();
    }
    else
    {
      return super.toString();
    }
  }
}
