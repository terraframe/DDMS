package dss.vector.solutions.intervention.monitor;

@com.terraframe.mojo.business.ClassSignature(hash = -1890280302)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to AggregatedIPTView.java
 *
 * @author Autogenerated by TerraFrame
 */
public abstract class AggregatedIPTViewBase extends com.terraframe.mojo.business.View implements com.terraframe.mojo.generation.loader.Reloadable
{
  public final static String CLASS = "dss.vector.solutions.intervention.monitor.AggregatedIPTView";
  public static java.lang.String CONCRETEID = "concreteId";
  public static java.lang.String DISPLAYDOSE = "displayDose";
  public static java.lang.String DISPLAYPATIENTS = "displayPatients";
  public static java.lang.String DISPLAYTREATMENTS = "displayTreatments";
  public static java.lang.String DISPLAYVISITS = "displayVisits";
  public static java.lang.String ENDDATE = "endDate";
  public static java.lang.String GEOID = "geoId";
  public static java.lang.String ID = "id";
  public static java.lang.String NUMBERNATALCARE = "numberNatalCare";
  public static java.lang.String NUMBERPREGNANT = "numberPregnant";
  public static java.lang.String NUMBERPREGNANTITN = "numberPregnantITN";
  public static java.lang.String NUMBERPREGNANTIRON = "numberPregnantIron";
  public static java.lang.String PERIOD = "period";
  public static java.lang.String PERIODTYPE = "periodType";
  public static java.lang.String PERIODYEAR = "periodYear";
  public static java.lang.String SEARCHTYPE = "searchType";
  public static java.lang.String STARTDATE = "startDate";
  public static java.lang.String TOTALITN = "totalITN";
  private static final long serialVersionUID = -1890280302;
  
  public AggregatedIPTViewBase()
  {
    super();
  }
  
  public String getConcreteId()
  {
    return getValue(CONCRETEID);
  }
  
  public void validateConcreteId()
  {
    this.validateAttribute(CONCRETEID);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getConcreteIdMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.intervention.monitor.AggregatedIPTView.CLASS);
    return mdClassIF.definesAttribute(CONCRETEID);
  }
  
  public void setConcreteId(String value)
  {
    if(value == null)
    {
      setValue(CONCRETEID, "");
    }
    else
    {
      setValue(CONCRETEID, value);
    }
  }
  
  public dss.vector.solutions.ontology.Term getDisplayDose()
  {
    if (getValue(DISPLAYDOSE).trim().equals(""))
    {
      return null;
    }
    else
    {
      return dss.vector.solutions.ontology.Term.get(getValue(DISPLAYDOSE));
    }
  }
  
  public void validateDisplayDose()
  {
    this.validateAttribute(DISPLAYDOSE);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getDisplayDoseMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.intervention.monitor.AggregatedIPTView.CLASS);
    return mdClassIF.definesAttribute(DISPLAYDOSE);
  }
  
  public void setDisplayDose(dss.vector.solutions.ontology.Term value)
  {
    if(value == null)
    {
      setValue(DISPLAYDOSE, "");
    }
    else
    {
      setValue(DISPLAYDOSE, value.getId());
    }
  }
  
  public dss.vector.solutions.ontology.Term getDisplayPatients()
  {
    if (getValue(DISPLAYPATIENTS).trim().equals(""))
    {
      return null;
    }
    else
    {
      return dss.vector.solutions.ontology.Term.get(getValue(DISPLAYPATIENTS));
    }
  }
  
  public void validateDisplayPatients()
  {
    this.validateAttribute(DISPLAYPATIENTS);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getDisplayPatientsMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.intervention.monitor.AggregatedIPTView.CLASS);
    return mdClassIF.definesAttribute(DISPLAYPATIENTS);
  }
  
  public void setDisplayPatients(dss.vector.solutions.ontology.Term value)
  {
    if(value == null)
    {
      setValue(DISPLAYPATIENTS, "");
    }
    else
    {
      setValue(DISPLAYPATIENTS, value.getId());
    }
  }
  
  public dss.vector.solutions.ontology.Term getDisplayTreatments()
  {
    if (getValue(DISPLAYTREATMENTS).trim().equals(""))
    {
      return null;
    }
    else
    {
      return dss.vector.solutions.ontology.Term.get(getValue(DISPLAYTREATMENTS));
    }
  }
  
  public void validateDisplayTreatments()
  {
    this.validateAttribute(DISPLAYTREATMENTS);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getDisplayTreatmentsMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.intervention.monitor.AggregatedIPTView.CLASS);
    return mdClassIF.definesAttribute(DISPLAYTREATMENTS);
  }
  
  public void setDisplayTreatments(dss.vector.solutions.ontology.Term value)
  {
    if(value == null)
    {
      setValue(DISPLAYTREATMENTS, "");
    }
    else
    {
      setValue(DISPLAYTREATMENTS, value.getId());
    }
  }
  
  public dss.vector.solutions.ontology.Term getDisplayVisits()
  {
    if (getValue(DISPLAYVISITS).trim().equals(""))
    {
      return null;
    }
    else
    {
      return dss.vector.solutions.ontology.Term.get(getValue(DISPLAYVISITS));
    }
  }
  
  public void validateDisplayVisits()
  {
    this.validateAttribute(DISPLAYVISITS);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getDisplayVisitsMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.intervention.monitor.AggregatedIPTView.CLASS);
    return mdClassIF.definesAttribute(DISPLAYVISITS);
  }
  
  public void setDisplayVisits(dss.vector.solutions.ontology.Term value)
  {
    if(value == null)
    {
      setValue(DISPLAYVISITS, "");
    }
    else
    {
      setValue(DISPLAYVISITS, value.getId());
    }
  }
  
  public java.util.Date getEndDate()
  {
    return com.terraframe.mojo.constants.MdAttributeDateUtil.getTypeSafeValue(getValue(ENDDATE));
  }
  
  public void validateEndDate()
  {
    this.validateAttribute(ENDDATE);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getEndDateMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.intervention.monitor.AggregatedIPTView.CLASS);
    return mdClassIF.definesAttribute(ENDDATE);
  }
  
  public void setEndDate(java.util.Date value)
  {
    if(value == null)
    {
      setValue(ENDDATE, "");
    }
    else
    {
      setValue(ENDDATE, new java.text.SimpleDateFormat(com.terraframe.mojo.constants.Constants.DATE_FORMAT).format(value));
    }
  }
  
  public String getGeoId()
  {
    return getValue(GEOID);
  }
  
  public void validateGeoId()
  {
    this.validateAttribute(GEOID);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getGeoIdMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.intervention.monitor.AggregatedIPTView.CLASS);
    return mdClassIF.definesAttribute(GEOID);
  }
  
  public void setGeoId(String value)
  {
    if(value == null)
    {
      setValue(GEOID, "");
    }
    else
    {
      setValue(GEOID, value);
    }
  }
  
  public String getId()
  {
    return getValue(ID);
  }
  
  public void validateId()
  {
    this.validateAttribute(ID);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getIdMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.intervention.monitor.AggregatedIPTView.CLASS);
    return mdClassIF.definesAttribute(ID);
  }
  
  public Integer getNumberNatalCare()
  {
    return com.terraframe.mojo.constants.MdAttributeIntegerUtil.getTypeSafeValue(getValue(NUMBERNATALCARE));
  }
  
  public void validateNumberNatalCare()
  {
    this.validateAttribute(NUMBERNATALCARE);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getNumberNatalCareMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.intervention.monitor.AggregatedIPTView.CLASS);
    return mdClassIF.definesAttribute(NUMBERNATALCARE);
  }
  
  public void setNumberNatalCare(Integer value)
  {
    if(value == null)
    {
      setValue(NUMBERNATALCARE, "");
    }
    else
    {
      setValue(NUMBERNATALCARE, java.lang.Integer.toString(value));
    }
  }
  
  public Integer getNumberPregnant()
  {
    return com.terraframe.mojo.constants.MdAttributeIntegerUtil.getTypeSafeValue(getValue(NUMBERPREGNANT));
  }
  
  public void validateNumberPregnant()
  {
    this.validateAttribute(NUMBERPREGNANT);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getNumberPregnantMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.intervention.monitor.AggregatedIPTView.CLASS);
    return mdClassIF.definesAttribute(NUMBERPREGNANT);
  }
  
  public void setNumberPregnant(Integer value)
  {
    if(value == null)
    {
      setValue(NUMBERPREGNANT, "");
    }
    else
    {
      setValue(NUMBERPREGNANT, java.lang.Integer.toString(value));
    }
  }
  
  public Integer getNumberPregnantITN()
  {
    return com.terraframe.mojo.constants.MdAttributeIntegerUtil.getTypeSafeValue(getValue(NUMBERPREGNANTITN));
  }
  
  public void validateNumberPregnantITN()
  {
    this.validateAttribute(NUMBERPREGNANTITN);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getNumberPregnantITNMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.intervention.monitor.AggregatedIPTView.CLASS);
    return mdClassIF.definesAttribute(NUMBERPREGNANTITN);
  }
  
  public void setNumberPregnantITN(Integer value)
  {
    if(value == null)
    {
      setValue(NUMBERPREGNANTITN, "");
    }
    else
    {
      setValue(NUMBERPREGNANTITN, java.lang.Integer.toString(value));
    }
  }
  
  public Integer getNumberPregnantIron()
  {
    return com.terraframe.mojo.constants.MdAttributeIntegerUtil.getTypeSafeValue(getValue(NUMBERPREGNANTIRON));
  }
  
  public void validateNumberPregnantIron()
  {
    this.validateAttribute(NUMBERPREGNANTIRON);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getNumberPregnantIronMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.intervention.monitor.AggregatedIPTView.CLASS);
    return mdClassIF.definesAttribute(NUMBERPREGNANTIRON);
  }
  
  public void setNumberPregnantIron(Integer value)
  {
    if(value == null)
    {
      setValue(NUMBERPREGNANTIRON, "");
    }
    else
    {
      setValue(NUMBERPREGNANTIRON, java.lang.Integer.toString(value));
    }
  }
  
  public Integer getPeriod()
  {
    return com.terraframe.mojo.constants.MdAttributeIntegerUtil.getTypeSafeValue(getValue(PERIOD));
  }
  
  public void validatePeriod()
  {
    this.validateAttribute(PERIOD);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getPeriodMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.intervention.monitor.AggregatedIPTView.CLASS);
    return mdClassIF.definesAttribute(PERIOD);
  }
  
  public void setPeriod(Integer value)
  {
    if(value == null)
    {
      setValue(PERIOD, "");
    }
    else
    {
      setValue(PERIOD, java.lang.Integer.toString(value));
    }
  }
  
  @SuppressWarnings("unchecked")
  public java.util.List<dss.vector.solutions.surveillance.PeriodType> getPeriodType()
  {
    return (java.util.List<dss.vector.solutions.surveillance.PeriodType>) getEnumValues(PERIODTYPE);
  }
  
  public void addPeriodType(dss.vector.solutions.surveillance.PeriodType value)
  {
    if(value != null)
    {
      addEnumItem(PERIODTYPE, value.getId());
    }
  }
  
  public void removePeriodType(dss.vector.solutions.surveillance.PeriodType value)
  {
    if(value != null)
    {
      removeEnumItem(PERIODTYPE, value.getId());
    }
  }
  
  public void clearPeriodType()
  {
    clearEnum(PERIODTYPE);
  }
  
  public void validatePeriodType()
  {
    this.validateAttribute(PERIODTYPE);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getPeriodTypeMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.intervention.monitor.AggregatedIPTView.CLASS);
    return mdClassIF.definesAttribute(PERIODTYPE);
  }
  
  public Integer getPeriodYear()
  {
    return com.terraframe.mojo.constants.MdAttributeIntegerUtil.getTypeSafeValue(getValue(PERIODYEAR));
  }
  
  public void validatePeriodYear()
  {
    this.validateAttribute(PERIODYEAR);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getPeriodYearMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.intervention.monitor.AggregatedIPTView.CLASS);
    return mdClassIF.definesAttribute(PERIODYEAR);
  }
  
  public void setPeriodYear(Integer value)
  {
    if(value == null)
    {
      setValue(PERIODYEAR, "");
    }
    else
    {
      setValue(PERIODYEAR, java.lang.Integer.toString(value));
    }
  }
  
  public Boolean getSearchType()
  {
    return com.terraframe.mojo.constants.MdAttributeBooleanUtil.getTypeSafeValue(getValue(SEARCHTYPE));
  }
  
  public void validateSearchType()
  {
    this.validateAttribute(SEARCHTYPE);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getSearchTypeMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.intervention.monitor.AggregatedIPTView.CLASS);
    return mdClassIF.definesAttribute(SEARCHTYPE);
  }
  
  public void setSearchType(Boolean value)
  {
    if(value == null)
    {
      setValue(SEARCHTYPE, "");
    }
    else
    {
      setValue(SEARCHTYPE, java.lang.Boolean.toString(value));
    }
  }
  
  public java.util.Date getStartDate()
  {
    return com.terraframe.mojo.constants.MdAttributeDateUtil.getTypeSafeValue(getValue(STARTDATE));
  }
  
  public void validateStartDate()
  {
    this.validateAttribute(STARTDATE);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getStartDateMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.intervention.monitor.AggregatedIPTView.CLASS);
    return mdClassIF.definesAttribute(STARTDATE);
  }
  
  public void setStartDate(java.util.Date value)
  {
    if(value == null)
    {
      setValue(STARTDATE, "");
    }
    else
    {
      setValue(STARTDATE, new java.text.SimpleDateFormat(com.terraframe.mojo.constants.Constants.DATE_FORMAT).format(value));
    }
  }
  
  public Integer getTotalITN()
  {
    return com.terraframe.mojo.constants.MdAttributeIntegerUtil.getTypeSafeValue(getValue(TOTALITN));
  }
  
  public void validateTotalITN()
  {
    this.validateAttribute(TOTALITN);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getTotalITNMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.intervention.monitor.AggregatedIPTView.CLASS);
    return mdClassIF.definesAttribute(TOTALITN);
  }
  
  public void setTotalITN(Integer value)
  {
    if(value == null)
    {
      setValue(TOTALITN, "");
    }
    else
    {
      setValue(TOTALITN, java.lang.Integer.toString(value));
    }
  }
  
  protected String getDeclaredType()
  {
    return CLASS;
  }
  
  public static AggregatedIPTView get(String id)
  {
    return (AggregatedIPTView) com.terraframe.mojo.business.View.get(id);
  }
  
  public void applyAll(dss.vector.solutions.intervention.monitor.IPTPatients[] patients, dss.vector.solutions.intervention.monitor.IPTANCVisit[] visits, dss.vector.solutions.intervention.monitor.IPTDose[] doses, dss.vector.solutions.intervention.monitor.IPTTreatment[] treatments)
  {
    String msg = "This method should never be invoked.  It should be overwritten in dss.vector.solutions.intervention.monitor.AggregatedIPTView.java";
    throw new com.terraframe.mojo.dataaccess.metadata.ForbiddenMethodException(msg);
  }
  
  public static final void applyAll(java.lang.String id, dss.vector.solutions.intervention.monitor.IPTPatients[] patients, dss.vector.solutions.intervention.monitor.IPTANCVisit[] visits, dss.vector.solutions.intervention.monitor.IPTDose[] doses, dss.vector.solutions.intervention.monitor.IPTTreatment[] treatments)
  {
    AggregatedIPTView _instance = AggregatedIPTView.get(id);
    _instance.applyAll(patients, visits, doses, treatments);
  }
  
  public void deleteConcrete()
  {
    String msg = "This method should never be invoked.  It should be overwritten in dss.vector.solutions.intervention.monitor.AggregatedIPTView.java";
    throw new com.terraframe.mojo.dataaccess.metadata.ForbiddenMethodException(msg);
  }
  
  public static final void deleteConcrete(java.lang.String id)
  {
    AggregatedIPTView _instance = AggregatedIPTView.get(id);
    _instance.deleteConcrete();
  }
  
  public dss.vector.solutions.intervention.monitor.IPTANCVisit[] getIPTANCVisits()
  {
    String msg = "This method should never be invoked.  It should be overwritten in dss.vector.solutions.intervention.monitor.AggregatedIPTView.java";
    throw new com.terraframe.mojo.dataaccess.metadata.ForbiddenMethodException(msg);
  }
  
  public static final dss.vector.solutions.intervention.monitor.IPTANCVisit[] getIPTANCVisits(java.lang.String id)
  {
    AggregatedIPTView _instance = AggregatedIPTView.get(id);
    return _instance.getIPTANCVisits();
  }
  
  public dss.vector.solutions.intervention.monitor.IPTDose[] getIPTDoses()
  {
    String msg = "This method should never be invoked.  It should be overwritten in dss.vector.solutions.intervention.monitor.AggregatedIPTView.java";
    throw new com.terraframe.mojo.dataaccess.metadata.ForbiddenMethodException(msg);
  }
  
  public static final dss.vector.solutions.intervention.monitor.IPTDose[] getIPTDoses(java.lang.String id)
  {
    AggregatedIPTView _instance = AggregatedIPTView.get(id);
    return _instance.getIPTDoses();
  }
  
  public dss.vector.solutions.intervention.monitor.IPTPatients[] getIPTPatients()
  {
    String msg = "This method should never be invoked.  It should be overwritten in dss.vector.solutions.intervention.monitor.AggregatedIPTView.java";
    throw new com.terraframe.mojo.dataaccess.metadata.ForbiddenMethodException(msg);
  }
  
  public static final dss.vector.solutions.intervention.monitor.IPTPatients[] getIPTPatients(java.lang.String id)
  {
    AggregatedIPTView _instance = AggregatedIPTView.get(id);
    return _instance.getIPTPatients();
  }
  
  public dss.vector.solutions.intervention.monitor.IPTTreatment[] getIPTTreatments()
  {
    String msg = "This method should never be invoked.  It should be overwritten in dss.vector.solutions.intervention.monitor.AggregatedIPTView.java";
    throw new com.terraframe.mojo.dataaccess.metadata.ForbiddenMethodException(msg);
  }
  
  public static final dss.vector.solutions.intervention.monitor.IPTTreatment[] getIPTTreatments(java.lang.String id)
  {
    AggregatedIPTView _instance = AggregatedIPTView.get(id);
    return _instance.getIPTTreatments();
  }
  
  public dss.vector.solutions.intervention.monitor.AggregatedIPTView searchByView()
  {
    String msg = "This method should never be invoked.  It should be overwritten in dss.vector.solutions.intervention.monitor.AggregatedIPTView.java";
    throw new com.terraframe.mojo.dataaccess.metadata.ForbiddenMethodException(msg);
  }
  
  public static final dss.vector.solutions.intervention.monitor.AggregatedIPTView searchByView(java.lang.String id)
  {
    AggregatedIPTView _instance = AggregatedIPTView.get(id);
    return _instance.searchByView();
  }
  
  public String toString()
  {
    if (this.isNew())
    {
      return "New: "+ this.getClassDisplayLabel();
    }
    else
    {
      return super.toString();
    }
  }
}
