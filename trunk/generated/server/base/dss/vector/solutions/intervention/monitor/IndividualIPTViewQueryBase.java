package dss.vector.solutions.intervention.monitor;

@com.runwaysdk.business.ClassSignature(hash = 29506963)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to IndividualIPTView.java
 *
 * @author Autogenerated by RunwaySDK
 */
public  abstract  class IndividualIPTViewQueryBase extends com.runwaysdk.query.GeneratedViewQuery
 implements com.runwaysdk.generation.loader.Reloadable
{
private static final long serialVersionUID = 29506963;

  public IndividualIPTViewQueryBase(com.runwaysdk.query.QueryFactory componentQueryFactory)
  {
    super(componentQueryFactory);
  }

  public IndividualIPTViewQueryBase(com.runwaysdk.query.QueryFactory componentQueryFactory, com.runwaysdk.query.ViewQueryBuilder viewQueryBuilder)
  {
    super(componentQueryFactory, viewQueryBuilder);
  }
  public String getClassType()
  {
    return dss.vector.solutions.intervention.monitor.IndividualIPTView.CLASS;
  }
  public com.runwaysdk.query.SelectableChar getAdministratorName()
  {
    return getAdministratorName(null);

  }
 
  public com.runwaysdk.query.SelectableChar getAdministratorName(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getSelectable(dss.vector.solutions.intervention.monitor.IndividualIPTView.ADMINISTRATORNAME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getAdministratorName(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getSelectable(dss.vector.solutions.intervention.monitor.IndividualIPTView.ADMINISTRATORNAME, alias, displayLabel);

  }
 
  public com.runwaysdk.query.SelectableChar getAdministratorSurname()
  {
    return getAdministratorSurname(null);

  }
 
  public com.runwaysdk.query.SelectableChar getAdministratorSurname(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getSelectable(dss.vector.solutions.intervention.monitor.IndividualIPTView.ADMINISTRATORSURNAME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getAdministratorSurname(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getSelectable(dss.vector.solutions.intervention.monitor.IndividualIPTView.ADMINISTRATORSURNAME, alias, displayLabel);

  }
 
  public com.runwaysdk.query.SelectableChar getConcreteId()
  {
    return getConcreteId(null);

  }
 
  public com.runwaysdk.query.SelectableChar getConcreteId(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getSelectable(dss.vector.solutions.intervention.monitor.IndividualIPTView.CONCRETEID, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getConcreteId(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getSelectable(dss.vector.solutions.intervention.monitor.IndividualIPTView.CONCRETEID, alias, displayLabel);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getDoseNumber()
  {
    return getDoseNumber(null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getDoseNumber(String alias)
  {

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getSelectable(dss.vector.solutions.intervention.monitor.IndividualIPTView.DOSENUMBER, alias, null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getDoseNumber(String alias, String displayLabel)
  {

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getSelectable(dss.vector.solutions.intervention.monitor.IndividualIPTView.DOSENUMBER, alias, displayLabel);

  }
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getDoseType()
  {
    return getDoseType(null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getDoseType(String alias)
  {

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getSelectable(dss.vector.solutions.intervention.monitor.IndividualIPTView.DOSETYPE, alias, null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getDoseType(String alias, String displayLabel)
  {

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getSelectable(dss.vector.solutions.intervention.monitor.IndividualIPTView.DOSETYPE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getFacility()
  {
    return getFacility(null);

  }
 
  public com.runwaysdk.query.SelectableChar getFacility(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getSelectable(dss.vector.solutions.intervention.monitor.IndividualIPTView.FACILITY, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getFacility(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getSelectable(dss.vector.solutions.intervention.monitor.IndividualIPTView.FACILITY, alias, displayLabel);

  }
 
  public com.runwaysdk.query.SelectableChar getFacilityName()
  {
    return getFacilityName(null);

  }
 
  public com.runwaysdk.query.SelectableChar getFacilityName(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getSelectable(dss.vector.solutions.intervention.monitor.IndividualIPTView.FACILITYNAME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getFacilityName(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getSelectable(dss.vector.solutions.intervention.monitor.IndividualIPTView.FACILITYNAME, alias, displayLabel);

  }
 
  public com.runwaysdk.query.SelectableChar getId()
  {
    return getId(null);

  }
 
  public com.runwaysdk.query.SelectableChar getId(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getSelectable(dss.vector.solutions.intervention.monitor.IndividualIPTView.ID, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getId(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getSelectable(dss.vector.solutions.intervention.monitor.IndividualIPTView.ID, alias, displayLabel);

  }
 
  public dss.vector.solutions.intervention.monitor.IndividualIPTCaseQuery.IndividualIPTCaseQueryReferenceIF getIptCase()
  {
    return getIptCase(null);

  }
 
  public dss.vector.solutions.intervention.monitor.IndividualIPTCaseQuery.IndividualIPTCaseQueryReferenceIF getIptCase(String alias)
  {

    return (dss.vector.solutions.intervention.monitor.IndividualIPTCaseQuery.IndividualIPTCaseQueryReferenceIF)this.getSelectable(dss.vector.solutions.intervention.monitor.IndividualIPTView.IPTCASE, alias, null);

  }
 
  public dss.vector.solutions.intervention.monitor.IndividualIPTCaseQuery.IndividualIPTCaseQueryReferenceIF getIptCase(String alias, String displayLabel)
  {

    return (dss.vector.solutions.intervention.monitor.IndividualIPTCaseQuery.IndividualIPTCaseQueryReferenceIF)this.getSelectable(dss.vector.solutions.intervention.monitor.IndividualIPTView.IPTCASE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableBoolean getIsANCVisit()
  {
    return getIsANCVisit(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getIsANCVisit(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getSelectable(dss.vector.solutions.intervention.monitor.IndividualIPTView.ISANCVISIT, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getIsANCVisit(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getSelectable(dss.vector.solutions.intervention.monitor.IndividualIPTView.ISANCVISIT, alias, displayLabel);

  }
 
  public com.runwaysdk.query.SelectableInteger getNumberOfReceivedITNs()
  {
    return getNumberOfReceivedITNs(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getNumberOfReceivedITNs(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getSelectable(dss.vector.solutions.intervention.monitor.IndividualIPTView.NUMBEROFRECEIVEDITNS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getNumberOfReceivedITNs(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getSelectable(dss.vector.solutions.intervention.monitor.IndividualIPTView.NUMBEROFRECEIVEDITNS, alias, displayLabel);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getPatientType()
  {
    return getPatientType(null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getPatientType(String alias)
  {

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getSelectable(dss.vector.solutions.intervention.monitor.IndividualIPTView.PATIENTTYPE, alias, null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getPatientType(String alias, String displayLabel)
  {

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getSelectable(dss.vector.solutions.intervention.monitor.IndividualIPTView.PATIENTTYPE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableBoolean getReceivedITN()
  {
    return getReceivedITN(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getReceivedITN(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getSelectable(dss.vector.solutions.intervention.monitor.IndividualIPTView.RECEIVEDITN, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getReceivedITN(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getSelectable(dss.vector.solutions.intervention.monitor.IndividualIPTView.RECEIVEDITN, alias, displayLabel);

  }
 
  public com.runwaysdk.query.SelectableBoolean getReceivedSupplement()
  {
    return getReceivedSupplement(null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getReceivedSupplement(String alias)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getSelectable(dss.vector.solutions.intervention.monitor.IndividualIPTView.RECEIVEDSUPPLEMENT, alias, null);

  }
 
  public com.runwaysdk.query.SelectableBoolean getReceivedSupplement(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableBoolean)this.getSelectable(dss.vector.solutions.intervention.monitor.IndividualIPTView.RECEIVEDSUPPLEMENT, alias, displayLabel);

  }
 
  public com.runwaysdk.query.SelectableMoment getServiceDate()
  {
    return getServiceDate(null);

  }
 
  public com.runwaysdk.query.SelectableMoment getServiceDate(String alias)
  {
    return (com.runwaysdk.query.SelectableMoment)this.getSelectable(dss.vector.solutions.intervention.monitor.IndividualIPTView.SERVICEDATE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableMoment getServiceDate(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableMoment)this.getSelectable(dss.vector.solutions.intervention.monitor.IndividualIPTView.SERVICEDATE, alias, displayLabel);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getVisitNumber()
  {
    return getVisitNumber(null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getVisitNumber(String alias)
  {

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getSelectable(dss.vector.solutions.intervention.monitor.IndividualIPTView.VISITNUMBER, alias, null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getVisitNumber(String alias, String displayLabel)
  {

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getSelectable(dss.vector.solutions.intervention.monitor.IndividualIPTView.VISITNUMBER, alias, displayLabel);

  }
  /**  
   * Returns an iterator of Business objects that match the query criteria specified
   * on this query object. 
   * @return iterator of Business objects that match the query criteria specified
   * on this query object.
   */
  @java.lang.SuppressWarnings("unchecked")
  public com.runwaysdk.query.OIterator<? extends IndividualIPTView> getIterator()
  {
    com.runwaysdk.query.ValueIterator valueIterator;
    if (_pageSize != null && _pageNumber != null)
    {
      valueIterator = (com.runwaysdk.query.ValueIterator<com.runwaysdk.dataaccess.ValueObject>)this.getComponentQuery().getIterator(_pageSize, _pageNumber);
    }
    else
    {
      valueIterator = (com.runwaysdk.query.ValueIterator<com.runwaysdk.dataaccess.ValueObject>)this.getComponentQuery().getIterator();
    }
    return new com.runwaysdk.query.ViewIterator<IndividualIPTView>(this.getMdClassIF(), valueIterator);
  }

}
