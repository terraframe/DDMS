package dss.vector.solutions.intervention.monitor;

@com.terraframe.mojo.business.ClassSignature(hash = 2048934549)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to AggregatedIPT.java
 *
 * @author Autogenerated by TerraFrame
 */
public  class AggregatedIPTQuery extends com.terraframe.mojo.query.GeneratedBusinessQuery
 implements com.terraframe.mojo.generation.loader.Reloadable
{
private static final long serialVersionUID = 2048934549;

  public AggregatedIPTQuery(com.terraframe.mojo.query.QueryFactory componentQueryFactory)
  {
     super();
    if (this.getComponentQuery() == null)
    {
      com.terraframe.mojo.business.BusinessQuery businessQuery = componentQueryFactory.businessQuery(this.getClassType());

       this.setBusinessQuery(businessQuery);
    }
  }

  public AggregatedIPTQuery(com.terraframe.mojo.query.ValueQuery valueQuery)
  {
     super();
    if (this.getComponentQuery() == null)
    {
      com.terraframe.mojo.business.BusinessQuery businessQuery = new com.terraframe.mojo.business.BusinessQuery(valueQuery, this.getClassType());

       this.setBusinessQuery(businessQuery);
    }
  }

  public String getClassType()
  {
    return dss.vector.solutions.intervention.monitor.AggregatedIPT.CLASS;
  }
  public com.terraframe.mojo.query.AttributeMoment getCreateDate()
  {
    return getCreateDate(null);

  }
 
  public com.terraframe.mojo.query.AttributeMoment getCreateDate(String alias)
  {
    return (com.terraframe.mojo.query.AttributeMoment)this.getComponentQuery().attributeFactory(dss.vector.solutions.intervention.monitor.AggregatedIPT.CREATEDATE, "com.terraframe.mojo.system.metadata.MdAttributeDateTime", alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeMoment getCreateDate(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeMoment)this.getComponentQuery().attributeFactory(dss.vector.solutions.intervention.monitor.AggregatedIPT.CREATEDATE, "com.terraframe.mojo.system.metadata.MdAttributeDateTime", alias, displayLabel);

  }
  public com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy()
  {
    return getCreatedBy(null);

  }
 
  public com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias)
  {

    com.terraframe.mojo.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap("createdBy");

    return (com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.intervention.monitor.AggregatedIPT.CREATEDBY, mdAttributeIF, this, alias, null);

  }
 
  public com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias, String displayLabel)
  {

    com.terraframe.mojo.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap("createdBy");

    return (com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.intervention.monitor.AggregatedIPT.CREATEDBY, mdAttributeIF, this, alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeMoment getEndDate()
  {
    return getEndDate(null);

  }
 
  public com.terraframe.mojo.query.AttributeMoment getEndDate(String alias)
  {
    return (com.terraframe.mojo.query.AttributeMoment)this.getComponentQuery().attributeFactory(dss.vector.solutions.intervention.monitor.AggregatedIPT.ENDDATE, "com.terraframe.mojo.system.metadata.MdAttributeDate", alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeMoment getEndDate(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeMoment)this.getComponentQuery().attributeFactory(dss.vector.solutions.intervention.monitor.AggregatedIPT.ENDDATE, "com.terraframe.mojo.system.metadata.MdAttributeDate", alias, displayLabel);

  }
  public com.terraframe.mojo.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain()
  {
    return getEntityDomain(null);

  }
 
  public com.terraframe.mojo.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias)
  {

    com.terraframe.mojo.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap("entityDomain");

    return (com.terraframe.mojo.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.intervention.monitor.AggregatedIPT.ENTITYDOMAIN, mdAttributeIF, this, alias, null);

  }
 
  public com.terraframe.mojo.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias, String displayLabel)
  {

    com.terraframe.mojo.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap("entityDomain");

    return (com.terraframe.mojo.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.intervention.monitor.AggregatedIPT.ENTITYDOMAIN, mdAttributeIF, this, alias, displayLabel);

  }
  public dss.vector.solutions.geo.generated.GeoEntityQuery.GeoEntityQueryReferenceIF getGeoEntity()
  {
    return getGeoEntity(null);

  }
 
  public dss.vector.solutions.geo.generated.GeoEntityQuery.GeoEntityQueryReferenceIF getGeoEntity(String alias)
  {

    com.terraframe.mojo.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap("geoEntity");

    return (dss.vector.solutions.geo.generated.GeoEntityQuery.GeoEntityQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.intervention.monitor.AggregatedIPT.GEOENTITY, mdAttributeIF, this, alias, null);

  }
 
  public dss.vector.solutions.geo.generated.GeoEntityQuery.GeoEntityQueryReferenceIF getGeoEntity(String alias, String displayLabel)
  {

    com.terraframe.mojo.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap("geoEntity");

    return (dss.vector.solutions.geo.generated.GeoEntityQuery.GeoEntityQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.intervention.monitor.AggregatedIPT.GEOENTITY, mdAttributeIF, this, alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeChar getId()
  {
    return getId(null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getId(String alias)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.getComponentQuery().attributeFactory(dss.vector.solutions.intervention.monitor.AggregatedIPT.ID, "com.terraframe.mojo.system.metadata.MdAttributeCharacter", alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getId(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.getComponentQuery().attributeFactory(dss.vector.solutions.intervention.monitor.AggregatedIPT.ID, "com.terraframe.mojo.system.metadata.MdAttributeCharacter", alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeChar getKeyName()
  {
    return getKeyName(null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getKeyName(String alias)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.getComponentQuery().attributeFactory(dss.vector.solutions.intervention.monitor.AggregatedIPT.KEYNAME, "com.terraframe.mojo.system.metadata.MdAttributeCharacter", alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getKeyName(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.getComponentQuery().attributeFactory(dss.vector.solutions.intervention.monitor.AggregatedIPT.KEYNAME, "com.terraframe.mojo.system.metadata.MdAttributeCharacter", alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeMoment getLastUpdateDate()
  {
    return getLastUpdateDate(null);

  }
 
  public com.terraframe.mojo.query.AttributeMoment getLastUpdateDate(String alias)
  {
    return (com.terraframe.mojo.query.AttributeMoment)this.getComponentQuery().attributeFactory(dss.vector.solutions.intervention.monitor.AggregatedIPT.LASTUPDATEDATE, "com.terraframe.mojo.system.metadata.MdAttributeDateTime", alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeMoment getLastUpdateDate(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeMoment)this.getComponentQuery().attributeFactory(dss.vector.solutions.intervention.monitor.AggregatedIPT.LASTUPDATEDATE, "com.terraframe.mojo.system.metadata.MdAttributeDateTime", alias, displayLabel);

  }
  public com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy()
  {
    return getLastUpdatedBy(null);

  }
 
  public com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias)
  {

    com.terraframe.mojo.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap("lastUpdatedBy");

    return (com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.intervention.monitor.AggregatedIPT.LASTUPDATEDBY, mdAttributeIF, this, alias, null);

  }
 
  public com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias, String displayLabel)
  {

    com.terraframe.mojo.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap("lastUpdatedBy");

    return (com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.intervention.monitor.AggregatedIPT.LASTUPDATEDBY, mdAttributeIF, this, alias, displayLabel);

  }
  public com.terraframe.mojo.system.UsersQuery.UsersQueryReferenceIF getLockedBy()
  {
    return getLockedBy(null);

  }
 
  public com.terraframe.mojo.system.UsersQuery.UsersQueryReferenceIF getLockedBy(String alias)
  {

    com.terraframe.mojo.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap("lockedBy");

    return (com.terraframe.mojo.system.UsersQuery.UsersQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.intervention.monitor.AggregatedIPT.LOCKEDBY, mdAttributeIF, this, alias, null);

  }
 
  public com.terraframe.mojo.system.UsersQuery.UsersQueryReferenceIF getLockedBy(String alias, String displayLabel)
  {

    com.terraframe.mojo.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap("lockedBy");

    return (com.terraframe.mojo.system.UsersQuery.UsersQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.intervention.monitor.AggregatedIPT.LOCKEDBY, mdAttributeIF, this, alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeInteger getNumberNatalCare()
  {
    return getNumberNatalCare(null);

  }
 
  public com.terraframe.mojo.query.AttributeInteger getNumberNatalCare(String alias)
  {
    return (com.terraframe.mojo.query.AttributeInteger)this.getComponentQuery().attributeFactory(dss.vector.solutions.intervention.monitor.AggregatedIPT.NUMBERNATALCARE, "com.terraframe.mojo.system.metadata.MdAttributeInteger", alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeInteger getNumberNatalCare(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeInteger)this.getComponentQuery().attributeFactory(dss.vector.solutions.intervention.monitor.AggregatedIPT.NUMBERNATALCARE, "com.terraframe.mojo.system.metadata.MdAttributeInteger", alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeInteger getNumberPregnant()
  {
    return getNumberPregnant(null);

  }
 
  public com.terraframe.mojo.query.AttributeInteger getNumberPregnant(String alias)
  {
    return (com.terraframe.mojo.query.AttributeInteger)this.getComponentQuery().attributeFactory(dss.vector.solutions.intervention.monitor.AggregatedIPT.NUMBERPREGNANT, "com.terraframe.mojo.system.metadata.MdAttributeInteger", alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeInteger getNumberPregnant(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeInteger)this.getComponentQuery().attributeFactory(dss.vector.solutions.intervention.monitor.AggregatedIPT.NUMBERPREGNANT, "com.terraframe.mojo.system.metadata.MdAttributeInteger", alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeInteger getNumberPregnantITN()
  {
    return getNumberPregnantITN(null);

  }
 
  public com.terraframe.mojo.query.AttributeInteger getNumberPregnantITN(String alias)
  {
    return (com.terraframe.mojo.query.AttributeInteger)this.getComponentQuery().attributeFactory(dss.vector.solutions.intervention.monitor.AggregatedIPT.NUMBERPREGNANTITN, "com.terraframe.mojo.system.metadata.MdAttributeInteger", alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeInteger getNumberPregnantITN(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeInteger)this.getComponentQuery().attributeFactory(dss.vector.solutions.intervention.monitor.AggregatedIPT.NUMBERPREGNANTITN, "com.terraframe.mojo.system.metadata.MdAttributeInteger", alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeInteger getNumberPregnantIron()
  {
    return getNumberPregnantIron(null);

  }
 
  public com.terraframe.mojo.query.AttributeInteger getNumberPregnantIron(String alias)
  {
    return (com.terraframe.mojo.query.AttributeInteger)this.getComponentQuery().attributeFactory(dss.vector.solutions.intervention.monitor.AggregatedIPT.NUMBERPREGNANTIRON, "com.terraframe.mojo.system.metadata.MdAttributeInteger", alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeInteger getNumberPregnantIron(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeInteger)this.getComponentQuery().attributeFactory(dss.vector.solutions.intervention.monitor.AggregatedIPT.NUMBERPREGNANTIRON, "com.terraframe.mojo.system.metadata.MdAttributeInteger", alias, displayLabel);

  }
  public com.terraframe.mojo.system.ActorQuery.ActorQueryReferenceIF getOwner()
  {
    return getOwner(null);

  }
 
  public com.terraframe.mojo.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias)
  {

    com.terraframe.mojo.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap("owner");

    return (com.terraframe.mojo.system.ActorQuery.ActorQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.intervention.monitor.AggregatedIPT.OWNER, mdAttributeIF, this, alias, null);

  }
 
  public com.terraframe.mojo.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias, String displayLabel)
  {

    com.terraframe.mojo.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap("owner");

    return (com.terraframe.mojo.system.ActorQuery.ActorQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.intervention.monitor.AggregatedIPT.OWNER, mdAttributeIF, this, alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeLong getSeq()
  {
    return getSeq(null);

  }
 
  public com.terraframe.mojo.query.AttributeLong getSeq(String alias)
  {
    return (com.terraframe.mojo.query.AttributeLong)this.getComponentQuery().attributeFactory(dss.vector.solutions.intervention.monitor.AggregatedIPT.SEQ, "com.terraframe.mojo.system.metadata.MdAttributeLong", alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeLong getSeq(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeLong)this.getComponentQuery().attributeFactory(dss.vector.solutions.intervention.monitor.AggregatedIPT.SEQ, "com.terraframe.mojo.system.metadata.MdAttributeLong", alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeChar getSiteMaster()
  {
    return getSiteMaster(null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getSiteMaster(String alias)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.getComponentQuery().attributeFactory(dss.vector.solutions.intervention.monitor.AggregatedIPT.SITEMASTER, "com.terraframe.mojo.system.metadata.MdAttributeCharacter", alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getSiteMaster(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.getComponentQuery().attributeFactory(dss.vector.solutions.intervention.monitor.AggregatedIPT.SITEMASTER, "com.terraframe.mojo.system.metadata.MdAttributeCharacter", alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeMoment getStartDate()
  {
    return getStartDate(null);

  }
 
  public com.terraframe.mojo.query.AttributeMoment getStartDate(String alias)
  {
    return (com.terraframe.mojo.query.AttributeMoment)this.getComponentQuery().attributeFactory(dss.vector.solutions.intervention.monitor.AggregatedIPT.STARTDATE, "com.terraframe.mojo.system.metadata.MdAttributeDate", alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeMoment getStartDate(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeMoment)this.getComponentQuery().attributeFactory(dss.vector.solutions.intervention.monitor.AggregatedIPT.STARTDATE, "com.terraframe.mojo.system.metadata.MdAttributeDate", alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeInteger getTotalITN()
  {
    return getTotalITN(null);

  }
 
  public com.terraframe.mojo.query.AttributeInteger getTotalITN(String alias)
  {
    return (com.terraframe.mojo.query.AttributeInteger)this.getComponentQuery().attributeFactory(dss.vector.solutions.intervention.monitor.AggregatedIPT.TOTALITN, "com.terraframe.mojo.system.metadata.MdAttributeInteger", alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeInteger getTotalITN(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeInteger)this.getComponentQuery().attributeFactory(dss.vector.solutions.intervention.monitor.AggregatedIPT.TOTALITN, "com.terraframe.mojo.system.metadata.MdAttributeInteger", alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeChar getType()
  {
    return getType(null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getType(String alias)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.getComponentQuery().attributeFactory(dss.vector.solutions.intervention.monitor.AggregatedIPT.TYPE, "com.terraframe.mojo.system.metadata.MdAttributeCharacter", alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getType(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.getComponentQuery().attributeFactory(dss.vector.solutions.intervention.monitor.AggregatedIPT.TYPE, "com.terraframe.mojo.system.metadata.MdAttributeCharacter", alias, displayLabel);

  }
  protected com.terraframe.mojo.query.AttributeReference referenceFactory( com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  com.terraframe.mojo.dataaccess.MdBusinessDAOIF referenceMdBusinessIF, String referenceTableAlias, com.terraframe.mojo.query.ComponentQuery rootQuery, java.util.Set<com.terraframe.mojo.query.Join> tableJoinSet, String userDefinedAlias, String userDefinedDisplayLabel)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals("createdBy")) 
    {
       return new com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReference((com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals("entityDomain")) 
    {
       return new com.terraframe.mojo.system.metadata.MdDomainQuery.MdDomainQueryReference((com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals("geoEntity")) 
    {
       return new dss.vector.solutions.geo.generated.GeoEntityQuery.GeoEntityQueryReference((com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals("lastUpdatedBy")) 
    {
       return new com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReference((com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals("lockedBy")) 
    {
       return new com.terraframe.mojo.system.UsersQuery.UsersQueryReference((com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals("owner")) 
    {
       return new com.terraframe.mojo.system.ActorQuery.ActorQueryReference((com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else 
    {
      String error = "Attribute type ["+mdAttributeIF.getType()+"] is invalid.";
      throw new com.terraframe.mojo.query.QueryException(error);
    }
  }

  /**  
   * Returns an iterator of Business objects that match the query criteria specified
   * on this query object. 
   * @return iterator of Business objects that match the query criteria specified
   * on this query object.
   */
  public com.terraframe.mojo.query.OIterator<? extends AggregatedIPT> getIterator()
  {
    this.checkNotUsedInValueQuery();
    String sqlStmt;
    if (_limit != null && _skip != null)
    {
      sqlStmt = this.getComponentQuery().getSQL(_limit, _skip);
    }
    else
    {
      sqlStmt = this.getComponentQuery().getSQL();
    }
    java.util.Map<String, com.terraframe.mojo.query.ColumnInfo> columnInfoMap = this.getComponentQuery().getColumnInfoMap();

    java.sql.ResultSet results = com.terraframe.mojo.dataaccess.database.Database.query(sqlStmt);
    return new com.terraframe.mojo.business.BusinessIterator<AggregatedIPT>(this.getComponentQuery().getMdEntityIF(), columnInfoMap, results);
  }


  public com.terraframe.mojo.query.Condition aNCVisits()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.IPTANCVisit.CLASS);

    return this.getBusinessQuery().isParentIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition aNCVisits(dss.vector.solutions.intervention.monitor.IPTANCVisitQuery iPTANCVisitQuery)
  {
    return this.getBusinessQuery().isParentIn(iPTANCVisitQuery);
  }

  public com.terraframe.mojo.query.Condition aNCVisits(dss.vector.solutions.ontology.TermQuery termQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.IPTANCVisit.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(termQuery));

    return this.getBusinessQuery().isParentIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition aNCVisits(dss.vector.solutions.ontology.TermQuery termQuery, dss.vector.solutions.intervention.monitor.IPTANCVisitQuery iPTANCVisitQuery)
  {
    iPTANCVisitQuery.AND(iPTANCVisitQuery.hasChild(termQuery));
    return this.getBusinessQuery().isParentIn(iPTANCVisitQuery);
  }


  public com.terraframe.mojo.query.Condition NOT_IN_aNCVisits()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.IPTANCVisit.CLASS);

    return this.getBusinessQuery().isNotParentIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_aNCVisits(dss.vector.solutions.intervention.monitor.IPTANCVisitQuery iPTANCVisitQuery)
  {
    return this.getBusinessQuery().isNotParentIn(iPTANCVisitQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_aNCVisits(dss.vector.solutions.ontology.TermQuery termQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.IPTANCVisit.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(termQuery));

    return this.getBusinessQuery().isNotParentIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_aNCVisits(dss.vector.solutions.ontology.TermQuery termQuery, dss.vector.solutions.intervention.monitor.IPTANCVisitQuery iPTANCVisitQuery)
  {
    iPTANCVisitQuery.AND(iPTANCVisitQuery.hasChild(termQuery));
    return this.getBusinessQuery().isNotParentIn(iPTANCVisitQuery);
  }


  public com.terraframe.mojo.query.Condition doses()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.IPTDose.CLASS);

    return this.getBusinessQuery().isParentIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition doses(dss.vector.solutions.intervention.monitor.IPTDoseQuery iPTDoseQuery)
  {
    return this.getBusinessQuery().isParentIn(iPTDoseQuery);
  }

  public com.terraframe.mojo.query.Condition doses(dss.vector.solutions.ontology.TermQuery termQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.IPTDose.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(termQuery));

    return this.getBusinessQuery().isParentIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition doses(dss.vector.solutions.ontology.TermQuery termQuery, dss.vector.solutions.intervention.monitor.IPTDoseQuery iPTDoseQuery)
  {
    iPTDoseQuery.AND(iPTDoseQuery.hasChild(termQuery));
    return this.getBusinessQuery().isParentIn(iPTDoseQuery);
  }


  public com.terraframe.mojo.query.Condition NOT_IN_doses()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.IPTDose.CLASS);

    return this.getBusinessQuery().isNotParentIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_doses(dss.vector.solutions.intervention.monitor.IPTDoseQuery iPTDoseQuery)
  {
    return this.getBusinessQuery().isNotParentIn(iPTDoseQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_doses(dss.vector.solutions.ontology.TermQuery termQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.IPTDose.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(termQuery));

    return this.getBusinessQuery().isNotParentIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_doses(dss.vector.solutions.ontology.TermQuery termQuery, dss.vector.solutions.intervention.monitor.IPTDoseQuery iPTDoseQuery)
  {
    iPTDoseQuery.AND(iPTDoseQuery.hasChild(termQuery));
    return this.getBusinessQuery().isNotParentIn(iPTDoseQuery);
  }


  public com.terraframe.mojo.query.Condition patients()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.IPTPatients.CLASS);

    return this.getBusinessQuery().isParentIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition patients(dss.vector.solutions.intervention.monitor.IPTPatientsQuery iPTPatientsQuery)
  {
    return this.getBusinessQuery().isParentIn(iPTPatientsQuery);
  }

  public com.terraframe.mojo.query.Condition patients(dss.vector.solutions.ontology.TermQuery termQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.IPTPatients.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(termQuery));

    return this.getBusinessQuery().isParentIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition patients(dss.vector.solutions.ontology.TermQuery termQuery, dss.vector.solutions.intervention.monitor.IPTPatientsQuery iPTPatientsQuery)
  {
    iPTPatientsQuery.AND(iPTPatientsQuery.hasChild(termQuery));
    return this.getBusinessQuery().isParentIn(iPTPatientsQuery);
  }


  public com.terraframe.mojo.query.Condition NOT_IN_patients()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.IPTPatients.CLASS);

    return this.getBusinessQuery().isNotParentIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_patients(dss.vector.solutions.intervention.monitor.IPTPatientsQuery iPTPatientsQuery)
  {
    return this.getBusinessQuery().isNotParentIn(iPTPatientsQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_patients(dss.vector.solutions.ontology.TermQuery termQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.IPTPatients.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(termQuery));

    return this.getBusinessQuery().isNotParentIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_patients(dss.vector.solutions.ontology.TermQuery termQuery, dss.vector.solutions.intervention.monitor.IPTPatientsQuery iPTPatientsQuery)
  {
    iPTPatientsQuery.AND(iPTPatientsQuery.hasChild(termQuery));
    return this.getBusinessQuery().isNotParentIn(iPTPatientsQuery);
  }


  public com.terraframe.mojo.query.Condition treatments()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.IPTTreatment.CLASS);

    return this.getBusinessQuery().isParentIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition treatments(dss.vector.solutions.intervention.monitor.IPTTreatmentQuery iPTTreatmentQuery)
  {
    return this.getBusinessQuery().isParentIn(iPTTreatmentQuery);
  }

  public com.terraframe.mojo.query.Condition treatments(dss.vector.solutions.ontology.TermQuery termQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.IPTTreatment.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(termQuery));

    return this.getBusinessQuery().isParentIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition treatments(dss.vector.solutions.ontology.TermQuery termQuery, dss.vector.solutions.intervention.monitor.IPTTreatmentQuery iPTTreatmentQuery)
  {
    iPTTreatmentQuery.AND(iPTTreatmentQuery.hasChild(termQuery));
    return this.getBusinessQuery().isParentIn(iPTTreatmentQuery);
  }


  public com.terraframe.mojo.query.Condition NOT_IN_treatments()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.IPTTreatment.CLASS);

    return this.getBusinessQuery().isNotParentIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_treatments(dss.vector.solutions.intervention.monitor.IPTTreatmentQuery iPTTreatmentQuery)
  {
    return this.getBusinessQuery().isNotParentIn(iPTTreatmentQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_treatments(dss.vector.solutions.ontology.TermQuery termQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.IPTTreatment.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(termQuery));

    return this.getBusinessQuery().isNotParentIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_treatments(dss.vector.solutions.ontology.TermQuery termQuery, dss.vector.solutions.intervention.monitor.IPTTreatmentQuery iPTTreatmentQuery)
  {
    iPTTreatmentQuery.AND(iPTTreatmentQuery.hasChild(termQuery));
    return this.getBusinessQuery().isNotParentIn(iPTTreatmentQuery);
  }


/**
 * Interface that masks all type unsafe query methods and defines all type safe methods.
 * This type is used when a join is performed on this class as a reference.
 **/
  public interface AggregatedIPTQueryReferenceIF extends com.terraframe.mojo.generation.loader.Reloadable, com.terraframe.mojo.query.SelectableReference
  {

    public com.terraframe.mojo.query.AttributeMoment getCreateDate();
    public com.terraframe.mojo.query.AttributeMoment getCreateDate(String alias);
    public com.terraframe.mojo.query.AttributeMoment getCreateDate(String alias, String displayLabel);
    public com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy();
    public com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias);
    public com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias, String displayLabel);
    public com.terraframe.mojo.query.AttributeMoment getEndDate();
    public com.terraframe.mojo.query.AttributeMoment getEndDate(String alias);
    public com.terraframe.mojo.query.AttributeMoment getEndDate(String alias, String displayLabel);
    public com.terraframe.mojo.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain();
    public com.terraframe.mojo.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias);
    public com.terraframe.mojo.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias, String displayLabel);
    public dss.vector.solutions.geo.generated.GeoEntityQuery.GeoEntityQueryReferenceIF getGeoEntity();
    public dss.vector.solutions.geo.generated.GeoEntityQuery.GeoEntityQueryReferenceIF getGeoEntity(String alias);
    public dss.vector.solutions.geo.generated.GeoEntityQuery.GeoEntityQueryReferenceIF getGeoEntity(String alias, String displayLabel);
    public com.terraframe.mojo.query.AttributeChar getId();
    public com.terraframe.mojo.query.AttributeChar getId(String alias);
    public com.terraframe.mojo.query.AttributeChar getId(String alias, String displayLabel);
    public com.terraframe.mojo.query.AttributeChar getKeyName();
    public com.terraframe.mojo.query.AttributeChar getKeyName(String alias);
    public com.terraframe.mojo.query.AttributeChar getKeyName(String alias, String displayLabel);
    public com.terraframe.mojo.query.AttributeMoment getLastUpdateDate();
    public com.terraframe.mojo.query.AttributeMoment getLastUpdateDate(String alias);
    public com.terraframe.mojo.query.AttributeMoment getLastUpdateDate(String alias, String displayLabel);
    public com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy();
    public com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias);
    public com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias, String displayLabel);
    public com.terraframe.mojo.system.UsersQuery.UsersQueryReferenceIF getLockedBy();
    public com.terraframe.mojo.system.UsersQuery.UsersQueryReferenceIF getLockedBy(String alias);
    public com.terraframe.mojo.system.UsersQuery.UsersQueryReferenceIF getLockedBy(String alias, String displayLabel);
    public com.terraframe.mojo.query.AttributeInteger getNumberNatalCare();
    public com.terraframe.mojo.query.AttributeInteger getNumberNatalCare(String alias);
    public com.terraframe.mojo.query.AttributeInteger getNumberNatalCare(String alias, String displayLabel);
    public com.terraframe.mojo.query.AttributeInteger getNumberPregnant();
    public com.terraframe.mojo.query.AttributeInteger getNumberPregnant(String alias);
    public com.terraframe.mojo.query.AttributeInteger getNumberPregnant(String alias, String displayLabel);
    public com.terraframe.mojo.query.AttributeInteger getNumberPregnantITN();
    public com.terraframe.mojo.query.AttributeInteger getNumberPregnantITN(String alias);
    public com.terraframe.mojo.query.AttributeInteger getNumberPregnantITN(String alias, String displayLabel);
    public com.terraframe.mojo.query.AttributeInteger getNumberPregnantIron();
    public com.terraframe.mojo.query.AttributeInteger getNumberPregnantIron(String alias);
    public com.terraframe.mojo.query.AttributeInteger getNumberPregnantIron(String alias, String displayLabel);
    public com.terraframe.mojo.system.ActorQuery.ActorQueryReferenceIF getOwner();
    public com.terraframe.mojo.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias);
    public com.terraframe.mojo.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias, String displayLabel);
    public com.terraframe.mojo.query.AttributeLong getSeq();
    public com.terraframe.mojo.query.AttributeLong getSeq(String alias);
    public com.terraframe.mojo.query.AttributeLong getSeq(String alias, String displayLabel);
    public com.terraframe.mojo.query.AttributeChar getSiteMaster();
    public com.terraframe.mojo.query.AttributeChar getSiteMaster(String alias);
    public com.terraframe.mojo.query.AttributeChar getSiteMaster(String alias, String displayLabel);
    public com.terraframe.mojo.query.AttributeMoment getStartDate();
    public com.terraframe.mojo.query.AttributeMoment getStartDate(String alias);
    public com.terraframe.mojo.query.AttributeMoment getStartDate(String alias, String displayLabel);
    public com.terraframe.mojo.query.AttributeInteger getTotalITN();
    public com.terraframe.mojo.query.AttributeInteger getTotalITN(String alias);
    public com.terraframe.mojo.query.AttributeInteger getTotalITN(String alias, String displayLabel);
    public com.terraframe.mojo.query.AttributeChar getType();
    public com.terraframe.mojo.query.AttributeChar getType(String alias);
    public com.terraframe.mojo.query.AttributeChar getType(String alias, String displayLabel);

    public com.terraframe.mojo.query.BasicCondition EQ(dss.vector.solutions.intervention.monitor.AggregatedIPT aggregatedIPT);

    public com.terraframe.mojo.query.BasicCondition NE(dss.vector.solutions.intervention.monitor.AggregatedIPT aggregatedIPT);


  public com.terraframe.mojo.query.Condition aNCVisits();

  public com.terraframe.mojo.query.Condition aNCVisits(dss.vector.solutions.ontology.TermQuery termQuery);

  public com.terraframe.mojo.query.Condition aNCVisits(dss.vector.solutions.ontology.TermQuery termQuery, dss.vector.solutions.intervention.monitor.IPTANCVisitQuery iPTANCVisitQuery);


  public com.terraframe.mojo.query.Condition doses();

  public com.terraframe.mojo.query.Condition doses(dss.vector.solutions.ontology.TermQuery termQuery);

  public com.terraframe.mojo.query.Condition doses(dss.vector.solutions.ontology.TermQuery termQuery, dss.vector.solutions.intervention.monitor.IPTDoseQuery iPTDoseQuery);


  public com.terraframe.mojo.query.Condition patients();

  public com.terraframe.mojo.query.Condition patients(dss.vector.solutions.ontology.TermQuery termQuery);

  public com.terraframe.mojo.query.Condition patients(dss.vector.solutions.ontology.TermQuery termQuery, dss.vector.solutions.intervention.monitor.IPTPatientsQuery iPTPatientsQuery);


  public com.terraframe.mojo.query.Condition treatments();

  public com.terraframe.mojo.query.Condition treatments(dss.vector.solutions.ontology.TermQuery termQuery);

  public com.terraframe.mojo.query.Condition treatments(dss.vector.solutions.ontology.TermQuery termQuery, dss.vector.solutions.intervention.monitor.IPTTreatmentQuery iPTTreatmentQuery);


  public com.terraframe.mojo.query.Condition NOT_IN_aNCVisits();

  public com.terraframe.mojo.query.Condition NOT_IN_aNCVisits(dss.vector.solutions.ontology.TermQuery termQuery);

  public com.terraframe.mojo.query.Condition NOT_IN_aNCVisits(dss.vector.solutions.ontology.TermQuery termQuery, dss.vector.solutions.intervention.monitor.IPTANCVisitQuery iPTANCVisitQuery);


  public com.terraframe.mojo.query.Condition NOT_IN_doses();

  public com.terraframe.mojo.query.Condition NOT_IN_doses(dss.vector.solutions.ontology.TermQuery termQuery);

  public com.terraframe.mojo.query.Condition NOT_IN_doses(dss.vector.solutions.ontology.TermQuery termQuery, dss.vector.solutions.intervention.monitor.IPTDoseQuery iPTDoseQuery);


  public com.terraframe.mojo.query.Condition NOT_IN_patients();

  public com.terraframe.mojo.query.Condition NOT_IN_patients(dss.vector.solutions.ontology.TermQuery termQuery);

  public com.terraframe.mojo.query.Condition NOT_IN_patients(dss.vector.solutions.ontology.TermQuery termQuery, dss.vector.solutions.intervention.monitor.IPTPatientsQuery iPTPatientsQuery);


  public com.terraframe.mojo.query.Condition NOT_IN_treatments();

  public com.terraframe.mojo.query.Condition NOT_IN_treatments(dss.vector.solutions.ontology.TermQuery termQuery);

  public com.terraframe.mojo.query.Condition NOT_IN_treatments(dss.vector.solutions.ontology.TermQuery termQuery, dss.vector.solutions.intervention.monitor.IPTTreatmentQuery iPTTreatmentQuery);

  }

/**
 * Implements type safe query methods.
 * This type is used when a join is performed on this class as a reference.
 **/
  public static class AggregatedIPTQueryReference extends com.terraframe.mojo.query.AttributeReference
 implements AggregatedIPTQueryReferenceIF
, com.terraframe.mojo.generation.loader.Reloadable
  {
private static final long serialVersionUID = -1106527945;

  public AggregatedIPTQueryReference(com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias, com.terraframe.mojo.dataaccess.MdBusinessDAOIF referenceMdBusinessIF, String referenceTableAlias, com.terraframe.mojo.query.ComponentQuery rootQuery, java.util.Set<com.terraframe.mojo.query.Join> tableJoinSet, String alias, String displayLabel)
  {
    super(mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, alias, displayLabel);

  }


    public com.terraframe.mojo.query.BasicCondition EQ(dss.vector.solutions.intervention.monitor.AggregatedIPT aggregatedIPT)
    {
      return this.EQ(aggregatedIPT.getId());
    }

    public com.terraframe.mojo.query.BasicCondition NE(dss.vector.solutions.intervention.monitor.AggregatedIPT aggregatedIPT)
    {
      return this.NE(aggregatedIPT.getId());
    }

  public com.terraframe.mojo.query.AttributeMoment getCreateDate()
  {
    return getCreateDate(null);

  }
 
  public com.terraframe.mojo.query.AttributeMoment getCreateDate(String alias)
  {
    return (com.terraframe.mojo.query.AttributeMoment)this.attributeFactory("createDate", "com.terraframe.mojo.system.metadata.MdAttributeDateTime", alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeMoment getCreateDate(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeMoment)this.attributeFactory("createDate", "com.terraframe.mojo.system.metadata.MdAttributeDateTime", alias, displayLabel);

  }
  public com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy()
  {
    return getCreatedBy(null);

  }
 
  public com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias)
  {
    return (com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF)this.attributeFactory("createdBy", "com.terraframe.mojo.system.metadata.MdAttributeReference", alias, null);

  }
 
  public com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF)this.attributeFactory("createdBy", "com.terraframe.mojo.system.metadata.MdAttributeReference", alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeMoment getEndDate()
  {
    return getEndDate(null);

  }
 
  public com.terraframe.mojo.query.AttributeMoment getEndDate(String alias)
  {
    return (com.terraframe.mojo.query.AttributeMoment)this.attributeFactory("endDate", "com.terraframe.mojo.system.metadata.MdAttributeDate", alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeMoment getEndDate(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeMoment)this.attributeFactory("endDate", "com.terraframe.mojo.system.metadata.MdAttributeDate", alias, displayLabel);

  }
  public com.terraframe.mojo.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain()
  {
    return getEntityDomain(null);

  }
 
  public com.terraframe.mojo.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias)
  {
    return (com.terraframe.mojo.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF)this.attributeFactory("entityDomain", "com.terraframe.mojo.system.metadata.MdAttributeReference", alias, null);

  }
 
  public com.terraframe.mojo.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF)this.attributeFactory("entityDomain", "com.terraframe.mojo.system.metadata.MdAttributeReference", alias, displayLabel);

  }
  public dss.vector.solutions.geo.generated.GeoEntityQuery.GeoEntityQueryReferenceIF getGeoEntity()
  {
    return getGeoEntity(null);

  }
 
  public dss.vector.solutions.geo.generated.GeoEntityQuery.GeoEntityQueryReferenceIF getGeoEntity(String alias)
  {
    return (dss.vector.solutions.geo.generated.GeoEntityQuery.GeoEntityQueryReferenceIF)this.attributeFactory("geoEntity", "com.terraframe.mojo.system.metadata.MdAttributeReference", alias, null);

  }
 
  public dss.vector.solutions.geo.generated.GeoEntityQuery.GeoEntityQueryReferenceIF getGeoEntity(String alias, String displayLabel)
  {
    return (dss.vector.solutions.geo.generated.GeoEntityQuery.GeoEntityQueryReferenceIF)this.attributeFactory("geoEntity", "com.terraframe.mojo.system.metadata.MdAttributeReference", alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeChar getId()
  {
    return getId(null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getId(String alias)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.attributeFactory("id", "com.terraframe.mojo.system.metadata.MdAttributeCharacter", alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getId(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.attributeFactory("id", "com.terraframe.mojo.system.metadata.MdAttributeCharacter", alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeChar getKeyName()
  {
    return getKeyName(null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getKeyName(String alias)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.attributeFactory("keyName", "com.terraframe.mojo.system.metadata.MdAttributeCharacter", alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getKeyName(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.attributeFactory("keyName", "com.terraframe.mojo.system.metadata.MdAttributeCharacter", alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeMoment getLastUpdateDate()
  {
    return getLastUpdateDate(null);

  }
 
  public com.terraframe.mojo.query.AttributeMoment getLastUpdateDate(String alias)
  {
    return (com.terraframe.mojo.query.AttributeMoment)this.attributeFactory("lastUpdateDate", "com.terraframe.mojo.system.metadata.MdAttributeDateTime", alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeMoment getLastUpdateDate(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeMoment)this.attributeFactory("lastUpdateDate", "com.terraframe.mojo.system.metadata.MdAttributeDateTime", alias, displayLabel);

  }
  public com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy()
  {
    return getLastUpdatedBy(null);

  }
 
  public com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias)
  {
    return (com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF)this.attributeFactory("lastUpdatedBy", "com.terraframe.mojo.system.metadata.MdAttributeReference", alias, null);

  }
 
  public com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF)this.attributeFactory("lastUpdatedBy", "com.terraframe.mojo.system.metadata.MdAttributeReference", alias, displayLabel);

  }
  public com.terraframe.mojo.system.UsersQuery.UsersQueryReferenceIF getLockedBy()
  {
    return getLockedBy(null);

  }
 
  public com.terraframe.mojo.system.UsersQuery.UsersQueryReferenceIF getLockedBy(String alias)
  {
    return (com.terraframe.mojo.system.UsersQuery.UsersQueryReferenceIF)this.attributeFactory("lockedBy", "com.terraframe.mojo.system.metadata.MdAttributeReference", alias, null);

  }
 
  public com.terraframe.mojo.system.UsersQuery.UsersQueryReferenceIF getLockedBy(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.system.UsersQuery.UsersQueryReferenceIF)this.attributeFactory("lockedBy", "com.terraframe.mojo.system.metadata.MdAttributeReference", alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeInteger getNumberNatalCare()
  {
    return getNumberNatalCare(null);

  }
 
  public com.terraframe.mojo.query.AttributeInteger getNumberNatalCare(String alias)
  {
    return (com.terraframe.mojo.query.AttributeInteger)this.attributeFactory("numberNatalCare", "com.terraframe.mojo.system.metadata.MdAttributeInteger", alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeInteger getNumberNatalCare(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeInteger)this.attributeFactory("numberNatalCare", "com.terraframe.mojo.system.metadata.MdAttributeInteger", alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeInteger getNumberPregnant()
  {
    return getNumberPregnant(null);

  }
 
  public com.terraframe.mojo.query.AttributeInteger getNumberPregnant(String alias)
  {
    return (com.terraframe.mojo.query.AttributeInteger)this.attributeFactory("numberPregnant", "com.terraframe.mojo.system.metadata.MdAttributeInteger", alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeInteger getNumberPregnant(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeInteger)this.attributeFactory("numberPregnant", "com.terraframe.mojo.system.metadata.MdAttributeInteger", alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeInteger getNumberPregnantITN()
  {
    return getNumberPregnantITN(null);

  }
 
  public com.terraframe.mojo.query.AttributeInteger getNumberPregnantITN(String alias)
  {
    return (com.terraframe.mojo.query.AttributeInteger)this.attributeFactory("numberPregnantITN", "com.terraframe.mojo.system.metadata.MdAttributeInteger", alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeInteger getNumberPregnantITN(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeInteger)this.attributeFactory("numberPregnantITN", "com.terraframe.mojo.system.metadata.MdAttributeInteger", alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeInteger getNumberPregnantIron()
  {
    return getNumberPregnantIron(null);

  }
 
  public com.terraframe.mojo.query.AttributeInteger getNumberPregnantIron(String alias)
  {
    return (com.terraframe.mojo.query.AttributeInteger)this.attributeFactory("numberPregnantIron", "com.terraframe.mojo.system.metadata.MdAttributeInteger", alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeInteger getNumberPregnantIron(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeInteger)this.attributeFactory("numberPregnantIron", "com.terraframe.mojo.system.metadata.MdAttributeInteger", alias, displayLabel);

  }
  public com.terraframe.mojo.system.ActorQuery.ActorQueryReferenceIF getOwner()
  {
    return getOwner(null);

  }
 
  public com.terraframe.mojo.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias)
  {
    return (com.terraframe.mojo.system.ActorQuery.ActorQueryReferenceIF)this.attributeFactory("owner", "com.terraframe.mojo.system.metadata.MdAttributeReference", alias, null);

  }
 
  public com.terraframe.mojo.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.system.ActorQuery.ActorQueryReferenceIF)this.attributeFactory("owner", "com.terraframe.mojo.system.metadata.MdAttributeReference", alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeLong getSeq()
  {
    return getSeq(null);

  }
 
  public com.terraframe.mojo.query.AttributeLong getSeq(String alias)
  {
    return (com.terraframe.mojo.query.AttributeLong)this.attributeFactory("seq", "com.terraframe.mojo.system.metadata.MdAttributeLong", alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeLong getSeq(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeLong)this.attributeFactory("seq", "com.terraframe.mojo.system.metadata.MdAttributeLong", alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeChar getSiteMaster()
  {
    return getSiteMaster(null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getSiteMaster(String alias)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.attributeFactory("siteMaster", "com.terraframe.mojo.system.metadata.MdAttributeCharacter", alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getSiteMaster(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.attributeFactory("siteMaster", "com.terraframe.mojo.system.metadata.MdAttributeCharacter", alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeMoment getStartDate()
  {
    return getStartDate(null);

  }
 
  public com.terraframe.mojo.query.AttributeMoment getStartDate(String alias)
  {
    return (com.terraframe.mojo.query.AttributeMoment)this.attributeFactory("startDate", "com.terraframe.mojo.system.metadata.MdAttributeDate", alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeMoment getStartDate(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeMoment)this.attributeFactory("startDate", "com.terraframe.mojo.system.metadata.MdAttributeDate", alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeInteger getTotalITN()
  {
    return getTotalITN(null);

  }
 
  public com.terraframe.mojo.query.AttributeInteger getTotalITN(String alias)
  {
    return (com.terraframe.mojo.query.AttributeInteger)this.attributeFactory("totalITN", "com.terraframe.mojo.system.metadata.MdAttributeInteger", alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeInteger getTotalITN(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeInteger)this.attributeFactory("totalITN", "com.terraframe.mojo.system.metadata.MdAttributeInteger", alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeChar getType()
  {
    return getType(null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getType(String alias)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.attributeFactory("type", "com.terraframe.mojo.system.metadata.MdAttributeCharacter", alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getType(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.attributeFactory("type", "com.terraframe.mojo.system.metadata.MdAttributeCharacter", alias, displayLabel);

  }

  public com.terraframe.mojo.query.Condition aNCVisits()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.IPTANCVisit.CLASS);

    return this.isParentIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition aNCVisits(dss.vector.solutions.ontology.TermQuery termQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.IPTANCVisit.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(termQuery));

    return this.isParentIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition aNCVisits(dss.vector.solutions.ontology.TermQuery termQuery, dss.vector.solutions.intervention.monitor.IPTANCVisitQuery iPTANCVisitQuery)
  {
    iPTANCVisitQuery.AND(iPTANCVisitQuery.hasChild(termQuery));
    return this.isParentIn(iPTANCVisitQuery);
  }


  public com.terraframe.mojo.query.Condition doses()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.IPTDose.CLASS);

    return this.isParentIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition doses(dss.vector.solutions.ontology.TermQuery termQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.IPTDose.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(termQuery));

    return this.isParentIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition doses(dss.vector.solutions.ontology.TermQuery termQuery, dss.vector.solutions.intervention.monitor.IPTDoseQuery iPTDoseQuery)
  {
    iPTDoseQuery.AND(iPTDoseQuery.hasChild(termQuery));
    return this.isParentIn(iPTDoseQuery);
  }


  public com.terraframe.mojo.query.Condition patients()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.IPTPatients.CLASS);

    return this.isParentIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition patients(dss.vector.solutions.ontology.TermQuery termQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.IPTPatients.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(termQuery));

    return this.isParentIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition patients(dss.vector.solutions.ontology.TermQuery termQuery, dss.vector.solutions.intervention.monitor.IPTPatientsQuery iPTPatientsQuery)
  {
    iPTPatientsQuery.AND(iPTPatientsQuery.hasChild(termQuery));
    return this.isParentIn(iPTPatientsQuery);
  }


  public com.terraframe.mojo.query.Condition treatments()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.IPTTreatment.CLASS);

    return this.isParentIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition treatments(dss.vector.solutions.ontology.TermQuery termQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.IPTTreatment.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(termQuery));

    return this.isParentIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition treatments(dss.vector.solutions.ontology.TermQuery termQuery, dss.vector.solutions.intervention.monitor.IPTTreatmentQuery iPTTreatmentQuery)
  {
    iPTTreatmentQuery.AND(iPTTreatmentQuery.hasChild(termQuery));
    return this.isParentIn(iPTTreatmentQuery);
  }


  public com.terraframe.mojo.query.Condition NOT_IN_aNCVisits()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.IPTANCVisit.CLASS);

    return this.isNotParentIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_aNCVisits(dss.vector.solutions.ontology.TermQuery termQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.IPTANCVisit.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(termQuery));

    return this.isNotParentIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_aNCVisits(dss.vector.solutions.ontology.TermQuery termQuery, dss.vector.solutions.intervention.monitor.IPTANCVisitQuery iPTANCVisitQuery)
  {
    iPTANCVisitQuery.AND(iPTANCVisitQuery.hasChild(termQuery));
    return this.isNotParentIn(iPTANCVisitQuery);
  }


  public com.terraframe.mojo.query.Condition NOT_IN_doses()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.IPTDose.CLASS);

    return this.isNotParentIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_doses(dss.vector.solutions.ontology.TermQuery termQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.IPTDose.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(termQuery));

    return this.isNotParentIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_doses(dss.vector.solutions.ontology.TermQuery termQuery, dss.vector.solutions.intervention.monitor.IPTDoseQuery iPTDoseQuery)
  {
    iPTDoseQuery.AND(iPTDoseQuery.hasChild(termQuery));
    return this.isNotParentIn(iPTDoseQuery);
  }


  public com.terraframe.mojo.query.Condition NOT_IN_patients()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.IPTPatients.CLASS);

    return this.isNotParentIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_patients(dss.vector.solutions.ontology.TermQuery termQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.IPTPatients.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(termQuery));

    return this.isNotParentIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_patients(dss.vector.solutions.ontology.TermQuery termQuery, dss.vector.solutions.intervention.monitor.IPTPatientsQuery iPTPatientsQuery)
  {
    iPTPatientsQuery.AND(iPTPatientsQuery.hasChild(termQuery));
    return this.isNotParentIn(iPTPatientsQuery);
  }


  public com.terraframe.mojo.query.Condition NOT_IN_treatments()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.IPTTreatment.CLASS);

    return this.isNotParentIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_treatments(dss.vector.solutions.ontology.TermQuery termQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.IPTTreatment.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(termQuery));

    return this.isNotParentIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_treatments(dss.vector.solutions.ontology.TermQuery termQuery, dss.vector.solutions.intervention.monitor.IPTTreatmentQuery iPTTreatmentQuery)
  {
    iPTTreatmentQuery.AND(iPTTreatmentQuery.hasChild(termQuery));
    return this.isNotParentIn(iPTTreatmentQuery);
  }

  protected com.terraframe.mojo.query.AttributeReference referenceFactory( com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  com.terraframe.mojo.dataaccess.MdBusinessDAOIF referenceMdBusinessIF, String referenceTableAlias, com.terraframe.mojo.query.ComponentQuery rootQuery, java.util.Set<com.terraframe.mojo.query.Join> tableJoinSet, String userDefinedAlias, String userDefinedDisplayLabel)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals("createdBy")) 
    {
       return new com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReference((com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals("entityDomain")) 
    {
       return new com.terraframe.mojo.system.metadata.MdDomainQuery.MdDomainQueryReference((com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals("geoEntity")) 
    {
       return new dss.vector.solutions.geo.generated.GeoEntityQuery.GeoEntityQueryReference((com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals("lastUpdatedBy")) 
    {
       return new com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReference((com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals("lockedBy")) 
    {
       return new com.terraframe.mojo.system.UsersQuery.UsersQueryReference((com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals("owner")) 
    {
       return new com.terraframe.mojo.system.ActorQuery.ActorQueryReference((com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else 
    {
      String error = "Attribute type ["+mdAttributeIF.getType()+"] is invalid.";
      throw new com.terraframe.mojo.query.QueryException(error);
    }
  }

  }
}
