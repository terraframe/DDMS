package dss.vector.solutions.intervention.monitor;

@com.terraframe.mojo.business.ClassSignature(hash = 1398454460)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to ITNInstance.java
 *
 * @author Autogenerated by TerraFrame
 */
public  class ITNInstanceQuery extends com.terraframe.mojo.query.GeneratedBusinessQuery
 implements com.terraframe.mojo.generation.loader.Reloadable
{
private static final long serialVersionUID = 1398454460;

  public ITNInstanceQuery(com.terraframe.mojo.query.QueryFactory componentQueryFactory)
  {
     super();
    if (this.getComponentQuery() == null)
    {
      com.terraframe.mojo.business.BusinessQuery businessQuery = componentQueryFactory.businessQuery(this.getClassType());

       this.setBusinessQuery(businessQuery);
    }
  }

  public ITNInstanceQuery(com.terraframe.mojo.query.ValueQuery valueQuery)
  {
     super();
    if (this.getComponentQuery() == null)
    {
      com.terraframe.mojo.business.BusinessQuery businessQuery = new com.terraframe.mojo.business.BusinessQuery(valueQuery, this.getClassType());

       this.setBusinessQuery(businessQuery);
    }
  }

  public String getClassType()
  {
    return dss.vector.solutions.intervention.monitor.ITNInstance.CLASS;
  }
  public com.terraframe.mojo.query.AttributeMoment getCreateDate()
  {
    return getCreateDate(null);

  }
 
  public com.terraframe.mojo.query.AttributeMoment getCreateDate(String alias)
  {
    return (com.terraframe.mojo.query.AttributeMoment)this.getComponentQuery().get(dss.vector.solutions.intervention.monitor.ITNInstance.CREATEDATE, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeMoment getCreateDate(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeMoment)this.getComponentQuery().get(dss.vector.solutions.intervention.monitor.ITNInstance.CREATEDATE, alias, displayLabel);

  }
  public com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy()
  {
    return getCreatedBy(null);

  }
 
  public com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias)
  {

    com.terraframe.mojo.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap("createdBy");

    return (com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.intervention.monitor.ITNInstance.CREATEDBY, mdAttributeIF, this, alias, null);

  }
 
  public com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias, String displayLabel)
  {

    com.terraframe.mojo.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap("createdBy");

    return (com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.intervention.monitor.ITNInstance.CREATEDBY, mdAttributeIF, this, alias, displayLabel);

  }
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getDamaged()
  {
    return getDamaged(null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getDamaged(String alias)
  {

    com.terraframe.mojo.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap("damaged");

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.intervention.monitor.ITNInstance.DAMAGED, mdAttributeIF, this, alias, null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getDamaged(String alias, String displayLabel)
  {

    com.terraframe.mojo.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap("damaged");

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.intervention.monitor.ITNInstance.DAMAGED, mdAttributeIF, this, alias, displayLabel);

  }
  public com.terraframe.mojo.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain()
  {
    return getEntityDomain(null);

  }
 
  public com.terraframe.mojo.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias)
  {

    com.terraframe.mojo.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap("entityDomain");

    return (com.terraframe.mojo.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.intervention.monitor.ITNInstance.ENTITYDOMAIN, mdAttributeIF, this, alias, null);

  }
 
  public com.terraframe.mojo.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias, String displayLabel)
  {

    com.terraframe.mojo.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap("entityDomain");

    return (com.terraframe.mojo.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.intervention.monitor.ITNInstance.ENTITYDOMAIN, mdAttributeIF, this, alias, displayLabel);

  }
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getHanging()
  {
    return getHanging(null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getHanging(String alias)
  {

    com.terraframe.mojo.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap("hanging");

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.intervention.monitor.ITNInstance.HANGING, mdAttributeIF, this, alias, null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getHanging(String alias, String displayLabel)
  {

    com.terraframe.mojo.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap("hanging");

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.intervention.monitor.ITNInstance.HANGING, mdAttributeIF, this, alias, displayLabel);

  }
  public dss.vector.solutions.intervention.monitor.HouseholdQuery.HouseholdQueryReferenceIF getHousehold()
  {
    return getHousehold(null);

  }
 
  public dss.vector.solutions.intervention.monitor.HouseholdQuery.HouseholdQueryReferenceIF getHousehold(String alias)
  {

    com.terraframe.mojo.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap("household");

    return (dss.vector.solutions.intervention.monitor.HouseholdQuery.HouseholdQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.intervention.monitor.ITNInstance.HOUSEHOLD, mdAttributeIF, this, alias, null);

  }
 
  public dss.vector.solutions.intervention.monitor.HouseholdQuery.HouseholdQueryReferenceIF getHousehold(String alias, String displayLabel)
  {

    com.terraframe.mojo.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap("household");

    return (dss.vector.solutions.intervention.monitor.HouseholdQuery.HouseholdQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.intervention.monitor.ITNInstance.HOUSEHOLD, mdAttributeIF, this, alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeChar getId()
  {
    return getId(null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getId(String alias)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.getComponentQuery().get(dss.vector.solutions.intervention.monitor.ITNInstance.ID, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getId(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.getComponentQuery().get(dss.vector.solutions.intervention.monitor.ITNInstance.ID, alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeChar getKeyName()
  {
    return getKeyName(null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getKeyName(String alias)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.getComponentQuery().get(dss.vector.solutions.intervention.monitor.ITNInstance.KEYNAME, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getKeyName(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.getComponentQuery().get(dss.vector.solutions.intervention.monitor.ITNInstance.KEYNAME, alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeMoment getLastUpdateDate()
  {
    return getLastUpdateDate(null);

  }
 
  public com.terraframe.mojo.query.AttributeMoment getLastUpdateDate(String alias)
  {
    return (com.terraframe.mojo.query.AttributeMoment)this.getComponentQuery().get(dss.vector.solutions.intervention.monitor.ITNInstance.LASTUPDATEDATE, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeMoment getLastUpdateDate(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeMoment)this.getComponentQuery().get(dss.vector.solutions.intervention.monitor.ITNInstance.LASTUPDATEDATE, alias, displayLabel);

  }
  public com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy()
  {
    return getLastUpdatedBy(null);

  }
 
  public com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias)
  {

    com.terraframe.mojo.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap("lastUpdatedBy");

    return (com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.intervention.monitor.ITNInstance.LASTUPDATEDBY, mdAttributeIF, this, alias, null);

  }
 
  public com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias, String displayLabel)
  {

    com.terraframe.mojo.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap("lastUpdatedBy");

    return (com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.intervention.monitor.ITNInstance.LASTUPDATEDBY, mdAttributeIF, this, alias, displayLabel);

  }
  public com.terraframe.mojo.system.UsersQuery.UsersQueryReferenceIF getLockedBy()
  {
    return getLockedBy(null);

  }
 
  public com.terraframe.mojo.system.UsersQuery.UsersQueryReferenceIF getLockedBy(String alias)
  {

    com.terraframe.mojo.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap("lockedBy");

    return (com.terraframe.mojo.system.UsersQuery.UsersQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.intervention.monitor.ITNInstance.LOCKEDBY, mdAttributeIF, this, alias, null);

  }
 
  public com.terraframe.mojo.system.UsersQuery.UsersQueryReferenceIF getLockedBy(String alias, String displayLabel)
  {

    com.terraframe.mojo.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap("lockedBy");

    return (com.terraframe.mojo.system.UsersQuery.UsersQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.intervention.monitor.ITNInstance.LOCKEDBY, mdAttributeIF, this, alias, displayLabel);

  }
  public dss.vector.solutions.MonthOfYearMasterQuery.MonthOfYearQueryIF getMonthReceived()
  {
    return getMonthReceived(null);

  }
 
  public dss.vector.solutions.MonthOfYearMasterQuery.MonthOfYearQueryIF getMonthReceived(String alias)
  {

    com.terraframe.mojo.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap("monthReceived");

    return (dss.vector.solutions.MonthOfYearMasterQuery.MonthOfYearQueryIF)this.getComponentQuery().internalAttributeFactory("monthReceived", mdAttributeIF, this, alias, null);

  }
 
  public dss.vector.solutions.MonthOfYearMasterQuery.MonthOfYearQueryIF getMonthReceived(String alias, String displayLabel)
  {

    com.terraframe.mojo.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap("monthReceived");

    return (dss.vector.solutions.MonthOfYearMasterQuery.MonthOfYearQueryIF)this.getComponentQuery().internalAttributeFactory("monthReceived", mdAttributeIF, this, alias, displayLabel);

  }
  public dss.vector.solutions.MonthOfYearMasterQuery.MonthOfYearQueryIF getMonthRetreated()
  {
    return getMonthRetreated(null);

  }
 
  public dss.vector.solutions.MonthOfYearMasterQuery.MonthOfYearQueryIF getMonthRetreated(String alias)
  {

    com.terraframe.mojo.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap("monthRetreated");

    return (dss.vector.solutions.MonthOfYearMasterQuery.MonthOfYearQueryIF)this.getComponentQuery().internalAttributeFactory("monthRetreated", mdAttributeIF, this, alias, null);

  }
 
  public dss.vector.solutions.MonthOfYearMasterQuery.MonthOfYearQueryIF getMonthRetreated(String alias, String displayLabel)
  {

    com.terraframe.mojo.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap("monthRetreated");

    return (dss.vector.solutions.MonthOfYearMasterQuery.MonthOfYearQueryIF)this.getComponentQuery().internalAttributeFactory("monthRetreated", mdAttributeIF, this, alias, displayLabel);

  }
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getNetBrand()
  {
    return getNetBrand(null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getNetBrand(String alias)
  {

    com.terraframe.mojo.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap("netBrand");

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.intervention.monitor.ITNInstance.NETBRAND, mdAttributeIF, this, alias, null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getNetBrand(String alias, String displayLabel)
  {

    com.terraframe.mojo.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap("netBrand");

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.intervention.monitor.ITNInstance.NETBRAND, mdAttributeIF, this, alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeChar getNetId()
  {
    return getNetId(null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getNetId(String alias)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.getComponentQuery().get(dss.vector.solutions.intervention.monitor.ITNInstance.NETID, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getNetId(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.getComponentQuery().get(dss.vector.solutions.intervention.monitor.ITNInstance.NETID, alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeBoolean getNotUsedForSleeping()
  {
    return getNotUsedForSleeping(null);

  }
 
  public com.terraframe.mojo.query.AttributeBoolean getNotUsedForSleeping(String alias)
  {
    return (com.terraframe.mojo.query.AttributeBoolean)this.getComponentQuery().get(dss.vector.solutions.intervention.monitor.ITNInstance.NOTUSEDFORSLEEPING, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeBoolean getNotUsedForSleeping(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeBoolean)this.getComponentQuery().get(dss.vector.solutions.intervention.monitor.ITNInstance.NOTUSEDFORSLEEPING, alias, displayLabel);

  }
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getObtained()
  {
    return getObtained(null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getObtained(String alias)
  {

    com.terraframe.mojo.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap("obtained");

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.intervention.monitor.ITNInstance.OBTAINED, mdAttributeIF, this, alias, null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getObtained(String alias, String displayLabel)
  {

    com.terraframe.mojo.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap("obtained");

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.intervention.monitor.ITNInstance.OBTAINED, mdAttributeIF, this, alias, displayLabel);

  }
  public com.terraframe.mojo.system.ActorQuery.ActorQueryReferenceIF getOwner()
  {
    return getOwner(null);

  }
 
  public com.terraframe.mojo.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias)
  {

    com.terraframe.mojo.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap("owner");

    return (com.terraframe.mojo.system.ActorQuery.ActorQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.intervention.monitor.ITNInstance.OWNER, mdAttributeIF, this, alias, null);

  }
 
  public com.terraframe.mojo.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias, String displayLabel)
  {

    com.terraframe.mojo.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap("owner");

    return (com.terraframe.mojo.system.ActorQuery.ActorQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.intervention.monitor.ITNInstance.OWNER, mdAttributeIF, this, alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeDecimal getPrice()
  {
    return getPrice(null);

  }
 
  public com.terraframe.mojo.query.AttributeDecimal getPrice(String alias)
  {
    return (com.terraframe.mojo.query.AttributeDecimal)this.getComponentQuery().get(dss.vector.solutions.intervention.monitor.ITNInstance.PRICE, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeDecimal getPrice(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeDecimal)this.getComponentQuery().get(dss.vector.solutions.intervention.monitor.ITNInstance.PRICE, alias, displayLabel);

  }
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getPurpose()
  {
    return getPurpose(null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getPurpose(String alias)
  {

    com.terraframe.mojo.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap("purpose");

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.intervention.monitor.ITNInstance.PURPOSE, mdAttributeIF, this, alias, null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getPurpose(String alias, String displayLabel)
  {

    com.terraframe.mojo.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap("purpose");

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.intervention.monitor.ITNInstance.PURPOSE, mdAttributeIF, this, alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeChar getPurposeComments()
  {
    return getPurposeComments(null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getPurposeComments(String alias)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.getComponentQuery().get(dss.vector.solutions.intervention.monitor.ITNInstance.PURPOSECOMMENTS, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getPurposeComments(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.getComponentQuery().get(dss.vector.solutions.intervention.monitor.ITNInstance.PURPOSECOMMENTS, alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeMoment getReceivedDate()
  {
    return getReceivedDate(null);

  }
 
  public com.terraframe.mojo.query.AttributeMoment getReceivedDate(String alias)
  {
    return (com.terraframe.mojo.query.AttributeMoment)this.getComponentQuery().get(dss.vector.solutions.intervention.monitor.ITNInstance.RECEIVEDDATE, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeMoment getReceivedDate(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeMoment)this.getComponentQuery().get(dss.vector.solutions.intervention.monitor.ITNInstance.RECEIVEDDATE, alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeBoolean getRetreated()
  {
    return getRetreated(null);

  }
 
  public com.terraframe.mojo.query.AttributeBoolean getRetreated(String alias)
  {
    return (com.terraframe.mojo.query.AttributeBoolean)this.getComponentQuery().get(dss.vector.solutions.intervention.monitor.ITNInstance.RETREATED, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeBoolean getRetreated(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeBoolean)this.getComponentQuery().get(dss.vector.solutions.intervention.monitor.ITNInstance.RETREATED, alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeMoment getRetreatedDate()
  {
    return getRetreatedDate(null);

  }
 
  public com.terraframe.mojo.query.AttributeMoment getRetreatedDate(String alias)
  {
    return (com.terraframe.mojo.query.AttributeMoment)this.getComponentQuery().get(dss.vector.solutions.intervention.monitor.ITNInstance.RETREATEDDATE, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeMoment getRetreatedDate(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeMoment)this.getComponentQuery().get(dss.vector.solutions.intervention.monitor.ITNInstance.RETREATEDDATE, alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeLong getSeq()
  {
    return getSeq(null);

  }
 
  public com.terraframe.mojo.query.AttributeLong getSeq(String alias)
  {
    return (com.terraframe.mojo.query.AttributeLong)this.getComponentQuery().get(dss.vector.solutions.intervention.monitor.ITNInstance.SEQ, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeLong getSeq(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeLong)this.getComponentQuery().get(dss.vector.solutions.intervention.monitor.ITNInstance.SEQ, alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeChar getSiteMaster()
  {
    return getSiteMaster(null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getSiteMaster(String alias)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.getComponentQuery().get(dss.vector.solutions.intervention.monitor.ITNInstance.SITEMASTER, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getSiteMaster(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.getComponentQuery().get(dss.vector.solutions.intervention.monitor.ITNInstance.SITEMASTER, alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeLong getSleptUnderNet()
  {
    return getSleptUnderNet(null);

  }
 
  public com.terraframe.mojo.query.AttributeLong getSleptUnderNet(String alias)
  {
    return (com.terraframe.mojo.query.AttributeLong)this.getComponentQuery().get(dss.vector.solutions.intervention.monitor.ITNInstance.SLEPTUNDERNET, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeLong getSleptUnderNet(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeLong)this.getComponentQuery().get(dss.vector.solutions.intervention.monitor.ITNInstance.SLEPTUNDERNET, alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeChar getType()
  {
    return getType(null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getType(String alias)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.getComponentQuery().get(dss.vector.solutions.intervention.monitor.ITNInstance.TYPE, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getType(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.getComponentQuery().get(dss.vector.solutions.intervention.monitor.ITNInstance.TYPE, alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeInteger getWashFrequency()
  {
    return getWashFrequency(null);

  }
 
  public com.terraframe.mojo.query.AttributeInteger getWashFrequency(String alias)
  {
    return (com.terraframe.mojo.query.AttributeInteger)this.getComponentQuery().get(dss.vector.solutions.intervention.monitor.ITNInstance.WASHFREQUENCY, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeInteger getWashFrequency(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeInteger)this.getComponentQuery().get(dss.vector.solutions.intervention.monitor.ITNInstance.WASHFREQUENCY, alias, displayLabel);

  }
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getWashPeriod()
  {
    return getWashPeriod(null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getWashPeriod(String alias)
  {

    com.terraframe.mojo.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap("washPeriod");

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.intervention.monitor.ITNInstance.WASHPERIOD, mdAttributeIF, this, alias, null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getWashPeriod(String alias, String displayLabel)
  {

    com.terraframe.mojo.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap("washPeriod");

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.intervention.monitor.ITNInstance.WASHPERIOD, mdAttributeIF, this, alias, displayLabel);

  }
  public dss.vector.solutions.ResponseMasterQuery.ResponseQueryIF getWashed()
  {
    return getWashed(null);

  }
 
  public dss.vector.solutions.ResponseMasterQuery.ResponseQueryIF getWashed(String alias)
  {

    com.terraframe.mojo.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap("washed");

    return (dss.vector.solutions.ResponseMasterQuery.ResponseQueryIF)this.getComponentQuery().internalAttributeFactory("washed", mdAttributeIF, this, alias, null);

  }
 
  public dss.vector.solutions.ResponseMasterQuery.ResponseQueryIF getWashed(String alias, String displayLabel)
  {

    com.terraframe.mojo.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap("washed");

    return (dss.vector.solutions.ResponseMasterQuery.ResponseQueryIF)this.getComponentQuery().internalAttributeFactory("washed", mdAttributeIF, this, alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeInteger getYearReceived()
  {
    return getYearReceived(null);

  }
 
  public com.terraframe.mojo.query.AttributeInteger getYearReceived(String alias)
  {
    return (com.terraframe.mojo.query.AttributeInteger)this.getComponentQuery().get(dss.vector.solutions.intervention.monitor.ITNInstance.YEARRECEIVED, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeInteger getYearReceived(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeInteger)this.getComponentQuery().get(dss.vector.solutions.intervention.monitor.ITNInstance.YEARRECEIVED, alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeInteger getYearRetreated()
  {
    return getYearRetreated(null);

  }
 
  public com.terraframe.mojo.query.AttributeInteger getYearRetreated(String alias)
  {
    return (com.terraframe.mojo.query.AttributeInteger)this.getComponentQuery().get(dss.vector.solutions.intervention.monitor.ITNInstance.YEARRETREATED, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeInteger getYearRetreated(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeInteger)this.getComponentQuery().get(dss.vector.solutions.intervention.monitor.ITNInstance.YEARRETREATED, alias, displayLabel);

  }
  protected com.terraframe.mojo.query.AttributeReference referenceFactory( com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  com.terraframe.mojo.dataaccess.MdBusinessDAOIF referenceMdBusinessIF, String referenceTableAlias, com.terraframe.mojo.query.ComponentQuery rootQuery, java.util.Set<com.terraframe.mojo.query.Join> tableJoinSet, String userDefinedAlias, String userDefinedDisplayLabel)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals("createdBy")) 
    {
       return new com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReference((com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals("damaged")) 
    {
       return new dss.vector.solutions.ontology.TermQuery.TermQueryReference((com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals("entityDomain")) 
    {
       return new com.terraframe.mojo.system.metadata.MdDomainQuery.MdDomainQueryReference((com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals("hanging")) 
    {
       return new dss.vector.solutions.ontology.TermQuery.TermQueryReference((com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals("household")) 
    {
       return new dss.vector.solutions.intervention.monitor.HouseholdQuery.HouseholdQueryReference((com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals("lastUpdatedBy")) 
    {
       return new com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReference((com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals("lockedBy")) 
    {
       return new com.terraframe.mojo.system.UsersQuery.UsersQueryReference((com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals("netBrand")) 
    {
       return new dss.vector.solutions.ontology.TermQuery.TermQueryReference((com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals("obtained")) 
    {
       return new dss.vector.solutions.ontology.TermQuery.TermQueryReference((com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals("owner")) 
    {
       return new com.terraframe.mojo.system.ActorQuery.ActorQueryReference((com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals("purpose")) 
    {
       return new dss.vector.solutions.ontology.TermQuery.TermQueryReference((com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals("washPeriod")) 
    {
       return new dss.vector.solutions.ontology.TermQuery.TermQueryReference((com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else 
    {
      String error = "Attribute type ["+mdAttributeIF.getType()+"] is invalid.";
      throw new com.terraframe.mojo.query.QueryException(error);
    }
  }

  protected com.terraframe.mojo.query.AttributeEnumeration enumerationFactory( com.terraframe.mojo.dataaccess.MdAttributeEnumerationDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  String mdEnumerationTableName, com.terraframe.mojo.dataaccess.MdBusinessDAOIF masterListMdBusinessIF, String masterListTalbeAlias, com.terraframe.mojo.query.ComponentQuery rootQuery, java.util.Set<com.terraframe.mojo.query.Join> tableJoinSet, String userDefinedAlias, String userDefinedDisplayLabel)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals("monthReceived")) 
    {
       return new dss.vector.solutions.MonthOfYearMasterQuery.MonthOfYearQuery((com.terraframe.mojo.dataaccess.MdAttributeEnumerationDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdEnumerationTableName, masterListMdBusinessIF, masterListTalbeAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals("monthRetreated")) 
    {
       return new dss.vector.solutions.MonthOfYearMasterQuery.MonthOfYearQuery((com.terraframe.mojo.dataaccess.MdAttributeEnumerationDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdEnumerationTableName, masterListMdBusinessIF, masterListTalbeAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals("washed")) 
    {
       return new dss.vector.solutions.ResponseMasterQuery.ResponseQuery((com.terraframe.mojo.dataaccess.MdAttributeEnumerationDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdEnumerationTableName, masterListMdBusinessIF, masterListTalbeAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else 
    {
      String error = "Attribute type ["+mdAttributeIF.getType()+"] is invalid.";
      throw new com.terraframe.mojo.query.QueryException(error);
    }
  }

  /**  
   * Returns an iterator of Business objects that match the query criteria specified
   * on this query object. 
   * @return iterator of Business objects that match the query criteria specified
   * on this query object.
   */
  public com.terraframe.mojo.query.OIterator<? extends ITNInstance> getIterator()
  {
    this.checkNotUsedInValueQuery();
    String sqlStmt;
    if (_limit != null && _skip != null)
    {
      sqlStmt = this.getComponentQuery().getSQL(_limit, _skip);
    }
    else
    {
      sqlStmt = this.getComponentQuery().getSQL();
    }
    java.util.Map<String, com.terraframe.mojo.query.ColumnInfo> columnInfoMap = this.getComponentQuery().getColumnInfoMap();

    java.sql.ResultSet results = com.terraframe.mojo.dataaccess.database.Database.query(sqlStmt);
    return new com.terraframe.mojo.business.BusinessIterator<ITNInstance>(this.getComponentQuery().getMdEntityIF(), columnInfoMap, results);
  }


  public com.terraframe.mojo.query.Condition households()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.HouseholdITNInstance.CLASS);

    return this.getBusinessQuery().isChildIn(relationshipQuery);
  }


  public com.terraframe.mojo.query.Condition SUBSELECT_households()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.HouseholdITNInstance.CLASS);

    return this.getBusinessQuery().isChildIn_SUBSELECT(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition households(dss.vector.solutions.intervention.monitor.HouseholdITNInstanceQuery householdITNInstanceQuery)
  {
    return this.getBusinessQuery().isChildIn(householdITNInstanceQuery);
  }

  public com.terraframe.mojo.query.Condition SUBSELECT_households(dss.vector.solutions.intervention.monitor.HouseholdITNInstanceQuery householdITNInstanceQuery)
  {
    return this.getBusinessQuery().isChildIn_SUBSELECT(householdITNInstanceQuery);
  }

  public com.terraframe.mojo.query.Condition households(dss.vector.solutions.intervention.monitor.HouseholdQuery householdQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.HouseholdITNInstance.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(householdQuery));

    return this.getBusinessQuery().isChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition SUBSELECT_households(dss.vector.solutions.intervention.monitor.HouseholdQuery householdQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.HouseholdITNInstance.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(householdQuery));

    return this.getBusinessQuery().isChildIn_SUBSELECT(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition households(dss.vector.solutions.intervention.monitor.HouseholdQuery householdQuery, dss.vector.solutions.intervention.monitor.HouseholdITNInstanceQuery householdITNInstanceQuery)
  {
    householdITNInstanceQuery.AND(householdITNInstanceQuery.hasParent(householdQuery));
    return this.getBusinessQuery().isChildIn(householdITNInstanceQuery);
  }

  public com.terraframe.mojo.query.Condition SUBSELECT_households(dss.vector.solutions.intervention.monitor.HouseholdQuery householdQuery, dss.vector.solutions.intervention.monitor.HouseholdITNInstanceQuery householdITNInstanceQuery)
  {
    householdITNInstanceQuery.AND(householdITNInstanceQuery.hasParent(householdQuery));
    return this.getBusinessQuery().isChildIn_SUBSELECT(householdITNInstanceQuery);
  }


  public com.terraframe.mojo.query.Condition NOT_IN_households()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.HouseholdITNInstance.CLASS);

    return this.getBusinessQuery().isNotChildIn(relationshipQuery);
  }


  public com.terraframe.mojo.query.Condition SUBSELECT_NOT_IN_households()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.HouseholdITNInstance.CLASS);

    return this.getBusinessQuery().isNotChildIn_SUBSELECT(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_households(dss.vector.solutions.intervention.monitor.HouseholdITNInstanceQuery householdITNInstanceQuery)
  {
    return this.getBusinessQuery().isNotChildIn(householdITNInstanceQuery);
  }

  public com.terraframe.mojo.query.Condition SUBSELECT_NOT_IN_households(dss.vector.solutions.intervention.monitor.HouseholdITNInstanceQuery householdITNInstanceQuery)
  {
    return this.getBusinessQuery().isNotChildIn_SUBSELECT(householdITNInstanceQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_households(dss.vector.solutions.intervention.monitor.HouseholdQuery householdQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.HouseholdITNInstance.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(householdQuery));

    return this.getBusinessQuery().isNotChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition SUBSELECT_NOT_IN_households(dss.vector.solutions.intervention.monitor.HouseholdQuery householdQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.HouseholdITNInstance.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(householdQuery));

    return this.getBusinessQuery().isNotChildIn_SUBSELECT(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_households(dss.vector.solutions.intervention.monitor.HouseholdQuery householdQuery, dss.vector.solutions.intervention.monitor.HouseholdITNInstanceQuery householdITNInstanceQuery)
  {
    householdITNInstanceQuery.AND(householdITNInstanceQuery.hasParent(householdQuery));
    return this.getBusinessQuery().isNotChildIn(householdITNInstanceQuery);
  }

  public com.terraframe.mojo.query.Condition SUBSELECT_NOT_IN_households(dss.vector.solutions.intervention.monitor.HouseholdQuery householdQuery, dss.vector.solutions.intervention.monitor.HouseholdITNInstanceQuery householdITNInstanceQuery)
  {
    householdITNInstanceQuery.AND(householdITNInstanceQuery.hasParent(householdQuery));
    return this.getBusinessQuery().isNotChildIn_SUBSELECT(householdITNInstanceQuery);
  }


/**
 * Interface that masks all type unsafe query methods and defines all type safe methods.
 * This type is used when a join is performed on this class as a reference.
 **/
  public interface ITNInstanceQueryReferenceIF extends com.terraframe.mojo.generation.loader.Reloadable, com.terraframe.mojo.query.SelectableReference
  {

    public com.terraframe.mojo.query.AttributeMoment getCreateDate();
    public com.terraframe.mojo.query.AttributeMoment getCreateDate(String alias);
    public com.terraframe.mojo.query.AttributeMoment getCreateDate(String alias, String displayLabel);
    public com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy();
    public com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias);
    public com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias, String displayLabel);
    public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getDamaged();
    public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getDamaged(String alias);
    public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getDamaged(String alias, String displayLabel);
    public com.terraframe.mojo.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain();
    public com.terraframe.mojo.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias);
    public com.terraframe.mojo.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias, String displayLabel);
    public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getHanging();
    public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getHanging(String alias);
    public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getHanging(String alias, String displayLabel);
    public dss.vector.solutions.intervention.monitor.HouseholdQuery.HouseholdQueryReferenceIF getHousehold();
    public dss.vector.solutions.intervention.monitor.HouseholdQuery.HouseholdQueryReferenceIF getHousehold(String alias);
    public dss.vector.solutions.intervention.monitor.HouseholdQuery.HouseholdQueryReferenceIF getHousehold(String alias, String displayLabel);
    public com.terraframe.mojo.query.AttributeChar getId();
    public com.terraframe.mojo.query.AttributeChar getId(String alias);
    public com.terraframe.mojo.query.AttributeChar getId(String alias, String displayLabel);
    public com.terraframe.mojo.query.AttributeChar getKeyName();
    public com.terraframe.mojo.query.AttributeChar getKeyName(String alias);
    public com.terraframe.mojo.query.AttributeChar getKeyName(String alias, String displayLabel);
    public com.terraframe.mojo.query.AttributeMoment getLastUpdateDate();
    public com.terraframe.mojo.query.AttributeMoment getLastUpdateDate(String alias);
    public com.terraframe.mojo.query.AttributeMoment getLastUpdateDate(String alias, String displayLabel);
    public com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy();
    public com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias);
    public com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias, String displayLabel);
    public com.terraframe.mojo.system.UsersQuery.UsersQueryReferenceIF getLockedBy();
    public com.terraframe.mojo.system.UsersQuery.UsersQueryReferenceIF getLockedBy(String alias);
    public com.terraframe.mojo.system.UsersQuery.UsersQueryReferenceIF getLockedBy(String alias, String displayLabel);
  public dss.vector.solutions.MonthOfYearMasterQuery.MonthOfYearQueryIF getMonthReceived();
  public dss.vector.solutions.MonthOfYearMasterQuery.MonthOfYearQueryIF getMonthReceived(String alias);
  public dss.vector.solutions.MonthOfYearMasterQuery.MonthOfYearQueryIF getMonthReceived(String alias, String displayLabel);
  public dss.vector.solutions.MonthOfYearMasterQuery.MonthOfYearQueryIF getMonthRetreated();
  public dss.vector.solutions.MonthOfYearMasterQuery.MonthOfYearQueryIF getMonthRetreated(String alias);
  public dss.vector.solutions.MonthOfYearMasterQuery.MonthOfYearQueryIF getMonthRetreated(String alias, String displayLabel);
    public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getNetBrand();
    public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getNetBrand(String alias);
    public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getNetBrand(String alias, String displayLabel);
    public com.terraframe.mojo.query.AttributeChar getNetId();
    public com.terraframe.mojo.query.AttributeChar getNetId(String alias);
    public com.terraframe.mojo.query.AttributeChar getNetId(String alias, String displayLabel);
    public com.terraframe.mojo.query.AttributeBoolean getNotUsedForSleeping();
    public com.terraframe.mojo.query.AttributeBoolean getNotUsedForSleeping(String alias);
    public com.terraframe.mojo.query.AttributeBoolean getNotUsedForSleeping(String alias, String displayLabel);
    public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getObtained();
    public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getObtained(String alias);
    public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getObtained(String alias, String displayLabel);
    public com.terraframe.mojo.system.ActorQuery.ActorQueryReferenceIF getOwner();
    public com.terraframe.mojo.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias);
    public com.terraframe.mojo.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias, String displayLabel);
    public com.terraframe.mojo.query.AttributeDecimal getPrice();
    public com.terraframe.mojo.query.AttributeDecimal getPrice(String alias);
    public com.terraframe.mojo.query.AttributeDecimal getPrice(String alias, String displayLabel);
    public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getPurpose();
    public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getPurpose(String alias);
    public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getPurpose(String alias, String displayLabel);
    public com.terraframe.mojo.query.AttributeChar getPurposeComments();
    public com.terraframe.mojo.query.AttributeChar getPurposeComments(String alias);
    public com.terraframe.mojo.query.AttributeChar getPurposeComments(String alias, String displayLabel);
    public com.terraframe.mojo.query.AttributeMoment getReceivedDate();
    public com.terraframe.mojo.query.AttributeMoment getReceivedDate(String alias);
    public com.terraframe.mojo.query.AttributeMoment getReceivedDate(String alias, String displayLabel);
    public com.terraframe.mojo.query.AttributeBoolean getRetreated();
    public com.terraframe.mojo.query.AttributeBoolean getRetreated(String alias);
    public com.terraframe.mojo.query.AttributeBoolean getRetreated(String alias, String displayLabel);
    public com.terraframe.mojo.query.AttributeMoment getRetreatedDate();
    public com.terraframe.mojo.query.AttributeMoment getRetreatedDate(String alias);
    public com.terraframe.mojo.query.AttributeMoment getRetreatedDate(String alias, String displayLabel);
    public com.terraframe.mojo.query.AttributeLong getSeq();
    public com.terraframe.mojo.query.AttributeLong getSeq(String alias);
    public com.terraframe.mojo.query.AttributeLong getSeq(String alias, String displayLabel);
    public com.terraframe.mojo.query.AttributeChar getSiteMaster();
    public com.terraframe.mojo.query.AttributeChar getSiteMaster(String alias);
    public com.terraframe.mojo.query.AttributeChar getSiteMaster(String alias, String displayLabel);
    public com.terraframe.mojo.query.AttributeLong getSleptUnderNet();
    public com.terraframe.mojo.query.AttributeLong getSleptUnderNet(String alias);
    public com.terraframe.mojo.query.AttributeLong getSleptUnderNet(String alias, String displayLabel);
    public com.terraframe.mojo.query.AttributeChar getType();
    public com.terraframe.mojo.query.AttributeChar getType(String alias);
    public com.terraframe.mojo.query.AttributeChar getType(String alias, String displayLabel);
    public com.terraframe.mojo.query.AttributeInteger getWashFrequency();
    public com.terraframe.mojo.query.AttributeInteger getWashFrequency(String alias);
    public com.terraframe.mojo.query.AttributeInteger getWashFrequency(String alias, String displayLabel);
    public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getWashPeriod();
    public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getWashPeriod(String alias);
    public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getWashPeriod(String alias, String displayLabel);
  public dss.vector.solutions.ResponseMasterQuery.ResponseQueryIF getWashed();
  public dss.vector.solutions.ResponseMasterQuery.ResponseQueryIF getWashed(String alias);
  public dss.vector.solutions.ResponseMasterQuery.ResponseQueryIF getWashed(String alias, String displayLabel);
    public com.terraframe.mojo.query.AttributeInteger getYearReceived();
    public com.terraframe.mojo.query.AttributeInteger getYearReceived(String alias);
    public com.terraframe.mojo.query.AttributeInteger getYearReceived(String alias, String displayLabel);
    public com.terraframe.mojo.query.AttributeInteger getYearRetreated();
    public com.terraframe.mojo.query.AttributeInteger getYearRetreated(String alias);
    public com.terraframe.mojo.query.AttributeInteger getYearRetreated(String alias, String displayLabel);

    public com.terraframe.mojo.query.BasicCondition EQ(dss.vector.solutions.intervention.monitor.ITNInstance iTNInstance);

    public com.terraframe.mojo.query.BasicCondition NE(dss.vector.solutions.intervention.monitor.ITNInstance iTNInstance);


  public com.terraframe.mojo.query.Condition households();
  public com.terraframe.mojo.query.Condition households(dss.vector.solutions.intervention.monitor.HouseholdQuery householdQuery);

  public com.terraframe.mojo.query.Condition households(dss.vector.solutions.intervention.monitor.HouseholdQuery householdQuery, dss.vector.solutions.intervention.monitor.HouseholdITNInstanceQuery householdITNInstanceQuery);


  public com.terraframe.mojo.query.Condition SUBSELECT_households();
  public com.terraframe.mojo.query.Condition SUBSELECT_households(dss.vector.solutions.intervention.monitor.HouseholdQuery householdQuery);

  public com.terraframe.mojo.query.Condition SUBSELECT_households(dss.vector.solutions.intervention.monitor.HouseholdQuery householdQuery, dss.vector.solutions.intervention.monitor.HouseholdITNInstanceQuery householdITNInstanceQuery);


  public com.terraframe.mojo.query.Condition NOT_IN_households();
  public com.terraframe.mojo.query.Condition NOT_IN_households(dss.vector.solutions.intervention.monitor.HouseholdQuery householdQuery);

  public com.terraframe.mojo.query.Condition NOT_IN_households(dss.vector.solutions.intervention.monitor.HouseholdQuery householdQuery, dss.vector.solutions.intervention.monitor.HouseholdITNInstanceQuery householdITNInstanceQuery);


  public com.terraframe.mojo.query.Condition SUBSELECT_NOT_IN_households();
  public com.terraframe.mojo.query.Condition SUBSELECT_NOT_IN_households(dss.vector.solutions.intervention.monitor.HouseholdQuery householdQuery);

  public com.terraframe.mojo.query.Condition SUBSELECT_NOT_IN_households(dss.vector.solutions.intervention.monitor.HouseholdQuery householdQuery, dss.vector.solutions.intervention.monitor.HouseholdITNInstanceQuery householdITNInstanceQuery);

  }

/**
 * Implements type safe query methods.
 * This type is used when a join is performed on this class as a reference.
 **/
  public static class ITNInstanceQueryReference extends com.terraframe.mojo.query.AttributeReference
 implements ITNInstanceQueryReferenceIF
, com.terraframe.mojo.generation.loader.Reloadable
  {
private static final long serialVersionUID = -651501986;

  public ITNInstanceQueryReference(com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias, com.terraframe.mojo.dataaccess.MdBusinessDAOIF referenceMdBusinessIF, String referenceTableAlias, com.terraframe.mojo.query.ComponentQuery rootQuery, java.util.Set<com.terraframe.mojo.query.Join> tableJoinSet, String alias, String displayLabel)
  {
    super(mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, alias, displayLabel);

  }


    public com.terraframe.mojo.query.BasicCondition EQ(dss.vector.solutions.intervention.monitor.ITNInstance iTNInstance)
    {
      return this.EQ(iTNInstance.getId());
    }

    public com.terraframe.mojo.query.BasicCondition NE(dss.vector.solutions.intervention.monitor.ITNInstance iTNInstance)
    {
      return this.NE(iTNInstance.getId());
    }

  public com.terraframe.mojo.query.AttributeMoment getCreateDate()
  {
    return getCreateDate(null);

  }
 
  public com.terraframe.mojo.query.AttributeMoment getCreateDate(String alias)
  {
    return (com.terraframe.mojo.query.AttributeMoment)this.get(dss.vector.solutions.intervention.monitor.ITNInstance.CREATEDATE, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeMoment getCreateDate(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeMoment)this.get(dss.vector.solutions.intervention.monitor.ITNInstance.CREATEDATE, alias, displayLabel);

  }
  public com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy()
  {
    return getCreatedBy(null);

  }
 
  public com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias)
  {
    return (com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF)this.get(dss.vector.solutions.intervention.monitor.ITNInstance.CREATEDBY, alias, null);

  }
 
  public com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF)this.get(dss.vector.solutions.intervention.monitor.ITNInstance.CREATEDBY,  alias, displayLabel);

  }
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getDamaged()
  {
    return getDamaged(null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getDamaged(String alias)
  {
    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.get(dss.vector.solutions.intervention.monitor.ITNInstance.DAMAGED, alias, null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getDamaged(String alias, String displayLabel)
  {
    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.get(dss.vector.solutions.intervention.monitor.ITNInstance.DAMAGED,  alias, displayLabel);

  }
  public com.terraframe.mojo.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain()
  {
    return getEntityDomain(null);

  }
 
  public com.terraframe.mojo.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias)
  {
    return (com.terraframe.mojo.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF)this.get(dss.vector.solutions.intervention.monitor.ITNInstance.ENTITYDOMAIN, alias, null);

  }
 
  public com.terraframe.mojo.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF)this.get(dss.vector.solutions.intervention.monitor.ITNInstance.ENTITYDOMAIN,  alias, displayLabel);

  }
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getHanging()
  {
    return getHanging(null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getHanging(String alias)
  {
    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.get(dss.vector.solutions.intervention.monitor.ITNInstance.HANGING, alias, null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getHanging(String alias, String displayLabel)
  {
    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.get(dss.vector.solutions.intervention.monitor.ITNInstance.HANGING,  alias, displayLabel);

  }
  public dss.vector.solutions.intervention.monitor.HouseholdQuery.HouseholdQueryReferenceIF getHousehold()
  {
    return getHousehold(null);

  }
 
  public dss.vector.solutions.intervention.monitor.HouseholdQuery.HouseholdQueryReferenceIF getHousehold(String alias)
  {
    return (dss.vector.solutions.intervention.monitor.HouseholdQuery.HouseholdQueryReferenceIF)this.get(dss.vector.solutions.intervention.monitor.ITNInstance.HOUSEHOLD, alias, null);

  }
 
  public dss.vector.solutions.intervention.monitor.HouseholdQuery.HouseholdQueryReferenceIF getHousehold(String alias, String displayLabel)
  {
    return (dss.vector.solutions.intervention.monitor.HouseholdQuery.HouseholdQueryReferenceIF)this.get(dss.vector.solutions.intervention.monitor.ITNInstance.HOUSEHOLD,  alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeChar getId()
  {
    return getId(null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getId(String alias)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.get(dss.vector.solutions.intervention.monitor.ITNInstance.ID, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getId(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.get(dss.vector.solutions.intervention.monitor.ITNInstance.ID, alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeChar getKeyName()
  {
    return getKeyName(null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getKeyName(String alias)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.get(dss.vector.solutions.intervention.monitor.ITNInstance.KEYNAME, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getKeyName(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.get(dss.vector.solutions.intervention.monitor.ITNInstance.KEYNAME, alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeMoment getLastUpdateDate()
  {
    return getLastUpdateDate(null);

  }
 
  public com.terraframe.mojo.query.AttributeMoment getLastUpdateDate(String alias)
  {
    return (com.terraframe.mojo.query.AttributeMoment)this.get(dss.vector.solutions.intervention.monitor.ITNInstance.LASTUPDATEDATE, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeMoment getLastUpdateDate(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeMoment)this.get(dss.vector.solutions.intervention.monitor.ITNInstance.LASTUPDATEDATE, alias, displayLabel);

  }
  public com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy()
  {
    return getLastUpdatedBy(null);

  }
 
  public com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias)
  {
    return (com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF)this.get(dss.vector.solutions.intervention.monitor.ITNInstance.LASTUPDATEDBY, alias, null);

  }
 
  public com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF)this.get(dss.vector.solutions.intervention.monitor.ITNInstance.LASTUPDATEDBY,  alias, displayLabel);

  }
  public com.terraframe.mojo.system.UsersQuery.UsersQueryReferenceIF getLockedBy()
  {
    return getLockedBy(null);

  }
 
  public com.terraframe.mojo.system.UsersQuery.UsersQueryReferenceIF getLockedBy(String alias)
  {
    return (com.terraframe.mojo.system.UsersQuery.UsersQueryReferenceIF)this.get(dss.vector.solutions.intervention.monitor.ITNInstance.LOCKEDBY, alias, null);

  }
 
  public com.terraframe.mojo.system.UsersQuery.UsersQueryReferenceIF getLockedBy(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.system.UsersQuery.UsersQueryReferenceIF)this.get(dss.vector.solutions.intervention.monitor.ITNInstance.LOCKEDBY,  alias, displayLabel);

  }
  public dss.vector.solutions.MonthOfYearMasterQuery.MonthOfYearQueryIF getMonthReceived()
  {
    return getMonthReceived(null);

  }
 
  public dss.vector.solutions.MonthOfYearMasterQuery.MonthOfYearQueryIF getMonthReceived(String alias)
  {
    return (dss.vector.solutions.MonthOfYearMasterQuery.MonthOfYearQueryIF)this.get(dss.vector.solutions.intervention.monitor.ITNInstance.MONTHRECEIVED, alias, null);

  }
 
  public dss.vector.solutions.MonthOfYearMasterQuery.MonthOfYearQueryIF getMonthReceived(String alias, String displayLabel)
  {
    return (dss.vector.solutions.MonthOfYearMasterQuery.MonthOfYearQueryIF)this.get(dss.vector.solutions.intervention.monitor.ITNInstance.MONTHRECEIVED, alias, displayLabel);

  }
  public dss.vector.solutions.MonthOfYearMasterQuery.MonthOfYearQueryIF getMonthRetreated()
  {
    return getMonthRetreated(null);

  }
 
  public dss.vector.solutions.MonthOfYearMasterQuery.MonthOfYearQueryIF getMonthRetreated(String alias)
  {
    return (dss.vector.solutions.MonthOfYearMasterQuery.MonthOfYearQueryIF)this.get(dss.vector.solutions.intervention.monitor.ITNInstance.MONTHRETREATED, alias, null);

  }
 
  public dss.vector.solutions.MonthOfYearMasterQuery.MonthOfYearQueryIF getMonthRetreated(String alias, String displayLabel)
  {
    return (dss.vector.solutions.MonthOfYearMasterQuery.MonthOfYearQueryIF)this.get(dss.vector.solutions.intervention.monitor.ITNInstance.MONTHRETREATED, alias, displayLabel);

  }
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getNetBrand()
  {
    return getNetBrand(null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getNetBrand(String alias)
  {
    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.get(dss.vector.solutions.intervention.monitor.ITNInstance.NETBRAND, alias, null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getNetBrand(String alias, String displayLabel)
  {
    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.get(dss.vector.solutions.intervention.monitor.ITNInstance.NETBRAND,  alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeChar getNetId()
  {
    return getNetId(null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getNetId(String alias)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.get(dss.vector.solutions.intervention.monitor.ITNInstance.NETID, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getNetId(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.get(dss.vector.solutions.intervention.monitor.ITNInstance.NETID, alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeBoolean getNotUsedForSleeping()
  {
    return getNotUsedForSleeping(null);

  }
 
  public com.terraframe.mojo.query.AttributeBoolean getNotUsedForSleeping(String alias)
  {
    return (com.terraframe.mojo.query.AttributeBoolean)this.get(dss.vector.solutions.intervention.monitor.ITNInstance.NOTUSEDFORSLEEPING, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeBoolean getNotUsedForSleeping(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeBoolean)this.get(dss.vector.solutions.intervention.monitor.ITNInstance.NOTUSEDFORSLEEPING, alias, displayLabel);

  }
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getObtained()
  {
    return getObtained(null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getObtained(String alias)
  {
    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.get(dss.vector.solutions.intervention.monitor.ITNInstance.OBTAINED, alias, null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getObtained(String alias, String displayLabel)
  {
    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.get(dss.vector.solutions.intervention.monitor.ITNInstance.OBTAINED,  alias, displayLabel);

  }
  public com.terraframe.mojo.system.ActorQuery.ActorQueryReferenceIF getOwner()
  {
    return getOwner(null);

  }
 
  public com.terraframe.mojo.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias)
  {
    return (com.terraframe.mojo.system.ActorQuery.ActorQueryReferenceIF)this.get(dss.vector.solutions.intervention.monitor.ITNInstance.OWNER, alias, null);

  }
 
  public com.terraframe.mojo.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.system.ActorQuery.ActorQueryReferenceIF)this.get(dss.vector.solutions.intervention.monitor.ITNInstance.OWNER,  alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeDecimal getPrice()
  {
    return getPrice(null);

  }
 
  public com.terraframe.mojo.query.AttributeDecimal getPrice(String alias)
  {
    return (com.terraframe.mojo.query.AttributeDecimal)this.get(dss.vector.solutions.intervention.monitor.ITNInstance.PRICE, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeDecimal getPrice(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeDecimal)this.get(dss.vector.solutions.intervention.monitor.ITNInstance.PRICE, alias, displayLabel);

  }
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getPurpose()
  {
    return getPurpose(null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getPurpose(String alias)
  {
    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.get(dss.vector.solutions.intervention.monitor.ITNInstance.PURPOSE, alias, null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getPurpose(String alias, String displayLabel)
  {
    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.get(dss.vector.solutions.intervention.monitor.ITNInstance.PURPOSE,  alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeChar getPurposeComments()
  {
    return getPurposeComments(null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getPurposeComments(String alias)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.get(dss.vector.solutions.intervention.monitor.ITNInstance.PURPOSECOMMENTS, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getPurposeComments(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.get(dss.vector.solutions.intervention.monitor.ITNInstance.PURPOSECOMMENTS, alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeMoment getReceivedDate()
  {
    return getReceivedDate(null);

  }
 
  public com.terraframe.mojo.query.AttributeMoment getReceivedDate(String alias)
  {
    return (com.terraframe.mojo.query.AttributeMoment)this.get(dss.vector.solutions.intervention.monitor.ITNInstance.RECEIVEDDATE, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeMoment getReceivedDate(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeMoment)this.get(dss.vector.solutions.intervention.monitor.ITNInstance.RECEIVEDDATE, alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeBoolean getRetreated()
  {
    return getRetreated(null);

  }
 
  public com.terraframe.mojo.query.AttributeBoolean getRetreated(String alias)
  {
    return (com.terraframe.mojo.query.AttributeBoolean)this.get(dss.vector.solutions.intervention.monitor.ITNInstance.RETREATED, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeBoolean getRetreated(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeBoolean)this.get(dss.vector.solutions.intervention.monitor.ITNInstance.RETREATED, alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeMoment getRetreatedDate()
  {
    return getRetreatedDate(null);

  }
 
  public com.terraframe.mojo.query.AttributeMoment getRetreatedDate(String alias)
  {
    return (com.terraframe.mojo.query.AttributeMoment)this.get(dss.vector.solutions.intervention.monitor.ITNInstance.RETREATEDDATE, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeMoment getRetreatedDate(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeMoment)this.get(dss.vector.solutions.intervention.monitor.ITNInstance.RETREATEDDATE, alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeLong getSeq()
  {
    return getSeq(null);

  }
 
  public com.terraframe.mojo.query.AttributeLong getSeq(String alias)
  {
    return (com.terraframe.mojo.query.AttributeLong)this.get(dss.vector.solutions.intervention.monitor.ITNInstance.SEQ, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeLong getSeq(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeLong)this.get(dss.vector.solutions.intervention.monitor.ITNInstance.SEQ, alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeChar getSiteMaster()
  {
    return getSiteMaster(null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getSiteMaster(String alias)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.get(dss.vector.solutions.intervention.monitor.ITNInstance.SITEMASTER, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getSiteMaster(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.get(dss.vector.solutions.intervention.monitor.ITNInstance.SITEMASTER, alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeLong getSleptUnderNet()
  {
    return getSleptUnderNet(null);

  }
 
  public com.terraframe.mojo.query.AttributeLong getSleptUnderNet(String alias)
  {
    return (com.terraframe.mojo.query.AttributeLong)this.get(dss.vector.solutions.intervention.monitor.ITNInstance.SLEPTUNDERNET, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeLong getSleptUnderNet(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeLong)this.get(dss.vector.solutions.intervention.monitor.ITNInstance.SLEPTUNDERNET, alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeChar getType()
  {
    return getType(null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getType(String alias)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.get(dss.vector.solutions.intervention.monitor.ITNInstance.TYPE, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getType(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.get(dss.vector.solutions.intervention.monitor.ITNInstance.TYPE, alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeInteger getWashFrequency()
  {
    return getWashFrequency(null);

  }
 
  public com.terraframe.mojo.query.AttributeInteger getWashFrequency(String alias)
  {
    return (com.terraframe.mojo.query.AttributeInteger)this.get(dss.vector.solutions.intervention.monitor.ITNInstance.WASHFREQUENCY, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeInteger getWashFrequency(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeInteger)this.get(dss.vector.solutions.intervention.monitor.ITNInstance.WASHFREQUENCY, alias, displayLabel);

  }
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getWashPeriod()
  {
    return getWashPeriod(null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getWashPeriod(String alias)
  {
    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.get(dss.vector.solutions.intervention.monitor.ITNInstance.WASHPERIOD, alias, null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getWashPeriod(String alias, String displayLabel)
  {
    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.get(dss.vector.solutions.intervention.monitor.ITNInstance.WASHPERIOD,  alias, displayLabel);

  }
  public dss.vector.solutions.ResponseMasterQuery.ResponseQueryIF getWashed()
  {
    return getWashed(null);

  }
 
  public dss.vector.solutions.ResponseMasterQuery.ResponseQueryIF getWashed(String alias)
  {
    return (dss.vector.solutions.ResponseMasterQuery.ResponseQueryIF)this.get(dss.vector.solutions.intervention.monitor.ITNInstance.WASHED, alias, null);

  }
 
  public dss.vector.solutions.ResponseMasterQuery.ResponseQueryIF getWashed(String alias, String displayLabel)
  {
    return (dss.vector.solutions.ResponseMasterQuery.ResponseQueryIF)this.get(dss.vector.solutions.intervention.monitor.ITNInstance.WASHED, alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeInteger getYearReceived()
  {
    return getYearReceived(null);

  }
 
  public com.terraframe.mojo.query.AttributeInteger getYearReceived(String alias)
  {
    return (com.terraframe.mojo.query.AttributeInteger)this.get(dss.vector.solutions.intervention.monitor.ITNInstance.YEARRECEIVED, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeInteger getYearReceived(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeInteger)this.get(dss.vector.solutions.intervention.monitor.ITNInstance.YEARRECEIVED, alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeInteger getYearRetreated()
  {
    return getYearRetreated(null);

  }
 
  public com.terraframe.mojo.query.AttributeInteger getYearRetreated(String alias)
  {
    return (com.terraframe.mojo.query.AttributeInteger)this.get(dss.vector.solutions.intervention.monitor.ITNInstance.YEARRETREATED, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeInteger getYearRetreated(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeInteger)this.get(dss.vector.solutions.intervention.monitor.ITNInstance.YEARRETREATED, alias, displayLabel);

  }

  public com.terraframe.mojo.query.Condition households()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.HouseholdITNInstance.CLASS);

    return this.isChildIn(relationshipQuery);
  }


  public com.terraframe.mojo.query.Condition SUBSELECT_households()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.HouseholdITNInstance.CLASS);

    return this.isChildIn_SUBSELECT(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition households(dss.vector.solutions.intervention.monitor.HouseholdITNInstanceQuery householdITNInstanceQuery)
  {
    return this.isChildIn(householdITNInstanceQuery);
  }

  public com.terraframe.mojo.query.Condition SUBSELECT_households(dss.vector.solutions.intervention.monitor.HouseholdITNInstanceQuery householdITNInstanceQuery)
  {
    return this.isChildIn_SUBSELECT(householdITNInstanceQuery);
  }

  public com.terraframe.mojo.query.Condition households(dss.vector.solutions.intervention.monitor.HouseholdQuery householdQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.HouseholdITNInstance.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(householdQuery));

    return this.isChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition SUBSELECT_households(dss.vector.solutions.intervention.monitor.HouseholdQuery householdQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.HouseholdITNInstance.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(householdQuery));

    return this.isChildIn_SUBSELECT(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition households(dss.vector.solutions.intervention.monitor.HouseholdQuery householdQuery, dss.vector.solutions.intervention.monitor.HouseholdITNInstanceQuery householdITNInstanceQuery)
  {
    householdITNInstanceQuery.AND(householdITNInstanceQuery.hasParent(householdQuery));
    return this.isChildIn(householdITNInstanceQuery);
  }

  public com.terraframe.mojo.query.Condition SUBSELECT_households(dss.vector.solutions.intervention.monitor.HouseholdQuery householdQuery, dss.vector.solutions.intervention.monitor.HouseholdITNInstanceQuery householdITNInstanceQuery)
  {
    householdITNInstanceQuery.AND(householdITNInstanceQuery.hasParent(householdQuery));
    return this.isChildIn_SUBSELECT(householdITNInstanceQuery);
  }


  public com.terraframe.mojo.query.Condition NOT_IN_households()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.HouseholdITNInstance.CLASS);

    return this.isNotChildIn(relationshipQuery);
  }


  public com.terraframe.mojo.query.Condition SUBSELECT_NOT_IN_households()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.HouseholdITNInstance.CLASS);

    return this.isNotChildIn_SUBSELECT(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_households(dss.vector.solutions.intervention.monitor.HouseholdITNInstanceQuery householdITNInstanceQuery)
  {
    return this.isNotChildIn(householdITNInstanceQuery);
  }

  public com.terraframe.mojo.query.Condition SUBSELECT_NOT_IN_households(dss.vector.solutions.intervention.monitor.HouseholdITNInstanceQuery householdITNInstanceQuery)
  {
    return this.isNotChildIn_SUBSELECT(householdITNInstanceQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_households(dss.vector.solutions.intervention.monitor.HouseholdQuery householdQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.HouseholdITNInstance.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(householdQuery));

    return this.isNotChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition SUBSELECT_NOT_IN_households(dss.vector.solutions.intervention.monitor.HouseholdQuery householdQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.HouseholdITNInstance.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(householdQuery));

    return this.isNotChildIn_SUBSELECT(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_households(dss.vector.solutions.intervention.monitor.HouseholdQuery householdQuery, dss.vector.solutions.intervention.monitor.HouseholdITNInstanceQuery householdITNInstanceQuery)
  {
    householdITNInstanceQuery.AND(householdITNInstanceQuery.hasParent(householdQuery));
    return this.isNotChildIn(householdITNInstanceQuery);
  }

  public com.terraframe.mojo.query.Condition SUBSELECT_NOT_IN_households(dss.vector.solutions.intervention.monitor.HouseholdQuery householdQuery, dss.vector.solutions.intervention.monitor.HouseholdITNInstanceQuery householdITNInstanceQuery)
  {
    householdITNInstanceQuery.AND(householdITNInstanceQuery.hasParent(householdQuery));
    return this.isNotChildIn_SUBSELECT(householdITNInstanceQuery);
  }

  protected com.terraframe.mojo.query.AttributeReference referenceFactory( com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  com.terraframe.mojo.dataaccess.MdBusinessDAOIF referenceMdBusinessIF, String referenceTableAlias, com.terraframe.mojo.query.ComponentQuery rootQuery, java.util.Set<com.terraframe.mojo.query.Join> tableJoinSet, String userDefinedAlias, String userDefinedDisplayLabel)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals("createdBy")) 
    {
       return new com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReference((com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals("damaged")) 
    {
       return new dss.vector.solutions.ontology.TermQuery.TermQueryReference((com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals("entityDomain")) 
    {
       return new com.terraframe.mojo.system.metadata.MdDomainQuery.MdDomainQueryReference((com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals("hanging")) 
    {
       return new dss.vector.solutions.ontology.TermQuery.TermQueryReference((com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals("household")) 
    {
       return new dss.vector.solutions.intervention.monitor.HouseholdQuery.HouseholdQueryReference((com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals("lastUpdatedBy")) 
    {
       return new com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReference((com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals("lockedBy")) 
    {
       return new com.terraframe.mojo.system.UsersQuery.UsersQueryReference((com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals("netBrand")) 
    {
       return new dss.vector.solutions.ontology.TermQuery.TermQueryReference((com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals("obtained")) 
    {
       return new dss.vector.solutions.ontology.TermQuery.TermQueryReference((com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals("owner")) 
    {
       return new com.terraframe.mojo.system.ActorQuery.ActorQueryReference((com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals("purpose")) 
    {
       return new dss.vector.solutions.ontology.TermQuery.TermQueryReference((com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals("washPeriod")) 
    {
       return new dss.vector.solutions.ontology.TermQuery.TermQueryReference((com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else 
    {
      String error = "Attribute type ["+mdAttributeIF.getType()+"] is invalid.";
      throw new com.terraframe.mojo.query.QueryException(error);
    }
  }

  protected com.terraframe.mojo.query.AttributeEnumeration enumerationFactory( com.terraframe.mojo.dataaccess.MdAttributeEnumerationDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  String mdEnumerationTableName, com.terraframe.mojo.dataaccess.MdBusinessDAOIF masterListMdBusinessIF, String masterListTalbeAlias, com.terraframe.mojo.query.ComponentQuery rootQuery, java.util.Set<com.terraframe.mojo.query.Join> tableJoinSet, String userDefinedAlias, String userDefinedDisplayLabel)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals("monthReceived")) 
    {
       return new dss.vector.solutions.MonthOfYearMasterQuery.MonthOfYearQuery((com.terraframe.mojo.dataaccess.MdAttributeEnumerationDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdEnumerationTableName, masterListMdBusinessIF, masterListTalbeAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals("monthRetreated")) 
    {
       return new dss.vector.solutions.MonthOfYearMasterQuery.MonthOfYearQuery((com.terraframe.mojo.dataaccess.MdAttributeEnumerationDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdEnumerationTableName, masterListMdBusinessIF, masterListTalbeAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals("washed")) 
    {
       return new dss.vector.solutions.ResponseMasterQuery.ResponseQuery((com.terraframe.mojo.dataaccess.MdAttributeEnumerationDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdEnumerationTableName, masterListMdBusinessIF, masterListTalbeAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else 
    {
      String error = "Attribute type ["+mdAttributeIF.getType()+"] is invalid.";
      throw new com.terraframe.mojo.query.QueryException(error);
    }
  }

  }
}
