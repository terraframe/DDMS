package dss.vector.solutions.intervention.monitor;

@com.terraframe.mojo.business.ClassSignature(hash = -148922379)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to ITNHouseholdSurvey.java
 *
 * @author Autogenerated by TerraFrame
 */
public abstract class ITNHouseholdSurveyBase extends com.terraframe.mojo.business.Business implements com.terraframe.mojo.generation.loader.Reloadable
{
  public final static String CLASS = "dss.vector.solutions.intervention.monitor.ITNHouseholdSurvey";
  public static java.lang.String AGENTFIRSTNAME = "agentFirstName";
  public static java.lang.String AGENTSURNAME = "agentSurname";
  public static java.lang.String BOUGHTPROVIDER = "boughtProvider";
  public static java.lang.String CHILDRESIDENTS = "childResidents";
  public static java.lang.String CREATEDATE = "createDate";
  public static java.lang.String CREATEDBY = "createdBy";
  public static java.lang.String DAMAGEDITNS = "damagedItns";
  public static java.lang.String ENDDATE = "endDate";
  public static java.lang.String ENTITYDOMAIN = "entityDomain";
  public static java.lang.String FREEPROVIDER = "freeProvider";
  public static java.lang.String HANGINGITNS = "hangingItns";
  public static java.lang.String ID = "id";
  public static java.lang.String ITNS = "itns";
  public static java.lang.String KEYNAME = "keyName";
  public static java.lang.String LASTUPDATEDATE = "lastUpdateDate";
  public static java.lang.String LASTUPDATEDBY = "lastUpdatedBy";
  public static java.lang.String LOCKEDBY = "lockedBy";
  public static java.lang.String MONTHRECEIVED = "monthReceived";
  public static java.lang.String NETSOBTAINED = "netsObtained";
  public static java.lang.String OTHERITNS = "otherItns";
  public static java.lang.String OWNER = "owner";
  public static java.lang.String PREGNANTRESIDENTS = "pregnantResidents";
  public static java.lang.String QUESTIONNAIRENUMBER = "questionnaireNumber";
  public static java.lang.String RESIDENTS = "residents";
  public static java.lang.String RETREATED = "retreated";
  public static java.lang.String RETREATMENTPERIOD = "retreatmentPeriod";
  public static java.lang.String SEQ = "seq";
  public static java.lang.String SITEMASTER = "siteMaster";
  public static java.lang.String STARTDATE = "startDate";
  public static java.lang.String SURVEYLOCATION = "surveyLocation";
  public static java.lang.String TYPE = "type";
  public static java.lang.String USEDEVERYNIGHT = "usedEveryNight";
  public static java.lang.String USEDITNS = "usedItns";
  public static java.lang.String WASHFREQUENCY = "washFrequency";
  public static java.lang.String WASHINTERVAL = "washInterval";
  public static java.lang.String WASHED = "washed";
  public static java.lang.String YEARRECEIVED = "yearReceived";
  private static final long serialVersionUID = -148922379;
  
  public ITNHouseholdSurveyBase()
  {
    super();
  }
  
  public String getAgentFirstName()
  {
    return getValue(AGENTFIRSTNAME);
  }
  
  public void validateAgentFirstName()
  {
    this.validateAttribute(AGENTFIRSTNAME);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getAgentFirstNameMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.intervention.monitor.ITNHouseholdSurvey.CLASS);
    return mdClassIF.definesAttribute(AGENTFIRSTNAME);
  }
  
  public void setAgentFirstName(String value)
  {
    if(value == null)
    {
      setValue(AGENTFIRSTNAME, "");
    }
    else
    {
      setValue(AGENTFIRSTNAME, value);
    }
  }
  
  public String getAgentSurname()
  {
    return getValue(AGENTSURNAME);
  }
  
  public void validateAgentSurname()
  {
    this.validateAttribute(AGENTSURNAME);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getAgentSurnameMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.intervention.monitor.ITNHouseholdSurvey.CLASS);
    return mdClassIF.definesAttribute(AGENTSURNAME);
  }
  
  public void setAgentSurname(String value)
  {
    if(value == null)
    {
      setValue(AGENTSURNAME, "");
    }
    else
    {
      setValue(AGENTSURNAME, value);
    }
  }
  
  public dss.vector.solutions.ontology.Term getBoughtProvider()
  {
    if (getValue(BOUGHTPROVIDER).trim().equals(""))
    {
      return null;
    }
    else
    {
      return dss.vector.solutions.ontology.Term.get(getValue(BOUGHTPROVIDER));
    }
  }
  
  public void validateBoughtProvider()
  {
    this.validateAttribute(BOUGHTPROVIDER);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getBoughtProviderMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.intervention.monitor.ITNHouseholdSurvey.CLASS);
    return mdClassIF.definesAttribute(BOUGHTPROVIDER);
  }
  
  public void setBoughtProvider(dss.vector.solutions.ontology.Term value)
  {
    if(value == null)
    {
      setValue(BOUGHTPROVIDER, "");
    }
    else
    {
      setValue(BOUGHTPROVIDER, value.getId());
    }
  }
  
  public Integer getChildResidents()
  {
    return com.terraframe.mojo.constants.MdAttributeIntegerUtil.getTypeSafeValue(getValue(CHILDRESIDENTS));
  }
  
  public void validateChildResidents()
  {
    this.validateAttribute(CHILDRESIDENTS);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getChildResidentsMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.intervention.monitor.ITNHouseholdSurvey.CLASS);
    return mdClassIF.definesAttribute(CHILDRESIDENTS);
  }
  
  public void setChildResidents(Integer value)
  {
    if(value == null)
    {
      setValue(CHILDRESIDENTS, "");
    }
    else
    {
      setValue(CHILDRESIDENTS, java.lang.Integer.toString(value));
    }
  }
  
  public java.util.Date getCreateDate()
  {
    return com.terraframe.mojo.constants.MdAttributeDateTimeUtil.getTypeSafeValue(getValue(CREATEDATE));
  }
  
  public void validateCreateDate()
  {
    this.validateAttribute(CREATEDATE);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getCreateDateMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.intervention.monitor.ITNHouseholdSurvey.CLASS);
    return mdClassIF.definesAttribute(CREATEDATE);
  }
  
  public com.terraframe.mojo.system.SingleActor getCreatedBy()
  {
    if (getValue(CREATEDBY).trim().equals(""))
    {
      return null;
    }
    else
    {
      return com.terraframe.mojo.system.SingleActor.get(getValue(CREATEDBY));
    }
  }
  
  public void validateCreatedBy()
  {
    this.validateAttribute(CREATEDBY);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getCreatedByMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.intervention.monitor.ITNHouseholdSurvey.CLASS);
    return mdClassIF.definesAttribute(CREATEDBY);
  }
  
  public Integer getDamagedItns()
  {
    return com.terraframe.mojo.constants.MdAttributeIntegerUtil.getTypeSafeValue(getValue(DAMAGEDITNS));
  }
  
  public void validateDamagedItns()
  {
    this.validateAttribute(DAMAGEDITNS);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getDamagedItnsMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.intervention.monitor.ITNHouseholdSurvey.CLASS);
    return mdClassIF.definesAttribute(DAMAGEDITNS);
  }
  
  public void setDamagedItns(Integer value)
  {
    if(value == null)
    {
      setValue(DAMAGEDITNS, "");
    }
    else
    {
      setValue(DAMAGEDITNS, java.lang.Integer.toString(value));
    }
  }
  
  public java.util.Date getEndDate()
  {
    return com.terraframe.mojo.constants.MdAttributeDateUtil.getTypeSafeValue(getValue(ENDDATE));
  }
  
  public void validateEndDate()
  {
    this.validateAttribute(ENDDATE);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getEndDateMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.intervention.monitor.ITNHouseholdSurvey.CLASS);
    return mdClassIF.definesAttribute(ENDDATE);
  }
  
  public void setEndDate(java.util.Date value)
  {
    if(value == null)
    {
      setValue(ENDDATE, "");
    }
    else
    {
      setValue(ENDDATE, new java.text.SimpleDateFormat(com.terraframe.mojo.constants.Constants.DATE_FORMAT).format(value));
    }
  }
  
  public com.terraframe.mojo.system.metadata.MdDomain getEntityDomain()
  {
    if (getValue(ENTITYDOMAIN).trim().equals(""))
    {
      return null;
    }
    else
    {
      return com.terraframe.mojo.system.metadata.MdDomain.get(getValue(ENTITYDOMAIN));
    }
  }
  
  public void validateEntityDomain()
  {
    this.validateAttribute(ENTITYDOMAIN);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getEntityDomainMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.intervention.monitor.ITNHouseholdSurvey.CLASS);
    return mdClassIF.definesAttribute(ENTITYDOMAIN);
  }
  
  public void setEntityDomain(com.terraframe.mojo.system.metadata.MdDomain value)
  {
    if(value == null)
    {
      setValue(ENTITYDOMAIN, "");
    }
    else
    {
      setValue(ENTITYDOMAIN, value.getId());
    }
  }
  
  public dss.vector.solutions.ontology.Term getFreeProvider()
  {
    if (getValue(FREEPROVIDER).trim().equals(""))
    {
      return null;
    }
    else
    {
      return dss.vector.solutions.ontology.Term.get(getValue(FREEPROVIDER));
    }
  }
  
  public void validateFreeProvider()
  {
    this.validateAttribute(FREEPROVIDER);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getFreeProviderMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.intervention.monitor.ITNHouseholdSurvey.CLASS);
    return mdClassIF.definesAttribute(FREEPROVIDER);
  }
  
  public void setFreeProvider(dss.vector.solutions.ontology.Term value)
  {
    if(value == null)
    {
      setValue(FREEPROVIDER, "");
    }
    else
    {
      setValue(FREEPROVIDER, value.getId());
    }
  }
  
  public Integer getHangingItns()
  {
    return com.terraframe.mojo.constants.MdAttributeIntegerUtil.getTypeSafeValue(getValue(HANGINGITNS));
  }
  
  public void validateHangingItns()
  {
    this.validateAttribute(HANGINGITNS);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getHangingItnsMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.intervention.monitor.ITNHouseholdSurvey.CLASS);
    return mdClassIF.definesAttribute(HANGINGITNS);
  }
  
  public void setHangingItns(Integer value)
  {
    if(value == null)
    {
      setValue(HANGINGITNS, "");
    }
    else
    {
      setValue(HANGINGITNS, java.lang.Integer.toString(value));
    }
  }
  
  public String getId()
  {
    return getValue(ID);
  }
  
  public void validateId()
  {
    this.validateAttribute(ID);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getIdMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.intervention.monitor.ITNHouseholdSurvey.CLASS);
    return mdClassIF.definesAttribute(ID);
  }
  
  public Integer getItns()
  {
    return com.terraframe.mojo.constants.MdAttributeIntegerUtil.getTypeSafeValue(getValue(ITNS));
  }
  
  public void validateItns()
  {
    this.validateAttribute(ITNS);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getItnsMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.intervention.monitor.ITNHouseholdSurvey.CLASS);
    return mdClassIF.definesAttribute(ITNS);
  }
  
  public void setItns(Integer value)
  {
    if(value == null)
    {
      setValue(ITNS, "");
    }
    else
    {
      setValue(ITNS, java.lang.Integer.toString(value));
    }
  }
  
  public String getKeyName()
  {
    return getValue(KEYNAME);
  }
  
  public void validateKeyName()
  {
    this.validateAttribute(KEYNAME);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getKeyNameMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.intervention.monitor.ITNHouseholdSurvey.CLASS);
    return mdClassIF.definesAttribute(KEYNAME);
  }
  
  public void setKeyName(String value)
  {
    if(value == null)
    {
      setValue(KEYNAME, "");
    }
    else
    {
      setValue(KEYNAME, value);
    }
  }
  
  public java.util.Date getLastUpdateDate()
  {
    return com.terraframe.mojo.constants.MdAttributeDateTimeUtil.getTypeSafeValue(getValue(LASTUPDATEDATE));
  }
  
  public void validateLastUpdateDate()
  {
    this.validateAttribute(LASTUPDATEDATE);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getLastUpdateDateMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.intervention.monitor.ITNHouseholdSurvey.CLASS);
    return mdClassIF.definesAttribute(LASTUPDATEDATE);
  }
  
  public com.terraframe.mojo.system.SingleActor getLastUpdatedBy()
  {
    if (getValue(LASTUPDATEDBY).trim().equals(""))
    {
      return null;
    }
    else
    {
      return com.terraframe.mojo.system.SingleActor.get(getValue(LASTUPDATEDBY));
    }
  }
  
  public void validateLastUpdatedBy()
  {
    this.validateAttribute(LASTUPDATEDBY);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getLastUpdatedByMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.intervention.monitor.ITNHouseholdSurvey.CLASS);
    return mdClassIF.definesAttribute(LASTUPDATEDBY);
  }
  
  public com.terraframe.mojo.system.Users getLockedBy()
  {
    if (getValue(LOCKEDBY).trim().equals(""))
    {
      return null;
    }
    else
    {
      return com.terraframe.mojo.system.Users.get(getValue(LOCKEDBY));
    }
  }
  
  public void validateLockedBy()
  {
    this.validateAttribute(LOCKEDBY);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getLockedByMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.intervention.monitor.ITNHouseholdSurvey.CLASS);
    return mdClassIF.definesAttribute(LOCKEDBY);
  }
  
  public Integer getMonthReceived()
  {
    return com.terraframe.mojo.constants.MdAttributeIntegerUtil.getTypeSafeValue(getValue(MONTHRECEIVED));
  }
  
  public void validateMonthReceived()
  {
    this.validateAttribute(MONTHRECEIVED);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getMonthReceivedMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.intervention.monitor.ITNHouseholdSurvey.CLASS);
    return mdClassIF.definesAttribute(MONTHRECEIVED);
  }
  
  public void setMonthReceived(Integer value)
  {
    if(value == null)
    {
      setValue(MONTHRECEIVED, "");
    }
    else
    {
      setValue(MONTHRECEIVED, java.lang.Integer.toString(value));
    }
  }
  
  public Boolean getNetsObtained()
  {
    return com.terraframe.mojo.constants.MdAttributeBooleanUtil.getTypeSafeValue(getValue(NETSOBTAINED));
  }
  
  public void validateNetsObtained()
  {
    this.validateAttribute(NETSOBTAINED);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getNetsObtainedMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.intervention.monitor.ITNHouseholdSurvey.CLASS);
    return mdClassIF.definesAttribute(NETSOBTAINED);
  }
  
  public void setNetsObtained(Boolean value)
  {
    if(value == null)
    {
      setValue(NETSOBTAINED, "");
    }
    else
    {
      setValue(NETSOBTAINED, java.lang.Boolean.toString(value));
    }
  }
  
  public Integer getOtherItns()
  {
    return com.terraframe.mojo.constants.MdAttributeIntegerUtil.getTypeSafeValue(getValue(OTHERITNS));
  }
  
  public void validateOtherItns()
  {
    this.validateAttribute(OTHERITNS);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getOtherItnsMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.intervention.monitor.ITNHouseholdSurvey.CLASS);
    return mdClassIF.definesAttribute(OTHERITNS);
  }
  
  public void setOtherItns(Integer value)
  {
    if(value == null)
    {
      setValue(OTHERITNS, "");
    }
    else
    {
      setValue(OTHERITNS, java.lang.Integer.toString(value));
    }
  }
  
  public com.terraframe.mojo.system.Actor getOwner()
  {
    if (getValue(OWNER).trim().equals(""))
    {
      return null;
    }
    else
    {
      return com.terraframe.mojo.system.Actor.get(getValue(OWNER));
    }
  }
  
  public void validateOwner()
  {
    this.validateAttribute(OWNER);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getOwnerMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.intervention.monitor.ITNHouseholdSurvey.CLASS);
    return mdClassIF.definesAttribute(OWNER);
  }
  
  public void setOwner(com.terraframe.mojo.system.Actor value)
  {
    if(value == null)
    {
      setValue(OWNER, "");
    }
    else
    {
      setValue(OWNER, value.getId());
    }
  }
  
  public Integer getPregnantResidents()
  {
    return com.terraframe.mojo.constants.MdAttributeIntegerUtil.getTypeSafeValue(getValue(PREGNANTRESIDENTS));
  }
  
  public void validatePregnantResidents()
  {
    this.validateAttribute(PREGNANTRESIDENTS);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getPregnantResidentsMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.intervention.monitor.ITNHouseholdSurvey.CLASS);
    return mdClassIF.definesAttribute(PREGNANTRESIDENTS);
  }
  
  public void setPregnantResidents(Integer value)
  {
    if(value == null)
    {
      setValue(PREGNANTRESIDENTS, "");
    }
    else
    {
      setValue(PREGNANTRESIDENTS, java.lang.Integer.toString(value));
    }
  }
  
  public String getQuestionnaireNumber()
  {
    return getValue(QUESTIONNAIRENUMBER);
  }
  
  public void validateQuestionnaireNumber()
  {
    this.validateAttribute(QUESTIONNAIRENUMBER);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getQuestionnaireNumberMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.intervention.monitor.ITNHouseholdSurvey.CLASS);
    return mdClassIF.definesAttribute(QUESTIONNAIRENUMBER);
  }
  
  public void setQuestionnaireNumber(String value)
  {
    if(value == null)
    {
      setValue(QUESTIONNAIRENUMBER, "");
    }
    else
    {
      setValue(QUESTIONNAIRENUMBER, value);
    }
  }
  
  public Integer getResidents()
  {
    return com.terraframe.mojo.constants.MdAttributeIntegerUtil.getTypeSafeValue(getValue(RESIDENTS));
  }
  
  public void validateResidents()
  {
    this.validateAttribute(RESIDENTS);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getResidentsMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.intervention.monitor.ITNHouseholdSurvey.CLASS);
    return mdClassIF.definesAttribute(RESIDENTS);
  }
  
  public void setResidents(Integer value)
  {
    if(value == null)
    {
      setValue(RESIDENTS, "");
    }
    else
    {
      setValue(RESIDENTS, java.lang.Integer.toString(value));
    }
  }
  
  public Boolean getRetreated()
  {
    return com.terraframe.mojo.constants.MdAttributeBooleanUtil.getTypeSafeValue(getValue(RETREATED));
  }
  
  public void validateRetreated()
  {
    this.validateAttribute(RETREATED);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getRetreatedMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.intervention.monitor.ITNHouseholdSurvey.CLASS);
    return mdClassIF.definesAttribute(RETREATED);
  }
  
  public void setRetreated(Boolean value)
  {
    if(value == null)
    {
      setValue(RETREATED, "");
    }
    else
    {
      setValue(RETREATED, java.lang.Boolean.toString(value));
    }
  }
  
  public dss.vector.solutions.ontology.Term getRetreatmentPeriod()
  {
    if (getValue(RETREATMENTPERIOD).trim().equals(""))
    {
      return null;
    }
    else
    {
      return dss.vector.solutions.ontology.Term.get(getValue(RETREATMENTPERIOD));
    }
  }
  
  public void validateRetreatmentPeriod()
  {
    this.validateAttribute(RETREATMENTPERIOD);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getRetreatmentPeriodMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.intervention.monitor.ITNHouseholdSurvey.CLASS);
    return mdClassIF.definesAttribute(RETREATMENTPERIOD);
  }
  
  public void setRetreatmentPeriod(dss.vector.solutions.ontology.Term value)
  {
    if(value == null)
    {
      setValue(RETREATMENTPERIOD, "");
    }
    else
    {
      setValue(RETREATMENTPERIOD, value.getId());
    }
  }
  
  public Long getSeq()
  {
    return com.terraframe.mojo.constants.MdAttributeLongUtil.getTypeSafeValue(getValue(SEQ));
  }
  
  public void validateSeq()
  {
    this.validateAttribute(SEQ);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getSeqMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.intervention.monitor.ITNHouseholdSurvey.CLASS);
    return mdClassIF.definesAttribute(SEQ);
  }
  
  public String getSiteMaster()
  {
    return getValue(SITEMASTER);
  }
  
  public void validateSiteMaster()
  {
    this.validateAttribute(SITEMASTER);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getSiteMasterMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.intervention.monitor.ITNHouseholdSurvey.CLASS);
    return mdClassIF.definesAttribute(SITEMASTER);
  }
  
  public java.util.Date getStartDate()
  {
    return com.terraframe.mojo.constants.MdAttributeDateUtil.getTypeSafeValue(getValue(STARTDATE));
  }
  
  public void validateStartDate()
  {
    this.validateAttribute(STARTDATE);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getStartDateMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.intervention.monitor.ITNHouseholdSurvey.CLASS);
    return mdClassIF.definesAttribute(STARTDATE);
  }
  
  public void setStartDate(java.util.Date value)
  {
    if(value == null)
    {
      setValue(STARTDATE, "");
    }
    else
    {
      setValue(STARTDATE, new java.text.SimpleDateFormat(com.terraframe.mojo.constants.Constants.DATE_FORMAT).format(value));
    }
  }
  
  public dss.vector.solutions.geo.generated.GeoEntity getSurveyLocation()
  {
    if (getValue(SURVEYLOCATION).trim().equals(""))
    {
      return null;
    }
    else
    {
      return dss.vector.solutions.geo.generated.GeoEntity.get(getValue(SURVEYLOCATION));
    }
  }
  
  public void validateSurveyLocation()
  {
    this.validateAttribute(SURVEYLOCATION);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getSurveyLocationMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.intervention.monitor.ITNHouseholdSurvey.CLASS);
    return mdClassIF.definesAttribute(SURVEYLOCATION);
  }
  
  public void setSurveyLocation(dss.vector.solutions.geo.generated.GeoEntity value)
  {
    if(value == null)
    {
      setValue(SURVEYLOCATION, "");
    }
    else
    {
      setValue(SURVEYLOCATION, value.getId());
    }
  }
  
  public String getType()
  {
    return getValue(TYPE);
  }
  
  public void validateType()
  {
    this.validateAttribute(TYPE);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getTypeMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.intervention.monitor.ITNHouseholdSurvey.CLASS);
    return mdClassIF.definesAttribute(TYPE);
  }
  
  public Boolean getUsedEveryNight()
  {
    return com.terraframe.mojo.constants.MdAttributeBooleanUtil.getTypeSafeValue(getValue(USEDEVERYNIGHT));
  }
  
  public void validateUsedEveryNight()
  {
    this.validateAttribute(USEDEVERYNIGHT);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getUsedEveryNightMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.intervention.monitor.ITNHouseholdSurvey.CLASS);
    return mdClassIF.definesAttribute(USEDEVERYNIGHT);
  }
  
  public void setUsedEveryNight(Boolean value)
  {
    if(value == null)
    {
      setValue(USEDEVERYNIGHT, "");
    }
    else
    {
      setValue(USEDEVERYNIGHT, java.lang.Boolean.toString(value));
    }
  }
  
  public Integer getUsedItns()
  {
    return com.terraframe.mojo.constants.MdAttributeIntegerUtil.getTypeSafeValue(getValue(USEDITNS));
  }
  
  public void validateUsedItns()
  {
    this.validateAttribute(USEDITNS);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getUsedItnsMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.intervention.monitor.ITNHouseholdSurvey.CLASS);
    return mdClassIF.definesAttribute(USEDITNS);
  }
  
  public void setUsedItns(Integer value)
  {
    if(value == null)
    {
      setValue(USEDITNS, "");
    }
    else
    {
      setValue(USEDITNS, java.lang.Integer.toString(value));
    }
  }
  
  public Integer getWashFrequency()
  {
    return com.terraframe.mojo.constants.MdAttributeIntegerUtil.getTypeSafeValue(getValue(WASHFREQUENCY));
  }
  
  public void validateWashFrequency()
  {
    this.validateAttribute(WASHFREQUENCY);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getWashFrequencyMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.intervention.monitor.ITNHouseholdSurvey.CLASS);
    return mdClassIF.definesAttribute(WASHFREQUENCY);
  }
  
  public void setWashFrequency(Integer value)
  {
    if(value == null)
    {
      setValue(WASHFREQUENCY, "");
    }
    else
    {
      setValue(WASHFREQUENCY, java.lang.Integer.toString(value));
    }
  }
  
  public dss.vector.solutions.ontology.Term getWashInterval()
  {
    if (getValue(WASHINTERVAL).trim().equals(""))
    {
      return null;
    }
    else
    {
      return dss.vector.solutions.ontology.Term.get(getValue(WASHINTERVAL));
    }
  }
  
  public void validateWashInterval()
  {
    this.validateAttribute(WASHINTERVAL);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getWashIntervalMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.intervention.monitor.ITNHouseholdSurvey.CLASS);
    return mdClassIF.definesAttribute(WASHINTERVAL);
  }
  
  public void setWashInterval(dss.vector.solutions.ontology.Term value)
  {
    if(value == null)
    {
      setValue(WASHINTERVAL, "");
    }
    else
    {
      setValue(WASHINTERVAL, value.getId());
    }
  }
  
  public dss.vector.solutions.ontology.Term getWashed()
  {
    if (getValue(WASHED).trim().equals(""))
    {
      return null;
    }
    else
    {
      return dss.vector.solutions.ontology.Term.get(getValue(WASHED));
    }
  }
  
  public void validateWashed()
  {
    this.validateAttribute(WASHED);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getWashedMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.intervention.monitor.ITNHouseholdSurvey.CLASS);
    return mdClassIF.definesAttribute(WASHED);
  }
  
  public void setWashed(dss.vector.solutions.ontology.Term value)
  {
    if(value == null)
    {
      setValue(WASHED, "");
    }
    else
    {
      setValue(WASHED, value.getId());
    }
  }
  
  public Integer getYearReceived()
  {
    return com.terraframe.mojo.constants.MdAttributeIntegerUtil.getTypeSafeValue(getValue(YEARRECEIVED));
  }
  
  public void validateYearReceived()
  {
    this.validateAttribute(YEARRECEIVED);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getYearReceivedMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.intervention.monitor.ITNHouseholdSurvey.CLASS);
    return mdClassIF.definesAttribute(YEARRECEIVED);
  }
  
  public void setYearReceived(Integer value)
  {
    if(value == null)
    {
      setValue(YEARRECEIVED, "");
    }
    else
    {
      setValue(YEARRECEIVED, java.lang.Integer.toString(value));
    }
  }
  
  protected String getDeclaredType()
  {
    return CLASS;
  }
  
  public static ITNHouseholdSurveyQuery getAllInstances(String sortAttribute, Boolean ascending, Integer pageSize, Integer pageNumber)
  {
    ITNHouseholdSurveyQuery query = new ITNHouseholdSurveyQuery(new com.terraframe.mojo.query.QueryFactory());
    com.terraframe.mojo.business.Entity.getAllInstances(query, sortAttribute, ascending, pageSize, pageNumber);
    return query;
  }
  
  public dss.vector.solutions.intervention.monitor.ITNHouseholdSurveyNet addNets(dss.vector.solutions.ontology.Term term)
  {
    return (dss.vector.solutions.intervention.monitor.ITNHouseholdSurveyNet) addChild(term, dss.vector.solutions.intervention.monitor.ITNHouseholdSurveyNet.CLASS);
  }
  
  public void removeNets(dss.vector.solutions.ontology.Term term)
  {
    removeAllChildren(term, dss.vector.solutions.intervention.monitor.ITNHouseholdSurveyNet.CLASS);
  }
  
  @SuppressWarnings("unchecked")
  public com.terraframe.mojo.query.OIterator<? extends dss.vector.solutions.ontology.Term> getAllNets()
  {
    return (com.terraframe.mojo.query.OIterator<? extends dss.vector.solutions.ontology.Term>) getChildren(dss.vector.solutions.intervention.monitor.ITNHouseholdSurveyNet.CLASS);
  }
  
  @SuppressWarnings("unchecked")
  public com.terraframe.mojo.query.OIterator<? extends dss.vector.solutions.intervention.monitor.ITNHouseholdSurveyNet> getAllNetsRel()
  {
    return (com.terraframe.mojo.query.OIterator<? extends dss.vector.solutions.intervention.monitor.ITNHouseholdSurveyNet>) getChildRelationships(dss.vector.solutions.intervention.monitor.ITNHouseholdSurveyNet.CLASS);
  }
  
  @SuppressWarnings("unchecked")
  public dss.vector.solutions.intervention.monitor.ITNHouseholdSurveyNet getNetsRel(dss.vector.solutions.ontology.Term term)
  {
    com.terraframe.mojo.query.OIterator<? extends dss.vector.solutions.intervention.monitor.ITNHouseholdSurveyNet> iterator = (com.terraframe.mojo.query.OIterator<? extends dss.vector.solutions.intervention.monitor.ITNHouseholdSurveyNet>) getRelationshipsWithChild(term, dss.vector.solutions.intervention.monitor.ITNHouseholdSurveyNet.CLASS);
    try
    {
      if (iterator.hasNext())
      {
        return iterator.next();
      }
      else
      {
        return null;
      }
    }
    finally
    {
      iterator.close();
    }
  }
  
  public dss.vector.solutions.intervention.monitor.ITNHouseholdSurveyNonUseReason addNonUseReasons(dss.vector.solutions.ontology.Term term)
  {
    return (dss.vector.solutions.intervention.monitor.ITNHouseholdSurveyNonUseReason) addChild(term, dss.vector.solutions.intervention.monitor.ITNHouseholdSurveyNonUseReason.CLASS);
  }
  
  public void removeNonUseReasons(dss.vector.solutions.ontology.Term term)
  {
    removeAllChildren(term, dss.vector.solutions.intervention.monitor.ITNHouseholdSurveyNonUseReason.CLASS);
  }
  
  @SuppressWarnings("unchecked")
  public com.terraframe.mojo.query.OIterator<? extends dss.vector.solutions.ontology.Term> getAllNonUseReasons()
  {
    return (com.terraframe.mojo.query.OIterator<? extends dss.vector.solutions.ontology.Term>) getChildren(dss.vector.solutions.intervention.monitor.ITNHouseholdSurveyNonUseReason.CLASS);
  }
  
  @SuppressWarnings("unchecked")
  public com.terraframe.mojo.query.OIterator<? extends dss.vector.solutions.intervention.monitor.ITNHouseholdSurveyNonUseReason> getAllNonUseReasonsRel()
  {
    return (com.terraframe.mojo.query.OIterator<? extends dss.vector.solutions.intervention.monitor.ITNHouseholdSurveyNonUseReason>) getChildRelationships(dss.vector.solutions.intervention.monitor.ITNHouseholdSurveyNonUseReason.CLASS);
  }
  
  @SuppressWarnings("unchecked")
  public dss.vector.solutions.intervention.monitor.ITNHouseholdSurveyNonUseReason getNonUseReasonsRel(dss.vector.solutions.ontology.Term term)
  {
    com.terraframe.mojo.query.OIterator<? extends dss.vector.solutions.intervention.monitor.ITNHouseholdSurveyNonUseReason> iterator = (com.terraframe.mojo.query.OIterator<? extends dss.vector.solutions.intervention.monitor.ITNHouseholdSurveyNonUseReason>) getRelationshipsWithChild(term, dss.vector.solutions.intervention.monitor.ITNHouseholdSurveyNonUseReason.CLASS);
    try
    {
      if (iterator.hasNext())
      {
        return iterator.next();
      }
      else
      {
        return null;
      }
    }
    finally
    {
      iterator.close();
    }
  }
  
  public dss.vector.solutions.intervention.monitor.ITNHouseholdSurveyTargetGroup addTargetGroups(dss.vector.solutions.ontology.Term term)
  {
    return (dss.vector.solutions.intervention.monitor.ITNHouseholdSurveyTargetGroup) addChild(term, dss.vector.solutions.intervention.monitor.ITNHouseholdSurveyTargetGroup.CLASS);
  }
  
  public void removeTargetGroups(dss.vector.solutions.ontology.Term term)
  {
    removeAllChildren(term, dss.vector.solutions.intervention.monitor.ITNHouseholdSurveyTargetGroup.CLASS);
  }
  
  @SuppressWarnings("unchecked")
  public com.terraframe.mojo.query.OIterator<? extends dss.vector.solutions.ontology.Term> getAllTargetGroups()
  {
    return (com.terraframe.mojo.query.OIterator<? extends dss.vector.solutions.ontology.Term>) getChildren(dss.vector.solutions.intervention.monitor.ITNHouseholdSurveyTargetGroup.CLASS);
  }
  
  @SuppressWarnings("unchecked")
  public com.terraframe.mojo.query.OIterator<? extends dss.vector.solutions.intervention.monitor.ITNHouseholdSurveyTargetGroup> getAllTargetGroupsRel()
  {
    return (com.terraframe.mojo.query.OIterator<? extends dss.vector.solutions.intervention.monitor.ITNHouseholdSurveyTargetGroup>) getChildRelationships(dss.vector.solutions.intervention.monitor.ITNHouseholdSurveyTargetGroup.CLASS);
  }
  
  @SuppressWarnings("unchecked")
  public dss.vector.solutions.intervention.monitor.ITNHouseholdSurveyTargetGroup getTargetGroupsRel(dss.vector.solutions.ontology.Term term)
  {
    com.terraframe.mojo.query.OIterator<? extends dss.vector.solutions.intervention.monitor.ITNHouseholdSurveyTargetGroup> iterator = (com.terraframe.mojo.query.OIterator<? extends dss.vector.solutions.intervention.monitor.ITNHouseholdSurveyTargetGroup>) getRelationshipsWithChild(term, dss.vector.solutions.intervention.monitor.ITNHouseholdSurveyTargetGroup.CLASS);
    try
    {
      if (iterator.hasNext())
      {
        return iterator.next();
      }
      else
      {
        return null;
      }
    }
    finally
    {
      iterator.close();
    }
  }
  
  public static ITNHouseholdSurvey get(String id)
  {
    return (ITNHouseholdSurvey) com.terraframe.mojo.business.Business.get(id);
  }
  
  public static ITNHouseholdSurvey getByKey(String key)
  {
    return (ITNHouseholdSurvey) com.terraframe.mojo.business.Business.get(CLASS, key);
  }
  
  public static dss.vector.solutions.intervention.monitor.ITNHouseholdSurveyView getView(java.lang.String id)
  {
    String msg = "This method should never be invoked.  It should be overwritten in dss.vector.solutions.intervention.monitor.ITNHouseholdSurvey.java";
    throw new com.terraframe.mojo.dataaccess.metadata.ForbiddenMethodException(msg);
  }
  
  public dss.vector.solutions.intervention.monitor.ITNHouseholdSurveyView lockView()
  {
    String msg = "This method should never be invoked.  It should be overwritten in dss.vector.solutions.intervention.monitor.ITNHouseholdSurvey.java";
    throw new com.terraframe.mojo.dataaccess.metadata.ForbiddenMethodException(msg);
  }
  
  public static final dss.vector.solutions.intervention.monitor.ITNHouseholdSurveyView lockView(java.lang.String id)
  {
    ITNHouseholdSurvey _instance = ITNHouseholdSurvey.get(id);
    return _instance.lockView();
  }
  
  public dss.vector.solutions.intervention.monitor.ITNHouseholdSurveyView unlockView()
  {
    String msg = "This method should never be invoked.  It should be overwritten in dss.vector.solutions.intervention.monitor.ITNHouseholdSurvey.java";
    throw new com.terraframe.mojo.dataaccess.metadata.ForbiddenMethodException(msg);
  }
  
  public static final dss.vector.solutions.intervention.monitor.ITNHouseholdSurveyView unlockView(java.lang.String id)
  {
    ITNHouseholdSurvey _instance = ITNHouseholdSurvey.get(id);
    return _instance.unlockView();
  }
  
  public static ITNHouseholdSurvey lock(java.lang.String id)
  {
    ITNHouseholdSurvey _instance = ITNHouseholdSurvey.get(id);
    _instance.lock();
    
    return _instance;
  }
  
  public static ITNHouseholdSurvey unlock(java.lang.String id)
  {
    ITNHouseholdSurvey _instance = ITNHouseholdSurvey.get(id);
    _instance.unlock();
    
    return _instance;
  }
  
  public String toString()
  {
    if (this.isNew())
    {
      return "New: "+ this.getClassDisplayLabel();
    }
    else
    {
      return super.toString();
    }
  }
}
