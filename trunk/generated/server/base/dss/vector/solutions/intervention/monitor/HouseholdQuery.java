package dss.vector.solutions.intervention.monitor;

@com.terraframe.mojo.business.ClassSignature(hash = 1459283127)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to Household.java
 *
 * @author Autogenerated by TerraFrame
 */
public  class HouseholdQuery extends com.terraframe.mojo.query.GeneratedBusinessQuery
 implements com.terraframe.mojo.generation.loader.Reloadable
{
private static final long serialVersionUID = 1459283127;

  public HouseholdQuery(com.terraframe.mojo.query.QueryFactory componentQueryFactory)
  {
     super();
    if (this.getComponentQuery() == null)
    {
      com.terraframe.mojo.business.BusinessQuery businessQuery = componentQueryFactory.businessQuery(this.getClassType());

       this.setBusinessQuery(businessQuery);
    }
  }

  public HouseholdQuery(com.terraframe.mojo.query.ValueQuery valueQuery)
  {
     super();
    if (this.getComponentQuery() == null)
    {
      com.terraframe.mojo.business.BusinessQuery businessQuery = new com.terraframe.mojo.business.BusinessQuery(valueQuery, this.getClassType());

       this.setBusinessQuery(businessQuery);
    }
  }

  public String getClassType()
  {
    return dss.vector.solutions.intervention.monitor.Household.CLASS;
  }
  public com.terraframe.mojo.query.AttributeMoment getCreateDate()
  {
    return getCreateDate(null);

  }
 
  public com.terraframe.mojo.query.AttributeMoment getCreateDate(String alias)
  {
    return (com.terraframe.mojo.query.AttributeMoment)this.getComponentQuery().get(dss.vector.solutions.intervention.monitor.Household.CREATEDATE, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeMoment getCreateDate(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeMoment)this.getComponentQuery().get(dss.vector.solutions.intervention.monitor.Household.CREATEDATE, alias, displayLabel);

  }
  public com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy()
  {
    return getCreatedBy(null);

  }
 
  public com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias)
  {

    com.terraframe.mojo.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap("createdBy");

    return (com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.intervention.monitor.Household.CREATEDBY, mdAttributeIF, this, alias, null);

  }
 
  public com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias, String displayLabel)
  {

    com.terraframe.mojo.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap("createdBy");

    return (com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.intervention.monitor.Household.CREATEDBY, mdAttributeIF, this, alias, displayLabel);

  }
  public com.terraframe.mojo.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain()
  {
    return getEntityDomain(null);

  }
 
  public com.terraframe.mojo.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias)
  {

    com.terraframe.mojo.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap("entityDomain");

    return (com.terraframe.mojo.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.intervention.monitor.Household.ENTITYDOMAIN, mdAttributeIF, this, alias, null);

  }
 
  public com.terraframe.mojo.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias, String displayLabel)
  {

    com.terraframe.mojo.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap("entityDomain");

    return (com.terraframe.mojo.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.intervention.monitor.Household.ENTITYDOMAIN, mdAttributeIF, this, alias, displayLabel);

  }
  public dss.vector.solutions.ResponseMasterQuery.ResponseQueryIF getHasBeenSprayed()
  {
    return getHasBeenSprayed(null);

  }
 
  public dss.vector.solutions.ResponseMasterQuery.ResponseQueryIF getHasBeenSprayed(String alias)
  {

    com.terraframe.mojo.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap("hasBeenSprayed");

    return (dss.vector.solutions.ResponseMasterQuery.ResponseQueryIF)this.getComponentQuery().internalAttributeFactory("hasBeenSprayed", mdAttributeIF, this, alias, null);

  }
 
  public dss.vector.solutions.ResponseMasterQuery.ResponseQueryIF getHasBeenSprayed(String alias, String displayLabel)
  {

    com.terraframe.mojo.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap("hasBeenSprayed");

    return (dss.vector.solutions.ResponseMasterQuery.ResponseQueryIF)this.getComponentQuery().internalAttributeFactory("hasBeenSprayed", mdAttributeIF, this, alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeBoolean getHasWindows()
  {
    return getHasWindows(null);

  }
 
  public com.terraframe.mojo.query.AttributeBoolean getHasWindows(String alias)
  {
    return (com.terraframe.mojo.query.AttributeBoolean)this.getComponentQuery().get(dss.vector.solutions.intervention.monitor.Household.HASWINDOWS, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeBoolean getHasWindows(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeBoolean)this.getComponentQuery().get(dss.vector.solutions.intervention.monitor.Household.HASWINDOWS, alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeChar getHouseholdName()
  {
    return getHouseholdName(null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getHouseholdName(String alias)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.getComponentQuery().get(dss.vector.solutions.intervention.monitor.Household.HOUSEHOLDNAME, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getHouseholdName(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.getComponentQuery().get(dss.vector.solutions.intervention.monitor.Household.HOUSEHOLDNAME, alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeChar getId()
  {
    return getId(null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getId(String alias)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.getComponentQuery().get(dss.vector.solutions.intervention.monitor.Household.ID, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getId(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.getComponentQuery().get(dss.vector.solutions.intervention.monitor.Household.ID, alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeChar getKeyName()
  {
    return getKeyName(null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getKeyName(String alias)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.getComponentQuery().get(dss.vector.solutions.intervention.monitor.Household.KEYNAME, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getKeyName(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.getComponentQuery().get(dss.vector.solutions.intervention.monitor.Household.KEYNAME, alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeInteger getLastSprayed()
  {
    return getLastSprayed(null);

  }
 
  public com.terraframe.mojo.query.AttributeInteger getLastSprayed(String alias)
  {
    return (com.terraframe.mojo.query.AttributeInteger)this.getComponentQuery().get(dss.vector.solutions.intervention.monitor.Household.LASTSPRAYED, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeInteger getLastSprayed(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeInteger)this.getComponentQuery().get(dss.vector.solutions.intervention.monitor.Household.LASTSPRAYED, alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeMoment getLastUpdateDate()
  {
    return getLastUpdateDate(null);

  }
 
  public com.terraframe.mojo.query.AttributeMoment getLastUpdateDate(String alias)
  {
    return (com.terraframe.mojo.query.AttributeMoment)this.getComponentQuery().get(dss.vector.solutions.intervention.monitor.Household.LASTUPDATEDATE, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeMoment getLastUpdateDate(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeMoment)this.getComponentQuery().get(dss.vector.solutions.intervention.monitor.Household.LASTUPDATEDATE, alias, displayLabel);

  }
  public com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy()
  {
    return getLastUpdatedBy(null);

  }
 
  public com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias)
  {

    com.terraframe.mojo.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap("lastUpdatedBy");

    return (com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.intervention.monitor.Household.LASTUPDATEDBY, mdAttributeIF, this, alias, null);

  }
 
  public com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias, String displayLabel)
  {

    com.terraframe.mojo.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap("lastUpdatedBy");

    return (com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.intervention.monitor.Household.LASTUPDATEDBY, mdAttributeIF, this, alias, displayLabel);

  }
  public com.terraframe.mojo.system.UsersQuery.UsersQueryReferenceIF getLockedBy()
  {
    return getLockedBy(null);

  }
 
  public com.terraframe.mojo.system.UsersQuery.UsersQueryReferenceIF getLockedBy(String alias)
  {

    com.terraframe.mojo.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap("lockedBy");

    return (com.terraframe.mojo.system.UsersQuery.UsersQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.intervention.monitor.Household.LOCKEDBY, mdAttributeIF, this, alias, null);

  }
 
  public com.terraframe.mojo.system.UsersQuery.UsersQueryReferenceIF getLockedBy(String alias, String displayLabel)
  {

    com.terraframe.mojo.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap("lockedBy");

    return (com.terraframe.mojo.system.UsersQuery.UsersQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.intervention.monitor.Household.LOCKEDBY, mdAttributeIF, this, alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeInteger getNets()
  {
    return getNets(null);

  }
 
  public com.terraframe.mojo.query.AttributeInteger getNets(String alias)
  {
    return (com.terraframe.mojo.query.AttributeInteger)this.getComponentQuery().get(dss.vector.solutions.intervention.monitor.Household.NETS, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeInteger getNets(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeInteger)this.getComponentQuery().get(dss.vector.solutions.intervention.monitor.Household.NETS, alias, displayLabel);

  }
  public com.terraframe.mojo.system.ActorQuery.ActorQueryReferenceIF getOwner()
  {
    return getOwner(null);

  }
 
  public com.terraframe.mojo.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias)
  {

    com.terraframe.mojo.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap("owner");

    return (com.terraframe.mojo.system.ActorQuery.ActorQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.intervention.monitor.Household.OWNER, mdAttributeIF, this, alias, null);

  }
 
  public com.terraframe.mojo.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias, String displayLabel)
  {

    com.terraframe.mojo.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap("owner");

    return (com.terraframe.mojo.system.ActorQuery.ActorQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.intervention.monitor.Household.OWNER, mdAttributeIF, this, alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeInteger getPeople()
  {
    return getPeople(null);

  }
 
  public com.terraframe.mojo.query.AttributeInteger getPeople(String alias)
  {
    return (com.terraframe.mojo.query.AttributeInteger)this.getComponentQuery().get(dss.vector.solutions.intervention.monitor.Household.PEOPLE, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeInteger getPeople(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeInteger)this.getComponentQuery().get(dss.vector.solutions.intervention.monitor.Household.PEOPLE, alias, displayLabel);

  }
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getRoof()
  {
    return getRoof(null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getRoof(String alias)
  {

    com.terraframe.mojo.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap("roof");

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.intervention.monitor.Household.ROOF, mdAttributeIF, this, alias, null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getRoof(String alias, String displayLabel)
  {

    com.terraframe.mojo.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap("roof");

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.intervention.monitor.Household.ROOF, mdAttributeIF, this, alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeChar getRoofInfo()
  {
    return getRoofInfo(null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getRoofInfo(String alias)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.getComponentQuery().get(dss.vector.solutions.intervention.monitor.Household.ROOFINFO, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getRoofInfo(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.getComponentQuery().get(dss.vector.solutions.intervention.monitor.Household.ROOFINFO, alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeInteger getRooms()
  {
    return getRooms(null);

  }
 
  public com.terraframe.mojo.query.AttributeInteger getRooms(String alias)
  {
    return (com.terraframe.mojo.query.AttributeInteger)this.getComponentQuery().get(dss.vector.solutions.intervention.monitor.Household.ROOMS, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeInteger getRooms(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeInteger)this.getComponentQuery().get(dss.vector.solutions.intervention.monitor.Household.ROOMS, alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeLong getSeq()
  {
    return getSeq(null);

  }
 
  public com.terraframe.mojo.query.AttributeLong getSeq(String alias)
  {
    return (com.terraframe.mojo.query.AttributeLong)this.getComponentQuery().get(dss.vector.solutions.intervention.monitor.Household.SEQ, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeLong getSeq(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeLong)this.getComponentQuery().get(dss.vector.solutions.intervention.monitor.Household.SEQ, alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeChar getSiteMaster()
  {
    return getSiteMaster(null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getSiteMaster(String alias)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.getComponentQuery().get(dss.vector.solutions.intervention.monitor.Household.SITEMASTER, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getSiteMaster(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.getComponentQuery().get(dss.vector.solutions.intervention.monitor.Household.SITEMASTER, alias, displayLabel);

  }
  public dss.vector.solutions.intervention.monitor.SurveyPointQuery.SurveyPointQueryReferenceIF getSurveyPoint()
  {
    return getSurveyPoint(null);

  }
 
  public dss.vector.solutions.intervention.monitor.SurveyPointQuery.SurveyPointQueryReferenceIF getSurveyPoint(String alias)
  {

    com.terraframe.mojo.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap("surveyPoint");

    return (dss.vector.solutions.intervention.monitor.SurveyPointQuery.SurveyPointQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.intervention.monitor.Household.SURVEYPOINT, mdAttributeIF, this, alias, null);

  }
 
  public dss.vector.solutions.intervention.monitor.SurveyPointQuery.SurveyPointQueryReferenceIF getSurveyPoint(String alias, String displayLabel)
  {

    com.terraframe.mojo.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap("surveyPoint");

    return (dss.vector.solutions.intervention.monitor.SurveyPointQuery.SurveyPointQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.intervention.monitor.Household.SURVEYPOINT, mdAttributeIF, this, alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeChar getType()
  {
    return getType(null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getType(String alias)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.getComponentQuery().get(dss.vector.solutions.intervention.monitor.Household.TYPE, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getType(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.getComponentQuery().get(dss.vector.solutions.intervention.monitor.Household.TYPE, alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeBoolean getUrban()
  {
    return getUrban(null);

  }
 
  public com.terraframe.mojo.query.AttributeBoolean getUrban(String alias)
  {
    return (com.terraframe.mojo.query.AttributeBoolean)this.getComponentQuery().get(dss.vector.solutions.intervention.monitor.Household.URBAN, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeBoolean getUrban(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeBoolean)this.getComponentQuery().get(dss.vector.solutions.intervention.monitor.Household.URBAN, alias, displayLabel);

  }
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getWall()
  {
    return getWall(null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getWall(String alias)
  {

    com.terraframe.mojo.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap("wall");

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.intervention.monitor.Household.WALL, mdAttributeIF, this, alias, null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getWall(String alias, String displayLabel)
  {

    com.terraframe.mojo.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap("wall");

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.intervention.monitor.Household.WALL, mdAttributeIF, this, alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeChar getWallInfo()
  {
    return getWallInfo(null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getWallInfo(String alias)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.getComponentQuery().get(dss.vector.solutions.intervention.monitor.Household.WALLINFO, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getWallInfo(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.getComponentQuery().get(dss.vector.solutions.intervention.monitor.Household.WALLINFO, alias, displayLabel);

  }
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getWindowType()
  {
    return getWindowType(null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getWindowType(String alias)
  {

    com.terraframe.mojo.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap("windowType");

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.intervention.monitor.Household.WINDOWTYPE, mdAttributeIF, this, alias, null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getWindowType(String alias, String displayLabel)
  {

    com.terraframe.mojo.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap("windowType");

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(dss.vector.solutions.intervention.monitor.Household.WINDOWTYPE, mdAttributeIF, this, alias, displayLabel);

  }
  protected com.terraframe.mojo.query.AttributeReference referenceFactory( com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  com.terraframe.mojo.dataaccess.MdBusinessDAOIF referenceMdBusinessIF, String referenceTableAlias, com.terraframe.mojo.query.ComponentQuery rootQuery, java.util.Set<com.terraframe.mojo.query.Join> tableJoinSet, String userDefinedAlias, String userDefinedDisplayLabel)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals("createdBy")) 
    {
       return new com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReference((com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals("entityDomain")) 
    {
       return new com.terraframe.mojo.system.metadata.MdDomainQuery.MdDomainQueryReference((com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals("lastUpdatedBy")) 
    {
       return new com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReference((com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals("lockedBy")) 
    {
       return new com.terraframe.mojo.system.UsersQuery.UsersQueryReference((com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals("owner")) 
    {
       return new com.terraframe.mojo.system.ActorQuery.ActorQueryReference((com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals("roof")) 
    {
       return new dss.vector.solutions.ontology.TermQuery.TermQueryReference((com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals("surveyPoint")) 
    {
       return new dss.vector.solutions.intervention.monitor.SurveyPointQuery.SurveyPointQueryReference((com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals("wall")) 
    {
       return new dss.vector.solutions.ontology.TermQuery.TermQueryReference((com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals("windowType")) 
    {
       return new dss.vector.solutions.ontology.TermQuery.TermQueryReference((com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else 
    {
      String error = "Attribute type ["+mdAttributeIF.getType()+"] is invalid.";
      throw new com.terraframe.mojo.query.QueryException(error);
    }
  }

  protected com.terraframe.mojo.query.AttributeEnumeration enumerationFactory( com.terraframe.mojo.dataaccess.MdAttributeEnumerationDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  String mdEnumerationTableName, com.terraframe.mojo.dataaccess.MdBusinessDAOIF masterListMdBusinessIF, String masterListTalbeAlias, com.terraframe.mojo.query.ComponentQuery rootQuery, java.util.Set<com.terraframe.mojo.query.Join> tableJoinSet, String userDefinedAlias, String userDefinedDisplayLabel)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals("hasBeenSprayed")) 
    {
       return new dss.vector.solutions.ResponseMasterQuery.ResponseQuery((com.terraframe.mojo.dataaccess.MdAttributeEnumerationDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdEnumerationTableName, masterListMdBusinessIF, masterListTalbeAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else 
    {
      String error = "Attribute type ["+mdAttributeIF.getType()+"] is invalid.";
      throw new com.terraframe.mojo.query.QueryException(error);
    }
  }

  /**  
   * Returns an iterator of Business objects that match the query criteria specified
   * on this query object. 
   * @return iterator of Business objects that match the query criteria specified
   * on this query object.
   */
  public com.terraframe.mojo.query.OIterator<? extends Household> getIterator()
  {
    this.checkNotUsedInValueQuery();
    String sqlStmt;
    if (_limit != null && _skip != null)
    {
      sqlStmt = this.getComponentQuery().getSQL(_limit, _skip);
    }
    else
    {
      sqlStmt = this.getComponentQuery().getSQL();
    }
    java.util.Map<String, com.terraframe.mojo.query.ColumnInfo> columnInfoMap = this.getComponentQuery().getColumnInfoMap();

    java.sql.ResultSet results = com.terraframe.mojo.dataaccess.database.Database.query(sqlStmt);
    return new com.terraframe.mojo.business.BusinessIterator<Household>(this.getComponentQuery().getMdEntityIF(), columnInfoMap, results);
  }


  public com.terraframe.mojo.query.Condition surveyPoints()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.SurveyHousehold.CLASS);

    return this.getBusinessQuery().isChildIn(relationshipQuery);
  }


  public com.terraframe.mojo.query.Condition SUBSELECT_surveyPoints()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.SurveyHousehold.CLASS);

    return this.getBusinessQuery().isChildIn_SUBSELECT(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition surveyPoints(dss.vector.solutions.intervention.monitor.SurveyHouseholdQuery surveyHouseholdQuery)
  {
    return this.getBusinessQuery().isChildIn(surveyHouseholdQuery);
  }

  public com.terraframe.mojo.query.Condition SUBSELECT_surveyPoints(dss.vector.solutions.intervention.monitor.SurveyHouseholdQuery surveyHouseholdQuery)
  {
    return this.getBusinessQuery().isChildIn_SUBSELECT(surveyHouseholdQuery);
  }

  public com.terraframe.mojo.query.Condition surveyPoints(dss.vector.solutions.intervention.monitor.SurveyPointQuery surveyPointQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.SurveyHousehold.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(surveyPointQuery));

    return this.getBusinessQuery().isChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition SUBSELECT_surveyPoints(dss.vector.solutions.intervention.monitor.SurveyPointQuery surveyPointQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.SurveyHousehold.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(surveyPointQuery));

    return this.getBusinessQuery().isChildIn_SUBSELECT(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition surveyPoints(dss.vector.solutions.intervention.monitor.SurveyPointQuery surveyPointQuery, dss.vector.solutions.intervention.monitor.SurveyHouseholdQuery surveyHouseholdQuery)
  {
    surveyHouseholdQuery.AND(surveyHouseholdQuery.hasParent(surveyPointQuery));
    return this.getBusinessQuery().isChildIn(surveyHouseholdQuery);
  }

  public com.terraframe.mojo.query.Condition SUBSELECT_surveyPoints(dss.vector.solutions.intervention.monitor.SurveyPointQuery surveyPointQuery, dss.vector.solutions.intervention.monitor.SurveyHouseholdQuery surveyHouseholdQuery)
  {
    surveyHouseholdQuery.AND(surveyHouseholdQuery.hasParent(surveyPointQuery));
    return this.getBusinessQuery().isChildIn_SUBSELECT(surveyHouseholdQuery);
  }


  public com.terraframe.mojo.query.Condition NOT_IN_surveyPoints()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.SurveyHousehold.CLASS);

    return this.getBusinessQuery().isNotChildIn(relationshipQuery);
  }


  public com.terraframe.mojo.query.Condition SUBSELECT_NOT_IN_surveyPoints()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.SurveyHousehold.CLASS);

    return this.getBusinessQuery().isNotChildIn_SUBSELECT(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_surveyPoints(dss.vector.solutions.intervention.monitor.SurveyHouseholdQuery surveyHouseholdQuery)
  {
    return this.getBusinessQuery().isNotChildIn(surveyHouseholdQuery);
  }

  public com.terraframe.mojo.query.Condition SUBSELECT_NOT_IN_surveyPoints(dss.vector.solutions.intervention.monitor.SurveyHouseholdQuery surveyHouseholdQuery)
  {
    return this.getBusinessQuery().isNotChildIn_SUBSELECT(surveyHouseholdQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_surveyPoints(dss.vector.solutions.intervention.monitor.SurveyPointQuery surveyPointQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.SurveyHousehold.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(surveyPointQuery));

    return this.getBusinessQuery().isNotChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition SUBSELECT_NOT_IN_surveyPoints(dss.vector.solutions.intervention.monitor.SurveyPointQuery surveyPointQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.SurveyHousehold.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(surveyPointQuery));

    return this.getBusinessQuery().isNotChildIn_SUBSELECT(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_surveyPoints(dss.vector.solutions.intervention.monitor.SurveyPointQuery surveyPointQuery, dss.vector.solutions.intervention.monitor.SurveyHouseholdQuery surveyHouseholdQuery)
  {
    surveyHouseholdQuery.AND(surveyHouseholdQuery.hasParent(surveyPointQuery));
    return this.getBusinessQuery().isNotChildIn(surveyHouseholdQuery);
  }

  public com.terraframe.mojo.query.Condition SUBSELECT_NOT_IN_surveyPoints(dss.vector.solutions.intervention.monitor.SurveyPointQuery surveyPointQuery, dss.vector.solutions.intervention.monitor.SurveyHouseholdQuery surveyHouseholdQuery)
  {
    surveyHouseholdQuery.AND(surveyHouseholdQuery.hasParent(surveyPointQuery));
    return this.getBusinessQuery().isNotChildIn_SUBSELECT(surveyHouseholdQuery);
  }


  public com.terraframe.mojo.query.Condition iTNs()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.HouseholdITNInstance.CLASS);

    return this.getBusinessQuery().isParentIn(relationshipQuery);
  }


  public com.terraframe.mojo.query.Condition SUBSELECT_iTNs()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.HouseholdITNInstance.CLASS);

    return this.getBusinessQuery().isParentIn_SUBSELECT(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition iTNs(dss.vector.solutions.intervention.monitor.HouseholdITNInstanceQuery householdITNInstanceQuery)
  {
    return this.getBusinessQuery().isParentIn(householdITNInstanceQuery);
  }

  public com.terraframe.mojo.query.Condition SUBSELECT_iTNs(dss.vector.solutions.intervention.monitor.HouseholdITNInstanceQuery householdITNInstanceQuery)
  {
    return this.getBusinessQuery().isParentIn_SUBSELECT(householdITNInstanceQuery);
  }

  public com.terraframe.mojo.query.Condition iTNs(dss.vector.solutions.intervention.monitor.ITNInstanceQuery iTNInstanceQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.HouseholdITNInstance.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(iTNInstanceQuery));

    return this.getBusinessQuery().isParentIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition SUBSELECT_iTNs(dss.vector.solutions.intervention.monitor.ITNInstanceQuery iTNInstanceQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.HouseholdITNInstance.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(iTNInstanceQuery));

    return this.getBusinessQuery().isParentIn_SUBSELECT(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition iTNs(dss.vector.solutions.intervention.monitor.ITNInstanceQuery iTNInstanceQuery, dss.vector.solutions.intervention.monitor.HouseholdITNInstanceQuery householdITNInstanceQuery)
  {
    householdITNInstanceQuery.AND(householdITNInstanceQuery.hasChild(iTNInstanceQuery));
    return this.getBusinessQuery().isParentIn(householdITNInstanceQuery);
  }

  public com.terraframe.mojo.query.Condition SUBSELECT_iTNs(dss.vector.solutions.intervention.monitor.ITNInstanceQuery iTNInstanceQuery, dss.vector.solutions.intervention.monitor.HouseholdITNInstanceQuery householdITNInstanceQuery)
  {
    householdITNInstanceQuery.AND(householdITNInstanceQuery.hasChild(iTNInstanceQuery));
    return this.getBusinessQuery().isParentIn_SUBSELECT(householdITNInstanceQuery);
  }


  public com.terraframe.mojo.query.Condition NOT_IN_iTNs()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.HouseholdITNInstance.CLASS);

    return this.getBusinessQuery().isNotParentIn(relationshipQuery);
  }


  public com.terraframe.mojo.query.Condition SUBSELECT_NOT_IN_iTNs()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.HouseholdITNInstance.CLASS);

    return this.getBusinessQuery().isNotParentIn_SUBSELECT(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_iTNs(dss.vector.solutions.intervention.monitor.HouseholdITNInstanceQuery householdITNInstanceQuery)
  {
    return this.getBusinessQuery().isNotParentIn(householdITNInstanceQuery);
  }

  public com.terraframe.mojo.query.Condition SUBSELECT_NOT_IN_iTNs(dss.vector.solutions.intervention.monitor.HouseholdITNInstanceQuery householdITNInstanceQuery)
  {
    return this.getBusinessQuery().isNotParentIn_SUBSELECT(householdITNInstanceQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_iTNs(dss.vector.solutions.intervention.monitor.ITNInstanceQuery iTNInstanceQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.HouseholdITNInstance.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(iTNInstanceQuery));

    return this.getBusinessQuery().isNotParentIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition SUBSELECT_NOT_IN_iTNs(dss.vector.solutions.intervention.monitor.ITNInstanceQuery iTNInstanceQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.HouseholdITNInstance.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(iTNInstanceQuery));

    return this.getBusinessQuery().isNotParentIn_SUBSELECT(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_iTNs(dss.vector.solutions.intervention.monitor.ITNInstanceQuery iTNInstanceQuery, dss.vector.solutions.intervention.monitor.HouseholdITNInstanceQuery householdITNInstanceQuery)
  {
    householdITNInstanceQuery.AND(householdITNInstanceQuery.hasChild(iTNInstanceQuery));
    return this.getBusinessQuery().isNotParentIn(householdITNInstanceQuery);
  }

  public com.terraframe.mojo.query.Condition SUBSELECT_NOT_IN_iTNs(dss.vector.solutions.intervention.monitor.ITNInstanceQuery iTNInstanceQuery, dss.vector.solutions.intervention.monitor.HouseholdITNInstanceQuery householdITNInstanceQuery)
  {
    householdITNInstanceQuery.AND(householdITNInstanceQuery.hasChild(iTNInstanceQuery));
    return this.getBusinessQuery().isNotParentIn_SUBSELECT(householdITNInstanceQuery);
  }


  public com.terraframe.mojo.query.Condition surveyedPeople()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.HouseholdSurveyedPerson.CLASS);

    return this.getBusinessQuery().isParentIn(relationshipQuery);
  }


  public com.terraframe.mojo.query.Condition SUBSELECT_surveyedPeople()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.HouseholdSurveyedPerson.CLASS);

    return this.getBusinessQuery().isParentIn_SUBSELECT(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition surveyedPeople(dss.vector.solutions.intervention.monitor.HouseholdSurveyedPersonQuery householdSurveyedPersonQuery)
  {
    return this.getBusinessQuery().isParentIn(householdSurveyedPersonQuery);
  }

  public com.terraframe.mojo.query.Condition SUBSELECT_surveyedPeople(dss.vector.solutions.intervention.monitor.HouseholdSurveyedPersonQuery householdSurveyedPersonQuery)
  {
    return this.getBusinessQuery().isParentIn_SUBSELECT(householdSurveyedPersonQuery);
  }

  public com.terraframe.mojo.query.Condition surveyedPeople(dss.vector.solutions.intervention.monitor.SurveyedPersonQuery surveyedPersonQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.HouseholdSurveyedPerson.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(surveyedPersonQuery));

    return this.getBusinessQuery().isParentIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition SUBSELECT_surveyedPeople(dss.vector.solutions.intervention.monitor.SurveyedPersonQuery surveyedPersonQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.HouseholdSurveyedPerson.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(surveyedPersonQuery));

    return this.getBusinessQuery().isParentIn_SUBSELECT(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition surveyedPeople(dss.vector.solutions.intervention.monitor.SurveyedPersonQuery surveyedPersonQuery, dss.vector.solutions.intervention.monitor.HouseholdSurveyedPersonQuery householdSurveyedPersonQuery)
  {
    householdSurveyedPersonQuery.AND(householdSurveyedPersonQuery.hasChild(surveyedPersonQuery));
    return this.getBusinessQuery().isParentIn(householdSurveyedPersonQuery);
  }

  public com.terraframe.mojo.query.Condition SUBSELECT_surveyedPeople(dss.vector.solutions.intervention.monitor.SurveyedPersonQuery surveyedPersonQuery, dss.vector.solutions.intervention.monitor.HouseholdSurveyedPersonQuery householdSurveyedPersonQuery)
  {
    householdSurveyedPersonQuery.AND(householdSurveyedPersonQuery.hasChild(surveyedPersonQuery));
    return this.getBusinessQuery().isParentIn_SUBSELECT(householdSurveyedPersonQuery);
  }


  public com.terraframe.mojo.query.Condition NOT_IN_surveyedPeople()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.HouseholdSurveyedPerson.CLASS);

    return this.getBusinessQuery().isNotParentIn(relationshipQuery);
  }


  public com.terraframe.mojo.query.Condition SUBSELECT_NOT_IN_surveyedPeople()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.HouseholdSurveyedPerson.CLASS);

    return this.getBusinessQuery().isNotParentIn_SUBSELECT(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_surveyedPeople(dss.vector.solutions.intervention.monitor.HouseholdSurveyedPersonQuery householdSurveyedPersonQuery)
  {
    return this.getBusinessQuery().isNotParentIn(householdSurveyedPersonQuery);
  }

  public com.terraframe.mojo.query.Condition SUBSELECT_NOT_IN_surveyedPeople(dss.vector.solutions.intervention.monitor.HouseholdSurveyedPersonQuery householdSurveyedPersonQuery)
  {
    return this.getBusinessQuery().isNotParentIn_SUBSELECT(householdSurveyedPersonQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_surveyedPeople(dss.vector.solutions.intervention.monitor.SurveyedPersonQuery surveyedPersonQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.HouseholdSurveyedPerson.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(surveyedPersonQuery));

    return this.getBusinessQuery().isNotParentIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition SUBSELECT_NOT_IN_surveyedPeople(dss.vector.solutions.intervention.monitor.SurveyedPersonQuery surveyedPersonQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.HouseholdSurveyedPerson.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(surveyedPersonQuery));

    return this.getBusinessQuery().isNotParentIn_SUBSELECT(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_surveyedPeople(dss.vector.solutions.intervention.monitor.SurveyedPersonQuery surveyedPersonQuery, dss.vector.solutions.intervention.monitor.HouseholdSurveyedPersonQuery householdSurveyedPersonQuery)
  {
    householdSurveyedPersonQuery.AND(householdSurveyedPersonQuery.hasChild(surveyedPersonQuery));
    return this.getBusinessQuery().isNotParentIn(householdSurveyedPersonQuery);
  }

  public com.terraframe.mojo.query.Condition SUBSELECT_NOT_IN_surveyedPeople(dss.vector.solutions.intervention.monitor.SurveyedPersonQuery surveyedPersonQuery, dss.vector.solutions.intervention.monitor.HouseholdSurveyedPersonQuery householdSurveyedPersonQuery)
  {
    householdSurveyedPersonQuery.AND(householdSurveyedPersonQuery.hasChild(surveyedPersonQuery));
    return this.getBusinessQuery().isNotParentIn_SUBSELECT(householdSurveyedPersonQuery);
  }


/**
 * Interface that masks all type unsafe query methods and defines all type safe methods.
 * This type is used when a join is performed on this class as a reference.
 **/
  public interface HouseholdQueryReferenceIF extends com.terraframe.mojo.generation.loader.Reloadable, com.terraframe.mojo.query.SelectableReference
  {

    public com.terraframe.mojo.query.AttributeMoment getCreateDate();
    public com.terraframe.mojo.query.AttributeMoment getCreateDate(String alias);
    public com.terraframe.mojo.query.AttributeMoment getCreateDate(String alias, String displayLabel);
    public com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy();
    public com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias);
    public com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias, String displayLabel);
    public com.terraframe.mojo.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain();
    public com.terraframe.mojo.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias);
    public com.terraframe.mojo.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias, String displayLabel);
  public dss.vector.solutions.ResponseMasterQuery.ResponseQueryIF getHasBeenSprayed();
  public dss.vector.solutions.ResponseMasterQuery.ResponseQueryIF getHasBeenSprayed(String alias);
  public dss.vector.solutions.ResponseMasterQuery.ResponseQueryIF getHasBeenSprayed(String alias, String displayLabel);
    public com.terraframe.mojo.query.AttributeBoolean getHasWindows();
    public com.terraframe.mojo.query.AttributeBoolean getHasWindows(String alias);
    public com.terraframe.mojo.query.AttributeBoolean getHasWindows(String alias, String displayLabel);
    public com.terraframe.mojo.query.AttributeChar getHouseholdName();
    public com.terraframe.mojo.query.AttributeChar getHouseholdName(String alias);
    public com.terraframe.mojo.query.AttributeChar getHouseholdName(String alias, String displayLabel);
    public com.terraframe.mojo.query.AttributeChar getId();
    public com.terraframe.mojo.query.AttributeChar getId(String alias);
    public com.terraframe.mojo.query.AttributeChar getId(String alias, String displayLabel);
    public com.terraframe.mojo.query.AttributeChar getKeyName();
    public com.terraframe.mojo.query.AttributeChar getKeyName(String alias);
    public com.terraframe.mojo.query.AttributeChar getKeyName(String alias, String displayLabel);
    public com.terraframe.mojo.query.AttributeInteger getLastSprayed();
    public com.terraframe.mojo.query.AttributeInteger getLastSprayed(String alias);
    public com.terraframe.mojo.query.AttributeInteger getLastSprayed(String alias, String displayLabel);
    public com.terraframe.mojo.query.AttributeMoment getLastUpdateDate();
    public com.terraframe.mojo.query.AttributeMoment getLastUpdateDate(String alias);
    public com.terraframe.mojo.query.AttributeMoment getLastUpdateDate(String alias, String displayLabel);
    public com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy();
    public com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias);
    public com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias, String displayLabel);
    public com.terraframe.mojo.system.UsersQuery.UsersQueryReferenceIF getLockedBy();
    public com.terraframe.mojo.system.UsersQuery.UsersQueryReferenceIF getLockedBy(String alias);
    public com.terraframe.mojo.system.UsersQuery.UsersQueryReferenceIF getLockedBy(String alias, String displayLabel);
    public com.terraframe.mojo.query.AttributeInteger getNets();
    public com.terraframe.mojo.query.AttributeInteger getNets(String alias);
    public com.terraframe.mojo.query.AttributeInteger getNets(String alias, String displayLabel);
    public com.terraframe.mojo.system.ActorQuery.ActorQueryReferenceIF getOwner();
    public com.terraframe.mojo.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias);
    public com.terraframe.mojo.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias, String displayLabel);
    public com.terraframe.mojo.query.AttributeInteger getPeople();
    public com.terraframe.mojo.query.AttributeInteger getPeople(String alias);
    public com.terraframe.mojo.query.AttributeInteger getPeople(String alias, String displayLabel);
    public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getRoof();
    public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getRoof(String alias);
    public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getRoof(String alias, String displayLabel);
    public com.terraframe.mojo.query.AttributeChar getRoofInfo();
    public com.terraframe.mojo.query.AttributeChar getRoofInfo(String alias);
    public com.terraframe.mojo.query.AttributeChar getRoofInfo(String alias, String displayLabel);
    public com.terraframe.mojo.query.AttributeInteger getRooms();
    public com.terraframe.mojo.query.AttributeInteger getRooms(String alias);
    public com.terraframe.mojo.query.AttributeInteger getRooms(String alias, String displayLabel);
    public com.terraframe.mojo.query.AttributeLong getSeq();
    public com.terraframe.mojo.query.AttributeLong getSeq(String alias);
    public com.terraframe.mojo.query.AttributeLong getSeq(String alias, String displayLabel);
    public com.terraframe.mojo.query.AttributeChar getSiteMaster();
    public com.terraframe.mojo.query.AttributeChar getSiteMaster(String alias);
    public com.terraframe.mojo.query.AttributeChar getSiteMaster(String alias, String displayLabel);
    public dss.vector.solutions.intervention.monitor.SurveyPointQuery.SurveyPointQueryReferenceIF getSurveyPoint();
    public dss.vector.solutions.intervention.monitor.SurveyPointQuery.SurveyPointQueryReferenceIF getSurveyPoint(String alias);
    public dss.vector.solutions.intervention.monitor.SurveyPointQuery.SurveyPointQueryReferenceIF getSurveyPoint(String alias, String displayLabel);
    public com.terraframe.mojo.query.AttributeChar getType();
    public com.terraframe.mojo.query.AttributeChar getType(String alias);
    public com.terraframe.mojo.query.AttributeChar getType(String alias, String displayLabel);
    public com.terraframe.mojo.query.AttributeBoolean getUrban();
    public com.terraframe.mojo.query.AttributeBoolean getUrban(String alias);
    public com.terraframe.mojo.query.AttributeBoolean getUrban(String alias, String displayLabel);
    public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getWall();
    public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getWall(String alias);
    public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getWall(String alias, String displayLabel);
    public com.terraframe.mojo.query.AttributeChar getWallInfo();
    public com.terraframe.mojo.query.AttributeChar getWallInfo(String alias);
    public com.terraframe.mojo.query.AttributeChar getWallInfo(String alias, String displayLabel);
    public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getWindowType();
    public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getWindowType(String alias);
    public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getWindowType(String alias, String displayLabel);

    public com.terraframe.mojo.query.BasicCondition EQ(dss.vector.solutions.intervention.monitor.Household household);

    public com.terraframe.mojo.query.BasicCondition NE(dss.vector.solutions.intervention.monitor.Household household);


  public com.terraframe.mojo.query.Condition iTNs();

  public com.terraframe.mojo.query.Condition iTNs(dss.vector.solutions.intervention.monitor.ITNInstanceQuery iTNInstanceQuery);

  public com.terraframe.mojo.query.Condition iTNs(dss.vector.solutions.intervention.monitor.ITNInstanceQuery iTNInstanceQuery, dss.vector.solutions.intervention.monitor.HouseholdITNInstanceQuery householdITNInstanceQuery);


  public com.terraframe.mojo.query.Condition SUBSELECT_iTNs();

  public com.terraframe.mojo.query.Condition SUBSELECT_iTNs(dss.vector.solutions.intervention.monitor.ITNInstanceQuery iTNInstanceQuery);

  public com.terraframe.mojo.query.Condition SUBSELECT_iTNs(dss.vector.solutions.intervention.monitor.ITNInstanceQuery iTNInstanceQuery, dss.vector.solutions.intervention.monitor.HouseholdITNInstanceQuery householdITNInstanceQuery);


  public com.terraframe.mojo.query.Condition surveyedPeople();

  public com.terraframe.mojo.query.Condition surveyedPeople(dss.vector.solutions.intervention.monitor.SurveyedPersonQuery surveyedPersonQuery);

  public com.terraframe.mojo.query.Condition surveyedPeople(dss.vector.solutions.intervention.monitor.SurveyedPersonQuery surveyedPersonQuery, dss.vector.solutions.intervention.monitor.HouseholdSurveyedPersonQuery householdSurveyedPersonQuery);


  public com.terraframe.mojo.query.Condition SUBSELECT_surveyedPeople();

  public com.terraframe.mojo.query.Condition SUBSELECT_surveyedPeople(dss.vector.solutions.intervention.monitor.SurveyedPersonQuery surveyedPersonQuery);

  public com.terraframe.mojo.query.Condition SUBSELECT_surveyedPeople(dss.vector.solutions.intervention.monitor.SurveyedPersonQuery surveyedPersonQuery, dss.vector.solutions.intervention.monitor.HouseholdSurveyedPersonQuery householdSurveyedPersonQuery);


  public com.terraframe.mojo.query.Condition NOT_IN_iTNs();

  public com.terraframe.mojo.query.Condition NOT_IN_iTNs(dss.vector.solutions.intervention.monitor.ITNInstanceQuery iTNInstanceQuery);

  public com.terraframe.mojo.query.Condition NOT_IN_iTNs(dss.vector.solutions.intervention.monitor.ITNInstanceQuery iTNInstanceQuery, dss.vector.solutions.intervention.monitor.HouseholdITNInstanceQuery householdITNInstanceQuery);


  public com.terraframe.mojo.query.Condition SUBSELECT_NOT_IN_iTNs();

  public com.terraframe.mojo.query.Condition SUBSELECT_NOT_IN_iTNs(dss.vector.solutions.intervention.monitor.ITNInstanceQuery iTNInstanceQuery);

  public com.terraframe.mojo.query.Condition SUBSELECT_NOT_IN_iTNs(dss.vector.solutions.intervention.monitor.ITNInstanceQuery iTNInstanceQuery, dss.vector.solutions.intervention.monitor.HouseholdITNInstanceQuery householdITNInstanceQuery);


  public com.terraframe.mojo.query.Condition NOT_IN_surveyedPeople();

  public com.terraframe.mojo.query.Condition NOT_IN_surveyedPeople(dss.vector.solutions.intervention.monitor.SurveyedPersonQuery surveyedPersonQuery);

  public com.terraframe.mojo.query.Condition NOT_IN_surveyedPeople(dss.vector.solutions.intervention.monitor.SurveyedPersonQuery surveyedPersonQuery, dss.vector.solutions.intervention.monitor.HouseholdSurveyedPersonQuery householdSurveyedPersonQuery);


  public com.terraframe.mojo.query.Condition SUBSELECT_NOT_IN_surveyedPeople();

  public com.terraframe.mojo.query.Condition SUBSELECT_NOT_IN_surveyedPeople(dss.vector.solutions.intervention.monitor.SurveyedPersonQuery surveyedPersonQuery);

  public com.terraframe.mojo.query.Condition SUBSELECT_NOT_IN_surveyedPeople(dss.vector.solutions.intervention.monitor.SurveyedPersonQuery surveyedPersonQuery, dss.vector.solutions.intervention.monitor.HouseholdSurveyedPersonQuery householdSurveyedPersonQuery);


  public com.terraframe.mojo.query.Condition surveyPoints();
  public com.terraframe.mojo.query.Condition surveyPoints(dss.vector.solutions.intervention.monitor.SurveyPointQuery surveyPointQuery);

  public com.terraframe.mojo.query.Condition surveyPoints(dss.vector.solutions.intervention.monitor.SurveyPointQuery surveyPointQuery, dss.vector.solutions.intervention.monitor.SurveyHouseholdQuery surveyHouseholdQuery);


  public com.terraframe.mojo.query.Condition SUBSELECT_surveyPoints();
  public com.terraframe.mojo.query.Condition SUBSELECT_surveyPoints(dss.vector.solutions.intervention.monitor.SurveyPointQuery surveyPointQuery);

  public com.terraframe.mojo.query.Condition SUBSELECT_surveyPoints(dss.vector.solutions.intervention.monitor.SurveyPointQuery surveyPointQuery, dss.vector.solutions.intervention.monitor.SurveyHouseholdQuery surveyHouseholdQuery);


  public com.terraframe.mojo.query.Condition NOT_IN_surveyPoints();
  public com.terraframe.mojo.query.Condition NOT_IN_surveyPoints(dss.vector.solutions.intervention.monitor.SurveyPointQuery surveyPointQuery);

  public com.terraframe.mojo.query.Condition NOT_IN_surveyPoints(dss.vector.solutions.intervention.monitor.SurveyPointQuery surveyPointQuery, dss.vector.solutions.intervention.monitor.SurveyHouseholdQuery surveyHouseholdQuery);


  public com.terraframe.mojo.query.Condition SUBSELECT_NOT_IN_surveyPoints();
  public com.terraframe.mojo.query.Condition SUBSELECT_NOT_IN_surveyPoints(dss.vector.solutions.intervention.monitor.SurveyPointQuery surveyPointQuery);

  public com.terraframe.mojo.query.Condition SUBSELECT_NOT_IN_surveyPoints(dss.vector.solutions.intervention.monitor.SurveyPointQuery surveyPointQuery, dss.vector.solutions.intervention.monitor.SurveyHouseholdQuery surveyHouseholdQuery);

  }

/**
 * Implements type safe query methods.
 * This type is used when a join is performed on this class as a reference.
 **/
  public static class HouseholdQueryReference extends com.terraframe.mojo.query.AttributeReference
 implements HouseholdQueryReferenceIF
, com.terraframe.mojo.generation.loader.Reloadable
  {
private static final long serialVersionUID = 118081237;

  public HouseholdQueryReference(com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias, com.terraframe.mojo.dataaccess.MdBusinessDAOIF referenceMdBusinessIF, String referenceTableAlias, com.terraframe.mojo.query.ComponentQuery rootQuery, java.util.Set<com.terraframe.mojo.query.Join> tableJoinSet, String alias, String displayLabel)
  {
    super(mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, alias, displayLabel);

  }


    public com.terraframe.mojo.query.BasicCondition EQ(dss.vector.solutions.intervention.monitor.Household household)
    {
      return this.EQ(household.getId());
    }

    public com.terraframe.mojo.query.BasicCondition NE(dss.vector.solutions.intervention.monitor.Household household)
    {
      return this.NE(household.getId());
    }

  public com.terraframe.mojo.query.AttributeMoment getCreateDate()
  {
    return getCreateDate(null);

  }
 
  public com.terraframe.mojo.query.AttributeMoment getCreateDate(String alias)
  {
    return (com.terraframe.mojo.query.AttributeMoment)this.get(dss.vector.solutions.intervention.monitor.Household.CREATEDATE, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeMoment getCreateDate(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeMoment)this.get(dss.vector.solutions.intervention.monitor.Household.CREATEDATE, alias, displayLabel);

  }
  public com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy()
  {
    return getCreatedBy(null);

  }
 
  public com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias)
  {
    return (com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF)this.get(dss.vector.solutions.intervention.monitor.Household.CREATEDBY, alias, null);

  }
 
  public com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF)this.get(dss.vector.solutions.intervention.monitor.Household.CREATEDBY,  alias, displayLabel);

  }
  public com.terraframe.mojo.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain()
  {
    return getEntityDomain(null);

  }
 
  public com.terraframe.mojo.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias)
  {
    return (com.terraframe.mojo.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF)this.get(dss.vector.solutions.intervention.monitor.Household.ENTITYDOMAIN, alias, null);

  }
 
  public com.terraframe.mojo.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF)this.get(dss.vector.solutions.intervention.monitor.Household.ENTITYDOMAIN,  alias, displayLabel);

  }
  public dss.vector.solutions.ResponseMasterQuery.ResponseQueryIF getHasBeenSprayed()
  {
    return getHasBeenSprayed(null);

  }
 
  public dss.vector.solutions.ResponseMasterQuery.ResponseQueryIF getHasBeenSprayed(String alias)
  {
    return (dss.vector.solutions.ResponseMasterQuery.ResponseQueryIF)this.get(dss.vector.solutions.intervention.monitor.Household.HASBEENSPRAYED, alias, null);

  }
 
  public dss.vector.solutions.ResponseMasterQuery.ResponseQueryIF getHasBeenSprayed(String alias, String displayLabel)
  {
    return (dss.vector.solutions.ResponseMasterQuery.ResponseQueryIF)this.get(dss.vector.solutions.intervention.monitor.Household.HASBEENSPRAYED, alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeBoolean getHasWindows()
  {
    return getHasWindows(null);

  }
 
  public com.terraframe.mojo.query.AttributeBoolean getHasWindows(String alias)
  {
    return (com.terraframe.mojo.query.AttributeBoolean)this.get(dss.vector.solutions.intervention.monitor.Household.HASWINDOWS, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeBoolean getHasWindows(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeBoolean)this.get(dss.vector.solutions.intervention.monitor.Household.HASWINDOWS, alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeChar getHouseholdName()
  {
    return getHouseholdName(null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getHouseholdName(String alias)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.get(dss.vector.solutions.intervention.monitor.Household.HOUSEHOLDNAME, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getHouseholdName(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.get(dss.vector.solutions.intervention.monitor.Household.HOUSEHOLDNAME, alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeChar getId()
  {
    return getId(null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getId(String alias)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.get(dss.vector.solutions.intervention.monitor.Household.ID, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getId(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.get(dss.vector.solutions.intervention.monitor.Household.ID, alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeChar getKeyName()
  {
    return getKeyName(null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getKeyName(String alias)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.get(dss.vector.solutions.intervention.monitor.Household.KEYNAME, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getKeyName(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.get(dss.vector.solutions.intervention.monitor.Household.KEYNAME, alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeInteger getLastSprayed()
  {
    return getLastSprayed(null);

  }
 
  public com.terraframe.mojo.query.AttributeInteger getLastSprayed(String alias)
  {
    return (com.terraframe.mojo.query.AttributeInteger)this.get(dss.vector.solutions.intervention.monitor.Household.LASTSPRAYED, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeInteger getLastSprayed(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeInteger)this.get(dss.vector.solutions.intervention.monitor.Household.LASTSPRAYED, alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeMoment getLastUpdateDate()
  {
    return getLastUpdateDate(null);

  }
 
  public com.terraframe.mojo.query.AttributeMoment getLastUpdateDate(String alias)
  {
    return (com.terraframe.mojo.query.AttributeMoment)this.get(dss.vector.solutions.intervention.monitor.Household.LASTUPDATEDATE, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeMoment getLastUpdateDate(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeMoment)this.get(dss.vector.solutions.intervention.monitor.Household.LASTUPDATEDATE, alias, displayLabel);

  }
  public com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy()
  {
    return getLastUpdatedBy(null);

  }
 
  public com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias)
  {
    return (com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF)this.get(dss.vector.solutions.intervention.monitor.Household.LASTUPDATEDBY, alias, null);

  }
 
  public com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReferenceIF)this.get(dss.vector.solutions.intervention.monitor.Household.LASTUPDATEDBY,  alias, displayLabel);

  }
  public com.terraframe.mojo.system.UsersQuery.UsersQueryReferenceIF getLockedBy()
  {
    return getLockedBy(null);

  }
 
  public com.terraframe.mojo.system.UsersQuery.UsersQueryReferenceIF getLockedBy(String alias)
  {
    return (com.terraframe.mojo.system.UsersQuery.UsersQueryReferenceIF)this.get(dss.vector.solutions.intervention.monitor.Household.LOCKEDBY, alias, null);

  }
 
  public com.terraframe.mojo.system.UsersQuery.UsersQueryReferenceIF getLockedBy(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.system.UsersQuery.UsersQueryReferenceIF)this.get(dss.vector.solutions.intervention.monitor.Household.LOCKEDBY,  alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeInteger getNets()
  {
    return getNets(null);

  }
 
  public com.terraframe.mojo.query.AttributeInteger getNets(String alias)
  {
    return (com.terraframe.mojo.query.AttributeInteger)this.get(dss.vector.solutions.intervention.monitor.Household.NETS, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeInteger getNets(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeInteger)this.get(dss.vector.solutions.intervention.monitor.Household.NETS, alias, displayLabel);

  }
  public com.terraframe.mojo.system.ActorQuery.ActorQueryReferenceIF getOwner()
  {
    return getOwner(null);

  }
 
  public com.terraframe.mojo.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias)
  {
    return (com.terraframe.mojo.system.ActorQuery.ActorQueryReferenceIF)this.get(dss.vector.solutions.intervention.monitor.Household.OWNER, alias, null);

  }
 
  public com.terraframe.mojo.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.system.ActorQuery.ActorQueryReferenceIF)this.get(dss.vector.solutions.intervention.monitor.Household.OWNER,  alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeInteger getPeople()
  {
    return getPeople(null);

  }
 
  public com.terraframe.mojo.query.AttributeInteger getPeople(String alias)
  {
    return (com.terraframe.mojo.query.AttributeInteger)this.get(dss.vector.solutions.intervention.monitor.Household.PEOPLE, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeInteger getPeople(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeInteger)this.get(dss.vector.solutions.intervention.monitor.Household.PEOPLE, alias, displayLabel);

  }
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getRoof()
  {
    return getRoof(null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getRoof(String alias)
  {
    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.get(dss.vector.solutions.intervention.monitor.Household.ROOF, alias, null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getRoof(String alias, String displayLabel)
  {
    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.get(dss.vector.solutions.intervention.monitor.Household.ROOF,  alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeChar getRoofInfo()
  {
    return getRoofInfo(null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getRoofInfo(String alias)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.get(dss.vector.solutions.intervention.monitor.Household.ROOFINFO, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getRoofInfo(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.get(dss.vector.solutions.intervention.monitor.Household.ROOFINFO, alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeInteger getRooms()
  {
    return getRooms(null);

  }
 
  public com.terraframe.mojo.query.AttributeInteger getRooms(String alias)
  {
    return (com.terraframe.mojo.query.AttributeInteger)this.get(dss.vector.solutions.intervention.monitor.Household.ROOMS, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeInteger getRooms(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeInteger)this.get(dss.vector.solutions.intervention.monitor.Household.ROOMS, alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeLong getSeq()
  {
    return getSeq(null);

  }
 
  public com.terraframe.mojo.query.AttributeLong getSeq(String alias)
  {
    return (com.terraframe.mojo.query.AttributeLong)this.get(dss.vector.solutions.intervention.monitor.Household.SEQ, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeLong getSeq(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeLong)this.get(dss.vector.solutions.intervention.monitor.Household.SEQ, alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeChar getSiteMaster()
  {
    return getSiteMaster(null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getSiteMaster(String alias)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.get(dss.vector.solutions.intervention.monitor.Household.SITEMASTER, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getSiteMaster(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.get(dss.vector.solutions.intervention.monitor.Household.SITEMASTER, alias, displayLabel);

  }
  public dss.vector.solutions.intervention.monitor.SurveyPointQuery.SurveyPointQueryReferenceIF getSurveyPoint()
  {
    return getSurveyPoint(null);

  }
 
  public dss.vector.solutions.intervention.monitor.SurveyPointQuery.SurveyPointQueryReferenceIF getSurveyPoint(String alias)
  {
    return (dss.vector.solutions.intervention.monitor.SurveyPointQuery.SurveyPointQueryReferenceIF)this.get(dss.vector.solutions.intervention.monitor.Household.SURVEYPOINT, alias, null);

  }
 
  public dss.vector.solutions.intervention.monitor.SurveyPointQuery.SurveyPointQueryReferenceIF getSurveyPoint(String alias, String displayLabel)
  {
    return (dss.vector.solutions.intervention.monitor.SurveyPointQuery.SurveyPointQueryReferenceIF)this.get(dss.vector.solutions.intervention.monitor.Household.SURVEYPOINT,  alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeChar getType()
  {
    return getType(null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getType(String alias)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.get(dss.vector.solutions.intervention.monitor.Household.TYPE, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getType(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.get(dss.vector.solutions.intervention.monitor.Household.TYPE, alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeBoolean getUrban()
  {
    return getUrban(null);

  }
 
  public com.terraframe.mojo.query.AttributeBoolean getUrban(String alias)
  {
    return (com.terraframe.mojo.query.AttributeBoolean)this.get(dss.vector.solutions.intervention.monitor.Household.URBAN, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeBoolean getUrban(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeBoolean)this.get(dss.vector.solutions.intervention.monitor.Household.URBAN, alias, displayLabel);

  }
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getWall()
  {
    return getWall(null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getWall(String alias)
  {
    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.get(dss.vector.solutions.intervention.monitor.Household.WALL, alias, null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getWall(String alias, String displayLabel)
  {
    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.get(dss.vector.solutions.intervention.monitor.Household.WALL,  alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeChar getWallInfo()
  {
    return getWallInfo(null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getWallInfo(String alias)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.get(dss.vector.solutions.intervention.monitor.Household.WALLINFO, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getWallInfo(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.get(dss.vector.solutions.intervention.monitor.Household.WALLINFO, alias, displayLabel);

  }
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getWindowType()
  {
    return getWindowType(null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getWindowType(String alias)
  {
    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.get(dss.vector.solutions.intervention.monitor.Household.WINDOWTYPE, alias, null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getWindowType(String alias, String displayLabel)
  {
    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.get(dss.vector.solutions.intervention.monitor.Household.WINDOWTYPE,  alias, displayLabel);

  }

  public com.terraframe.mojo.query.Condition iTNs()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.HouseholdITNInstance.CLASS);

    return this.isParentIn(relationshipQuery);
  }


  public com.terraframe.mojo.query.Condition SUBSELECT_iTNs()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.HouseholdITNInstance.CLASS);

    return this.isParentIn_SUBSELECT(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition iTNs(dss.vector.solutions.intervention.monitor.HouseholdITNInstanceQuery householdITNInstanceQuery)
  {
    return this.isParentIn(householdITNInstanceQuery);
  }

  public com.terraframe.mojo.query.Condition SUBSELECT_iTNs(dss.vector.solutions.intervention.monitor.HouseholdITNInstanceQuery householdITNInstanceQuery)
  {
    return this.isParentIn_SUBSELECT(householdITNInstanceQuery);
  }

  public com.terraframe.mojo.query.Condition iTNs(dss.vector.solutions.intervention.monitor.ITNInstanceQuery iTNInstanceQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.HouseholdITNInstance.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(iTNInstanceQuery));

    return this.isParentIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition SUBSELECT_iTNs(dss.vector.solutions.intervention.monitor.ITNInstanceQuery iTNInstanceQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.HouseholdITNInstance.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(iTNInstanceQuery));

    return this.isParentIn_SUBSELECT(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition iTNs(dss.vector.solutions.intervention.monitor.ITNInstanceQuery iTNInstanceQuery, dss.vector.solutions.intervention.monitor.HouseholdITNInstanceQuery householdITNInstanceQuery)
  {
    householdITNInstanceQuery.AND(householdITNInstanceQuery.hasChild(iTNInstanceQuery));
    return this.isParentIn(householdITNInstanceQuery);
  }

  public com.terraframe.mojo.query.Condition SUBSELECT_iTNs(dss.vector.solutions.intervention.monitor.ITNInstanceQuery iTNInstanceQuery, dss.vector.solutions.intervention.monitor.HouseholdITNInstanceQuery householdITNInstanceQuery)
  {
    householdITNInstanceQuery.AND(householdITNInstanceQuery.hasChild(iTNInstanceQuery));
    return this.isParentIn_SUBSELECT(householdITNInstanceQuery);
  }


  public com.terraframe.mojo.query.Condition surveyedPeople()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.HouseholdSurveyedPerson.CLASS);

    return this.isParentIn(relationshipQuery);
  }


  public com.terraframe.mojo.query.Condition SUBSELECT_surveyedPeople()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.HouseholdSurveyedPerson.CLASS);

    return this.isParentIn_SUBSELECT(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition surveyedPeople(dss.vector.solutions.intervention.monitor.HouseholdSurveyedPersonQuery householdSurveyedPersonQuery)
  {
    return this.isParentIn(householdSurveyedPersonQuery);
  }

  public com.terraframe.mojo.query.Condition SUBSELECT_surveyedPeople(dss.vector.solutions.intervention.monitor.HouseholdSurveyedPersonQuery householdSurveyedPersonQuery)
  {
    return this.isParentIn_SUBSELECT(householdSurveyedPersonQuery);
  }

  public com.terraframe.mojo.query.Condition surveyedPeople(dss.vector.solutions.intervention.monitor.SurveyedPersonQuery surveyedPersonQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.HouseholdSurveyedPerson.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(surveyedPersonQuery));

    return this.isParentIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition SUBSELECT_surveyedPeople(dss.vector.solutions.intervention.monitor.SurveyedPersonQuery surveyedPersonQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.HouseholdSurveyedPerson.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(surveyedPersonQuery));

    return this.isParentIn_SUBSELECT(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition surveyedPeople(dss.vector.solutions.intervention.monitor.SurveyedPersonQuery surveyedPersonQuery, dss.vector.solutions.intervention.monitor.HouseholdSurveyedPersonQuery householdSurveyedPersonQuery)
  {
    householdSurveyedPersonQuery.AND(householdSurveyedPersonQuery.hasChild(surveyedPersonQuery));
    return this.isParentIn(householdSurveyedPersonQuery);
  }

  public com.terraframe.mojo.query.Condition SUBSELECT_surveyedPeople(dss.vector.solutions.intervention.monitor.SurveyedPersonQuery surveyedPersonQuery, dss.vector.solutions.intervention.monitor.HouseholdSurveyedPersonQuery householdSurveyedPersonQuery)
  {
    householdSurveyedPersonQuery.AND(householdSurveyedPersonQuery.hasChild(surveyedPersonQuery));
    return this.isParentIn_SUBSELECT(householdSurveyedPersonQuery);
  }


  public com.terraframe.mojo.query.Condition NOT_IN_iTNs()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.HouseholdITNInstance.CLASS);

    return this.isNotParentIn(relationshipQuery);
  }


  public com.terraframe.mojo.query.Condition SUBSELECT_NOT_IN_iTNs()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.HouseholdITNInstance.CLASS);

    return this.isNotParentIn_SUBSELECT(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_iTNs(dss.vector.solutions.intervention.monitor.HouseholdITNInstanceQuery householdITNInstanceQuery)
  {
    return this.isNotParentIn(householdITNInstanceQuery);
  }

  public com.terraframe.mojo.query.Condition SUBSELECT_NOT_IN_iTNs(dss.vector.solutions.intervention.monitor.HouseholdITNInstanceQuery householdITNInstanceQuery)
  {
    return this.isNotParentIn_SUBSELECT(householdITNInstanceQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_iTNs(dss.vector.solutions.intervention.monitor.ITNInstanceQuery iTNInstanceQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.HouseholdITNInstance.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(iTNInstanceQuery));

    return this.isNotParentIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition SUBSELECT_NOT_IN_iTNs(dss.vector.solutions.intervention.monitor.ITNInstanceQuery iTNInstanceQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.HouseholdITNInstance.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(iTNInstanceQuery));

    return this.isNotParentIn_SUBSELECT(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_iTNs(dss.vector.solutions.intervention.monitor.ITNInstanceQuery iTNInstanceQuery, dss.vector.solutions.intervention.monitor.HouseholdITNInstanceQuery householdITNInstanceQuery)
  {
    householdITNInstanceQuery.AND(householdITNInstanceQuery.hasChild(iTNInstanceQuery));
    return this.isNotParentIn(householdITNInstanceQuery);
  }

  public com.terraframe.mojo.query.Condition SUBSELECT_NOT_IN_iTNs(dss.vector.solutions.intervention.monitor.ITNInstanceQuery iTNInstanceQuery, dss.vector.solutions.intervention.monitor.HouseholdITNInstanceQuery householdITNInstanceQuery)
  {
    householdITNInstanceQuery.AND(householdITNInstanceQuery.hasChild(iTNInstanceQuery));
    return this.isNotParentIn_SUBSELECT(householdITNInstanceQuery);
  }


  public com.terraframe.mojo.query.Condition NOT_IN_surveyedPeople()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.HouseholdSurveyedPerson.CLASS);

    return this.isNotParentIn(relationshipQuery);
  }


  public com.terraframe.mojo.query.Condition SUBSELECT_NOT_IN_surveyedPeople()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.HouseholdSurveyedPerson.CLASS);

    return this.isNotParentIn_SUBSELECT(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_surveyedPeople(dss.vector.solutions.intervention.monitor.HouseholdSurveyedPersonQuery householdSurveyedPersonQuery)
  {
    return this.isNotParentIn(householdSurveyedPersonQuery);
  }

  public com.terraframe.mojo.query.Condition SUBSELECT_NOT_IN_surveyedPeople(dss.vector.solutions.intervention.monitor.HouseholdSurveyedPersonQuery householdSurveyedPersonQuery)
  {
    return this.isNotParentIn_SUBSELECT(householdSurveyedPersonQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_surveyedPeople(dss.vector.solutions.intervention.monitor.SurveyedPersonQuery surveyedPersonQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.HouseholdSurveyedPerson.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(surveyedPersonQuery));

    return this.isNotParentIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition SUBSELECT_NOT_IN_surveyedPeople(dss.vector.solutions.intervention.monitor.SurveyedPersonQuery surveyedPersonQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.HouseholdSurveyedPerson.CLASS);
    relationshipQuery.AND(relationshipQuery.hasChild(surveyedPersonQuery));

    return this.isNotParentIn_SUBSELECT(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_surveyedPeople(dss.vector.solutions.intervention.monitor.SurveyedPersonQuery surveyedPersonQuery, dss.vector.solutions.intervention.monitor.HouseholdSurveyedPersonQuery householdSurveyedPersonQuery)
  {
    householdSurveyedPersonQuery.AND(householdSurveyedPersonQuery.hasChild(surveyedPersonQuery));
    return this.isNotParentIn(householdSurveyedPersonQuery);
  }

  public com.terraframe.mojo.query.Condition SUBSELECT_NOT_IN_surveyedPeople(dss.vector.solutions.intervention.monitor.SurveyedPersonQuery surveyedPersonQuery, dss.vector.solutions.intervention.monitor.HouseholdSurveyedPersonQuery householdSurveyedPersonQuery)
  {
    householdSurveyedPersonQuery.AND(householdSurveyedPersonQuery.hasChild(surveyedPersonQuery));
    return this.isNotParentIn_SUBSELECT(householdSurveyedPersonQuery);
  }


  public com.terraframe.mojo.query.Condition surveyPoints()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.SurveyHousehold.CLASS);

    return this.isChildIn(relationshipQuery);
  }


  public com.terraframe.mojo.query.Condition SUBSELECT_surveyPoints()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.SurveyHousehold.CLASS);

    return this.isChildIn_SUBSELECT(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition surveyPoints(dss.vector.solutions.intervention.monitor.SurveyHouseholdQuery surveyHouseholdQuery)
  {
    return this.isChildIn(surveyHouseholdQuery);
  }

  public com.terraframe.mojo.query.Condition SUBSELECT_surveyPoints(dss.vector.solutions.intervention.monitor.SurveyHouseholdQuery surveyHouseholdQuery)
  {
    return this.isChildIn_SUBSELECT(surveyHouseholdQuery);
  }

  public com.terraframe.mojo.query.Condition surveyPoints(dss.vector.solutions.intervention.monitor.SurveyPointQuery surveyPointQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.SurveyHousehold.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(surveyPointQuery));

    return this.isChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition SUBSELECT_surveyPoints(dss.vector.solutions.intervention.monitor.SurveyPointQuery surveyPointQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.SurveyHousehold.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(surveyPointQuery));

    return this.isChildIn_SUBSELECT(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition surveyPoints(dss.vector.solutions.intervention.monitor.SurveyPointQuery surveyPointQuery, dss.vector.solutions.intervention.monitor.SurveyHouseholdQuery surveyHouseholdQuery)
  {
    surveyHouseholdQuery.AND(surveyHouseholdQuery.hasParent(surveyPointQuery));
    return this.isChildIn(surveyHouseholdQuery);
  }

  public com.terraframe.mojo.query.Condition SUBSELECT_surveyPoints(dss.vector.solutions.intervention.monitor.SurveyPointQuery surveyPointQuery, dss.vector.solutions.intervention.monitor.SurveyHouseholdQuery surveyHouseholdQuery)
  {
    surveyHouseholdQuery.AND(surveyHouseholdQuery.hasParent(surveyPointQuery));
    return this.isChildIn_SUBSELECT(surveyHouseholdQuery);
  }


  public com.terraframe.mojo.query.Condition NOT_IN_surveyPoints()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.SurveyHousehold.CLASS);

    return this.isNotChildIn(relationshipQuery);
  }


  public com.terraframe.mojo.query.Condition SUBSELECT_NOT_IN_surveyPoints()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.SurveyHousehold.CLASS);

    return this.isNotChildIn_SUBSELECT(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_surveyPoints(dss.vector.solutions.intervention.monitor.SurveyHouseholdQuery surveyHouseholdQuery)
  {
    return this.isNotChildIn(surveyHouseholdQuery);
  }

  public com.terraframe.mojo.query.Condition SUBSELECT_NOT_IN_surveyPoints(dss.vector.solutions.intervention.monitor.SurveyHouseholdQuery surveyHouseholdQuery)
  {
    return this.isNotChildIn_SUBSELECT(surveyHouseholdQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_surveyPoints(dss.vector.solutions.intervention.monitor.SurveyPointQuery surveyPointQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.SurveyHousehold.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(surveyPointQuery));

    return this.isNotChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition SUBSELECT_NOT_IN_surveyPoints(dss.vector.solutions.intervention.monitor.SurveyPointQuery surveyPointQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.intervention.monitor.SurveyHousehold.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(surveyPointQuery));

    return this.isNotChildIn_SUBSELECT(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_surveyPoints(dss.vector.solutions.intervention.monitor.SurveyPointQuery surveyPointQuery, dss.vector.solutions.intervention.monitor.SurveyHouseholdQuery surveyHouseholdQuery)
  {
    surveyHouseholdQuery.AND(surveyHouseholdQuery.hasParent(surveyPointQuery));
    return this.isNotChildIn(surveyHouseholdQuery);
  }

  public com.terraframe.mojo.query.Condition SUBSELECT_NOT_IN_surveyPoints(dss.vector.solutions.intervention.monitor.SurveyPointQuery surveyPointQuery, dss.vector.solutions.intervention.monitor.SurveyHouseholdQuery surveyHouseholdQuery)
  {
    surveyHouseholdQuery.AND(surveyHouseholdQuery.hasParent(surveyPointQuery));
    return this.isNotChildIn_SUBSELECT(surveyHouseholdQuery);
  }

  protected com.terraframe.mojo.query.AttributeReference referenceFactory( com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  com.terraframe.mojo.dataaccess.MdBusinessDAOIF referenceMdBusinessIF, String referenceTableAlias, com.terraframe.mojo.query.ComponentQuery rootQuery, java.util.Set<com.terraframe.mojo.query.Join> tableJoinSet, String userDefinedAlias, String userDefinedDisplayLabel)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals("createdBy")) 
    {
       return new com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReference((com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals("entityDomain")) 
    {
       return new com.terraframe.mojo.system.metadata.MdDomainQuery.MdDomainQueryReference((com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals("lastUpdatedBy")) 
    {
       return new com.terraframe.mojo.system.SingleActorQuery.SingleActorQueryReference((com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals("lockedBy")) 
    {
       return new com.terraframe.mojo.system.UsersQuery.UsersQueryReference((com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals("owner")) 
    {
       return new com.terraframe.mojo.system.ActorQuery.ActorQueryReference((com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals("roof")) 
    {
       return new dss.vector.solutions.ontology.TermQuery.TermQueryReference((com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals("surveyPoint")) 
    {
       return new dss.vector.solutions.intervention.monitor.SurveyPointQuery.SurveyPointQueryReference((com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals("wall")) 
    {
       return new dss.vector.solutions.ontology.TermQuery.TermQueryReference((com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals("windowType")) 
    {
       return new dss.vector.solutions.ontology.TermQuery.TermQueryReference((com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else 
    {
      String error = "Attribute type ["+mdAttributeIF.getType()+"] is invalid.";
      throw new com.terraframe.mojo.query.QueryException(error);
    }
  }

  protected com.terraframe.mojo.query.AttributeEnumeration enumerationFactory( com.terraframe.mojo.dataaccess.MdAttributeEnumerationDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  String mdEnumerationTableName, com.terraframe.mojo.dataaccess.MdBusinessDAOIF masterListMdBusinessIF, String masterListTalbeAlias, com.terraframe.mojo.query.ComponentQuery rootQuery, java.util.Set<com.terraframe.mojo.query.Join> tableJoinSet, String userDefinedAlias, String userDefinedDisplayLabel)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals("hasBeenSprayed")) 
    {
       return new dss.vector.solutions.ResponseMasterQuery.ResponseQuery((com.terraframe.mojo.dataaccess.MdAttributeEnumerationDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdEnumerationTableName, masterListMdBusinessIF, masterListTalbeAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else 
    {
      String error = "Attribute type ["+mdAttributeIF.getType()+"] is invalid.";
      throw new com.terraframe.mojo.query.QueryException(error);
    }
  }

  }
}
