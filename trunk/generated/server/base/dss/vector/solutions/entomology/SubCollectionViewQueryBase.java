package dss.vector.solutions.entomology;

@com.runwaysdk.business.ClassSignature(hash = -1539599263)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to SubCollectionView.java
 *
 * @author Autogenerated by RunwaySDK
 */
public  abstract  class SubCollectionViewQueryBase extends com.runwaysdk.query.GeneratedViewQuery
 implements com.runwaysdk.generation.loader.Reloadable
{
private static final long serialVersionUID = -1539599263;

  public SubCollectionViewQueryBase(com.runwaysdk.query.QueryFactory componentQueryFactory)
  {
    super(componentQueryFactory);
  }

  public SubCollectionViewQueryBase(com.runwaysdk.query.QueryFactory componentQueryFactory, com.runwaysdk.query.ViewQueryBuilder viewQueryBuilder)
  {
    super(componentQueryFactory, viewQueryBuilder);
  }
  public String getClassType()
  {
    return dss.vector.solutions.entomology.SubCollectionView.CLASS;
  }
  public dss.vector.solutions.entomology.MosquitoCollectionQuery.MosquitoCollectionQueryReferenceIF getCollection()
  {
    return getCollection(null);

  }
 
  public dss.vector.solutions.entomology.MosquitoCollectionQuery.MosquitoCollectionQueryReferenceIF getCollection(String alias)
  {

    return (dss.vector.solutions.entomology.MosquitoCollectionQuery.MosquitoCollectionQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.SubCollectionView.COLLECTION, alias, null);

  }
 
  public dss.vector.solutions.entomology.MosquitoCollectionQuery.MosquitoCollectionQueryReferenceIF getCollection(String alias, String displayLabel)
  {

    return (dss.vector.solutions.entomology.MosquitoCollectionQuery.MosquitoCollectionQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.SubCollectionView.COLLECTION, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getConcreteId()
  {
    return getConcreteId(null);

  }
 
  public com.runwaysdk.query.SelectableChar getConcreteId(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getSelectable(dss.vector.solutions.entomology.SubCollectionView.CONCRETEID, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getConcreteId(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getSelectable(dss.vector.solutions.entomology.SubCollectionView.CONCRETEID, alias, displayLabel);

  }
 
  public com.runwaysdk.query.SelectableInteger getEggs()
  {
    return getEggs(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getEggs(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getSelectable(dss.vector.solutions.entomology.SubCollectionView.EGGS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getEggs(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getSelectable(dss.vector.solutions.entomology.SubCollectionView.EGGS, alias, displayLabel);

  }
 
  public com.runwaysdk.query.SelectableInteger getFemale()
  {
    return getFemale(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getFemale(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getSelectable(dss.vector.solutions.entomology.SubCollectionView.FEMALE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getFemale(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getSelectable(dss.vector.solutions.entomology.SubCollectionView.FEMALE, alias, displayLabel);

  }
 
  public com.runwaysdk.query.SelectableChar getId()
  {
    return getId(null);

  }
 
  public com.runwaysdk.query.SelectableChar getId(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getSelectable(dss.vector.solutions.entomology.SubCollectionView.ID, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getId(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getSelectable(dss.vector.solutions.entomology.SubCollectionView.ID, alias, displayLabel);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getIdentMethod()
  {
    return getIdentMethod(null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getIdentMethod(String alias)
  {

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.SubCollectionView.IDENTMETHOD, alias, null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getIdentMethod(String alias, String displayLabel)
  {

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.SubCollectionView.IDENTMETHOD, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getLarvae()
  {
    return getLarvae(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getLarvae(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getSelectable(dss.vector.solutions.entomology.SubCollectionView.LARVAE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getLarvae(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getSelectable(dss.vector.solutions.entomology.SubCollectionView.LARVAE, alias, displayLabel);

  }
 
  public com.runwaysdk.query.SelectableInteger getMale()
  {
    return getMale(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getMale(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getSelectable(dss.vector.solutions.entomology.SubCollectionView.MALE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getMale(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getSelectable(dss.vector.solutions.entomology.SubCollectionView.MALE, alias, displayLabel);

  }
 
  public com.runwaysdk.query.SelectableInteger getPupae()
  {
    return getPupae(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getPupae(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getSelectable(dss.vector.solutions.entomology.SubCollectionView.PUPAE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getPupae(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getSelectable(dss.vector.solutions.entomology.SubCollectionView.PUPAE, alias, displayLabel);

  }
 
  public com.runwaysdk.query.SelectableChar getSubCollectionId()
  {
    return getSubCollectionId(null);

  }
 
  public com.runwaysdk.query.SelectableChar getSubCollectionId(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getSelectable(dss.vector.solutions.entomology.SubCollectionView.SUBCOLLECTIONID, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getSubCollectionId(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getSelectable(dss.vector.solutions.entomology.SubCollectionView.SUBCOLLECTIONID, alias, displayLabel);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getTaxon()
  {
    return getTaxon(null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getTaxon(String alias)
  {

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.SubCollectionView.TAXON, alias, null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getTaxon(String alias, String displayLabel)
  {

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.SubCollectionView.TAXON, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getTotal()
  {
    return getTotal(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getTotal(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getSelectable(dss.vector.solutions.entomology.SubCollectionView.TOTAL, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getTotal(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getSelectable(dss.vector.solutions.entomology.SubCollectionView.TOTAL, alias, displayLabel);

  }
 
  public com.runwaysdk.query.SelectableInteger getUnknowns()
  {
    return getUnknowns(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getUnknowns(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getSelectable(dss.vector.solutions.entomology.SubCollectionView.UNKNOWNS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getUnknowns(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getSelectable(dss.vector.solutions.entomology.SubCollectionView.UNKNOWNS, alias, displayLabel);

  }
 
  /**  
   * Returns an iterator of Business objects that match the query criteria specified
   * on this query object. 
   * @return iterator of Business objects that match the query criteria specified
   * on this query object.
   */
  @java.lang.SuppressWarnings("unchecked")
  public com.runwaysdk.query.OIterator<? extends SubCollectionView> getIterator()
  {
    com.runwaysdk.query.ValueIterator valueIterator;
    if (_pageSize != null && _pageNumber != null)
    {
      valueIterator = (com.runwaysdk.query.ValueIterator<com.runwaysdk.dataaccess.ValueObject>)this.getComponentQuery().getIterator(_pageSize, _pageNumber);
    }
    else
    {
      valueIterator = (com.runwaysdk.query.ValueIterator<com.runwaysdk.dataaccess.ValueObject>)this.getComponentQuery().getIterator();
    }
    return new com.runwaysdk.query.ViewIterator<SubCollectionView>(this.getMdClassIF(), valueIterator);
  }

}
