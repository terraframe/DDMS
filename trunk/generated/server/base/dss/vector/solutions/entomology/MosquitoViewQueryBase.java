package dss.vector.solutions.entomology;

@com.terraframe.mojo.business.ClassSignature(hash = -848986334)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to MosquitoView.java
 *
 * @author Autogenerated by TerraFrame
 */
public  abstract  class MosquitoViewQueryBase extends com.terraframe.mojo.query.GeneratedViewQuery
 implements com.terraframe.mojo.generation.loader.Reloadable
{
private static final long serialVersionUID = -848986334;

  public MosquitoViewQueryBase(com.terraframe.mojo.query.QueryFactory componentQueryFactory)
  {
    super(componentQueryFactory);
  }

  public MosquitoViewQueryBase(com.terraframe.mojo.query.QueryFactory componentQueryFactory, com.terraframe.mojo.query.ViewQueryBuilder viewQueryBuilder)
  {
    super(componentQueryFactory, viewQueryBuilder);
  }
  public String getClassType()
  {
    return dss.vector.solutions.entomology.MosquitoView.CLASS;
  }
  public com.terraframe.mojo.query.AttributeBoolean getAAcetate()
  {
    return getAAcetate(null);

  }
 
  public com.terraframe.mojo.query.AttributeBoolean getAAcetate(String alias)
  {
    return (com.terraframe.mojo.query.AttributeBoolean)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.AACETATE, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeBoolean getAAcetate(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeBoolean)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.AACETATE, alias, displayLabel);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getAcHES()
  {
    return getAcHES(null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getAcHES(String alias)
  {

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.ACHES, alias, null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getAcHES(String alias, String displayLabel)
  {

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.ACHES, alias, displayLabel);

  }
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getAcHESMethod()
  {
    return getAcHESMethod(null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getAcHESMethod(String alias)
  {

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.ACHESMETHOD, alias, null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getAcHESMethod(String alias, String displayLabel)
  {

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.ACHESMETHOD, alias, displayLabel);

  }
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getAcHEV()
  {
    return getAcHEV(null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getAcHEV(String alias)
  {

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.ACHEV, alias, null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getAcHEV(String alias, String displayLabel)
  {

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.ACHEV, alias, displayLabel);

  }
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getAcHEVMethod()
  {
    return getAcHEVMethod(null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getAcHEVMethod(String alias)
  {

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.ACHEVMETHOD, alias, null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getAcHEVMethod(String alias, String displayLabel)
  {

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.ACHEVMETHOD, alias, displayLabel);

  }
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getAcHEW()
  {
    return getAcHEW(null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getAcHEW(String alias)
  {

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.ACHEW, alias, null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getAcHEW(String alias, String displayLabel)
  {

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.ACHEW, alias, displayLabel);

  }
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getAcHEWMethod()
  {
    return getAcHEWMethod(null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getAcHEWMethod(String alias)
  {

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.ACHEWMETHOD, alias, null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getAcHEWMethod(String alias, String displayLabel)
  {

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.ACHEWMETHOD, alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeBoolean getBAcetate()
  {
    return getBAcetate(null);

  }
 
  public com.terraframe.mojo.query.AttributeBoolean getBAcetate(String alias)
  {
    return (com.terraframe.mojo.query.AttributeBoolean)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.BACETATE, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeBoolean getBAcetate(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeBoolean)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.BACETATE, alias, displayLabel);

  }
 
  public dss.vector.solutions.entomology.AbstractMosquitoCollectionQuery.AbstractMosquitoCollectionQueryReferenceIF getCollection()
  {
    return getCollection(null);

  }
 
  public dss.vector.solutions.entomology.AbstractMosquitoCollectionQuery.AbstractMosquitoCollectionQueryReferenceIF getCollection(String alias)
  {

    return (dss.vector.solutions.entomology.AbstractMosquitoCollectionQuery.AbstractMosquitoCollectionQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.COLLECTION, alias, null);

  }
 
  public dss.vector.solutions.entomology.AbstractMosquitoCollectionQuery.AbstractMosquitoCollectionQueryReferenceIF getCollection(String alias, String displayLabel)
  {

    return (dss.vector.solutions.entomology.AbstractMosquitoCollectionQuery.AbstractMosquitoCollectionQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.COLLECTION, alias, displayLabel);

  }
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getEKDR()
  {
    return getEKDR(null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getEKDR(String alias)
  {

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.EKDR, alias, null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getEKDR(String alias, String displayLabel)
  {

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.EKDR, alias, displayLabel);

  }
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getEKDRMethod()
  {
    return getEKDRMethod(null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getEKDRMethod(String alias)
  {

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.EKDRMETHOD, alias, null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getEKDRMethod(String alias, String displayLabel)
  {

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.EKDRMETHOD, alias, displayLabel);

  }
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getGABAG()
  {
    return getGABAG(null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getGABAG(String alias)
  {

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.GABAG, alias, null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getGABAG(String alias, String displayLabel)
  {

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.GABAG, alias, displayLabel);

  }
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getGABAGMethod()
  {
    return getGABAGMethod(null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getGABAGMethod(String alias)
  {

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.GABAGMETHOD, alias, null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getGABAGMethod(String alias, String displayLabel)
  {

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.GABAGMETHOD, alias, displayLabel);

  }
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getGABAS()
  {
    return getGABAS(null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getGABAS(String alias)
  {

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.GABAS, alias, null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getGABAS(String alias, String displayLabel)
  {

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.GABAS, alias, displayLabel);

  }
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getGABASMethod()
  {
    return getGABASMethod(null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getGABASMethod(String alias)
  {

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.GABASMETHOD, alias, null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getGABASMethod(String alias, String displayLabel)
  {

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.GABASMETHOD, alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeBoolean getGSTCDNB()
  {
    return getGSTCDNB(null);

  }
 
  public com.terraframe.mojo.query.AttributeBoolean getGSTCDNB(String alias)
  {
    return (com.terraframe.mojo.query.AttributeBoolean)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.GSTCDNB, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeBoolean getGSTCDNB(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeBoolean)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.GSTCDNB, alias, displayLabel);

  }
 
  public com.terraframe.mojo.query.AttributeBoolean getGSTDCNB()
  {
    return getGSTDCNB(null);

  }
 
  public com.terraframe.mojo.query.AttributeBoolean getGSTDCNB(String alias)
  {
    return (com.terraframe.mojo.query.AttributeBoolean)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.GSTDCNB, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeBoolean getGSTDCNB(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeBoolean)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.GSTDCNB, alias, displayLabel);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getGeneration()
  {
    return getGeneration(null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getGeneration(String alias)
  {

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.GENERATION, alias, null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getGeneration(String alias, String displayLabel)
  {

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.GENERATION, alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeBoolean getHeme()
  {
    return getHeme(null);

  }
 
  public com.terraframe.mojo.query.AttributeBoolean getHeme(String alias)
  {
    return (com.terraframe.mojo.query.AttributeBoolean)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.HEME, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeBoolean getHeme(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeBoolean)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.HEME, alias, displayLabel);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getIAcHE()
  {
    return getIAcHE(null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getIAcHE(String alias)
  {

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.IACHE, alias, null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getIAcHE(String alias, String displayLabel)
  {

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.IACHE, alias, displayLabel);

  }
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getIAcHEMethod()
  {
    return getIAcHEMethod(null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getIAcHEMethod(String alias)
  {

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.IACHEMETHOD, alias, null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getIAcHEMethod(String alias, String displayLabel)
  {

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.IACHEMETHOD, alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeChar getId()
  {
    return getId(null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getId(String alias)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.ID, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getId(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.ID, alias, displayLabel);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getIdentificationMethod()
  {
    return getIdentificationMethod(null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getIdentificationMethod(String alias)
  {

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.IDENTIFICATIONMETHOD, alias, null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getIdentificationMethod(String alias, String displayLabel)
  {

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.IDENTIFICATIONMETHOD, alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeBoolean getIsofemale()
  {
    return getIsofemale(null);

  }
 
  public com.terraframe.mojo.query.AttributeBoolean getIsofemale(String alias)
  {
    return (com.terraframe.mojo.query.AttributeBoolean)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.ISOFEMALE, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeBoolean getIsofemale(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeBoolean)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.ISOFEMALE, alias, displayLabel);

  }
 
  public com.terraframe.mojo.query.AttributeBoolean getMixed()
  {
    return getMixed(null);

  }
 
  public com.terraframe.mojo.query.AttributeBoolean getMixed(String alias)
  {
    return (com.terraframe.mojo.query.AttributeBoolean)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.MIXED, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeBoolean getMixed(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeBoolean)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.MIXED, alias, displayLabel);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getMixedMethod()
  {
    return getMixedMethod(null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getMixedMethod(String alias)
  {

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.MIXEDMETHOD, alias, null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getMixedMethod(String alias, String displayLabel)
  {

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.MIXEDMETHOD, alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeChar getMosquitoId()
  {
    return getMosquitoId(null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getMosquitoId(String alias)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.MOSQUITOID, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getMosquitoId(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.MOSQUITOID, alias, displayLabel);

  }
 
  public com.terraframe.mojo.query.AttributeBoolean getP450()
  {
    return getP450(null);

  }
 
  public com.terraframe.mojo.query.AttributeBoolean getP450(String alias)
  {
    return (com.terraframe.mojo.query.AttributeBoolean)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.P450, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeBoolean getP450(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeBoolean)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.P450, alias, displayLabel);

  }
 
  public com.terraframe.mojo.query.AttributeBoolean getPFalciparum()
  {
    return getPFalciparum(null);

  }
 
  public com.terraframe.mojo.query.AttributeBoolean getPFalciparum(String alias)
  {
    return (com.terraframe.mojo.query.AttributeBoolean)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.PFALCIPARUM, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeBoolean getPFalciparum(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeBoolean)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.PFALCIPARUM, alias, displayLabel);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getPFalciparumMethod()
  {
    return getPFalciparumMethod(null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getPFalciparumMethod(String alias)
  {

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.PFALCIPARUMMETHOD, alias, null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getPFalciparumMethod(String alias, String displayLabel)
  {

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.PFALCIPARUMMETHOD, alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeBoolean getPMalariae()
  {
    return getPMalariae(null);

  }
 
  public com.terraframe.mojo.query.AttributeBoolean getPMalariae(String alias)
  {
    return (com.terraframe.mojo.query.AttributeBoolean)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.PMALARIAE, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeBoolean getPMalariae(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeBoolean)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.PMALARIAE, alias, displayLabel);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getPMalariaeMethod()
  {
    return getPMalariaeMethod(null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getPMalariaeMethod(String alias)
  {

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.PMALARIAEMETHOD, alias, null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getPMalariaeMethod(String alias, String displayLabel)
  {

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.PMALARIAEMETHOD, alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeBoolean getPNPA()
  {
    return getPNPA(null);

  }
 
  public com.terraframe.mojo.query.AttributeBoolean getPNPA(String alias)
  {
    return (com.terraframe.mojo.query.AttributeBoolean)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.PNPA, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeBoolean getPNPA(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeBoolean)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.PNPA, alias, displayLabel);

  }
 
  public com.terraframe.mojo.query.AttributeBoolean getPOvale()
  {
    return getPOvale(null);

  }
 
  public com.terraframe.mojo.query.AttributeBoolean getPOvale(String alias)
  {
    return (com.terraframe.mojo.query.AttributeBoolean)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.POVALE, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeBoolean getPOvale(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeBoolean)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.POVALE, alias, displayLabel);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getPOvaleMethod()
  {
    return getPOvaleMethod(null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getPOvaleMethod(String alias)
  {

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.POVALEMETHOD, alias, null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getPOvaleMethod(String alias, String displayLabel)
  {

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.POVALEMETHOD, alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeBoolean getPVivax()
  {
    return getPVivax(null);

  }
 
  public com.terraframe.mojo.query.AttributeBoolean getPVivax(String alias)
  {
    return (com.terraframe.mojo.query.AttributeBoolean)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.PVIVAX, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeBoolean getPVivax(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeBoolean)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.PVIVAX, alias, displayLabel);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getPVivaxMethod()
  {
    return getPVivaxMethod(null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getPVivaxMethod(String alias)
  {

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.PVIVAXMETHOD, alias, null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getPVivaxMethod(String alias, String displayLabel)
  {

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.PVIVAXMETHOD, alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeChar getSampleId()
  {
    return getSampleId(null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getSampleId(String alias)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.SAMPLEID, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeChar getSampleId(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeChar)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.SAMPLEID, alias, displayLabel);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getSex()
  {
    return getSex(null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getSex(String alias)
  {

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.SEX, alias, null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getSex(String alias, String displayLabel)
  {

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.SEX, alias, displayLabel);

  }
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getSpecie()
  {
    return getSpecie(null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getSpecie(String alias)
  {

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.SPECIE, alias, null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getSpecie(String alias, String displayLabel)
  {

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.SPECIE, alias, displayLabel);

  }
  public com.terraframe.mojo.query.AttributeMoment getTestDate()
  {
    return getTestDate(null);

  }
 
  public com.terraframe.mojo.query.AttributeMoment getTestDate(String alias)
  {
    return (com.terraframe.mojo.query.AttributeMoment)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.TESTDATE, alias, null);

  }
 
  public com.terraframe.mojo.query.AttributeMoment getTestDate(String alias, String displayLabel)
  {
    return (com.terraframe.mojo.query.AttributeMoment)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.TESTDATE, alias, displayLabel);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getWKDR()
  {
    return getWKDR(null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getWKDR(String alias)
  {

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.WKDR, alias, null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getWKDR(String alias, String displayLabel)
  {

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.WKDR, alias, displayLabel);

  }
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getWKDRMethod()
  {
    return getWKDRMethod(null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getWKDRMethod(String alias)
  {

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.WKDRMETHOD, alias, null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getWKDRMethod(String alias, String displayLabel)
  {

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.WKDRMETHOD, alias, displayLabel);

  }
  /**  
   * Returns an iterator of Business objects that match the query criteria specified
   * on this query object. 
   * @return iterator of Business objects that match the query criteria specified
   * on this query object.
   */
  @java.lang.SuppressWarnings("unchecked")
  public com.terraframe.mojo.query.OIterator<? extends MosquitoView> getIterator()
  {
    com.terraframe.mojo.query.ValueIterator valueIterator;
    if (_pageSize != null && _pageNumber != null)
    {
      valueIterator = (com.terraframe.mojo.query.ValueIterator<com.terraframe.mojo.dataaccess.ValueObject>)this.getComponentQuery().getIterator(_pageSize, _pageNumber);
    }
    else
    {
      valueIterator = (com.terraframe.mojo.query.ValueIterator<com.terraframe.mojo.dataaccess.ValueObject>)this.getComponentQuery().getIterator();
    }
    return new com.terraframe.mojo.query.ViewIterator<MosquitoView>(this.getMdClassIF(), valueIterator);
  }

}
