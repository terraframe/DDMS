package dss.vector.solutions.query;

@com.runwaysdk.business.ClassSignature(hash = -1181979647)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to CategoryGen.java
 *
 * @author Autogenerated by RunwaySDK
 */
public abstract class CategoryGenBase extends com.runwaysdk.business.Business implements com.runwaysdk.generation.loader.Reloadable
{
  public final static String CLASS = "dss.vector.solutions.query.CategoryGen";
  public static java.lang.String CATEGORYCOUNT = "categoryCount";
  public static java.lang.String CREATEDATE = "createDate";
  public static java.lang.String CREATEDBY = "createdBy";
  public static java.lang.String ENTITYDOMAIN = "entityDomain";
  public static java.lang.String FACTORYTYPE = "factoryType";
  public static java.lang.String FONTFILLEND = "fontFillEnd";
  public static java.lang.String FONTFILLSTART = "fontFillStart";
  public static java.lang.String ID = "id";
  public static java.lang.String KEYNAME = "keyName";
  public static java.lang.String LABELHALOFILLEND = "labelHaloFillEnd";
  public static java.lang.String LABELHALOFILLSTART = "labelHaloFillStart";
  public static java.lang.String LASTUPDATEDATE = "lastUpdateDate";
  public static java.lang.String LASTUPDATEDBY = "lastUpdatedBy";
  public static java.lang.String LAYERID = "layerId";
  public static java.lang.String LOCKEDBY = "lockedBy";
  public static java.lang.String OWNER = "owner";
  public static java.lang.String POINTSIZEEND = "pointSizeEnd";
  public static java.lang.String POINTSIZESTART = "pointSizeStart";
  public static java.lang.String POINTSTROKEEND = "pointStrokeEnd";
  public static java.lang.String POINTSTROKESTART = "pointStrokeStart";
  public static java.lang.String POLYGONFILLEND = "polygonFillEnd";
  public static java.lang.String POLYGONFILLSTART = "polygonFillStart";
  public static java.lang.String POLYGONSTROKEEND = "polygonStrokeEnd";
  public static java.lang.String POLYGONSTROKESTART = "polygonStrokeStart";
  public static java.lang.String PRECISIONFIGURES = "precisionFigures";
  public static java.lang.String SEQ = "seq";
  public static java.lang.String SITEMASTER = "siteMaster";
  public static java.lang.String TYPE = "type";
  private static final long serialVersionUID = -1181979647;
  
  public CategoryGenBase()
  {
    super();
  }
  
  public Integer getCategoryCount()
  {
    return com.runwaysdk.constants.MdAttributeIntegerUtil.getTypeSafeValue(getValue(CATEGORYCOUNT));
  }
  
  public void validateCategoryCount()
  {
    this.validateAttribute(CATEGORYCOUNT);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeIntegerDAOIF getCategoryCountMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.query.CategoryGen.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeIntegerDAOIF)mdClassIF.definesAttribute(CATEGORYCOUNT);
  }
  
  public void setCategoryCount(Integer value)
  {
    if(value == null)
    {
      setValue(CATEGORYCOUNT, "");
    }
    else
    {
      setValue(CATEGORYCOUNT, java.lang.Integer.toString(value));
    }
  }
  
  public java.util.Date getCreateDate()
  {
    return com.runwaysdk.constants.MdAttributeDateTimeUtil.getTypeSafeValue(getValue(CREATEDATE));
  }
  
  public void validateCreateDate()
  {
    this.validateAttribute(CREATEDATE);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDateTimeDAOIF getCreateDateMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.query.CategoryGen.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeDateTimeDAOIF)mdClassIF.definesAttribute(CREATEDATE);
  }
  
  public com.runwaysdk.system.SingleActor getCreatedBy()
  {
    if (getValue(CREATEDBY).trim().equals(""))
    {
      return null;
    }
    else
    {
      return com.runwaysdk.system.SingleActor.get(getValue(CREATEDBY));
    }
  }
  
  public String getCreatedById()
  {
    return getValue(CREATEDBY);
  }
  
  public void validateCreatedBy()
  {
    this.validateAttribute(CREATEDBY);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeReferenceDAOIF getCreatedByMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.query.CategoryGen.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeReferenceDAOIF)mdClassIF.definesAttribute(CREATEDBY);
  }
  
  public com.runwaysdk.system.metadata.MdDomain getEntityDomain()
  {
    if (getValue(ENTITYDOMAIN).trim().equals(""))
    {
      return null;
    }
    else
    {
      return com.runwaysdk.system.metadata.MdDomain.get(getValue(ENTITYDOMAIN));
    }
  }
  
  public String getEntityDomainId()
  {
    return getValue(ENTITYDOMAIN);
  }
  
  public void validateEntityDomain()
  {
    this.validateAttribute(ENTITYDOMAIN);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeReferenceDAOIF getEntityDomainMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.query.CategoryGen.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeReferenceDAOIF)mdClassIF.definesAttribute(ENTITYDOMAIN);
  }
  
  public void setEntityDomain(com.runwaysdk.system.metadata.MdDomain value)
  {
    if(value == null)
    {
      setValue(ENTITYDOMAIN, "");
    }
    else
    {
      setValue(ENTITYDOMAIN, value.getId());
    }
  }
  
  public String getFactoryType()
  {
    return getValue(FACTORYTYPE);
  }
  
  public void validateFactoryType()
  {
    this.validateAttribute(FACTORYTYPE);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF getFactoryTypeMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.query.CategoryGen.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF)mdClassIF.definesAttribute(FACTORYTYPE);
  }
  
  public void setFactoryType(String value)
  {
    if(value == null)
    {
      setValue(FACTORYTYPE, "");
    }
    else
    {
      setValue(FACTORYTYPE, value);
    }
  }
  
  public String getFontFillEnd()
  {
    return getValue(FONTFILLEND);
  }
  
  public void validateFontFillEnd()
  {
    this.validateAttribute(FONTFILLEND);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF getFontFillEndMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.query.CategoryGen.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF)mdClassIF.definesAttribute(FONTFILLEND);
  }
  
  public void setFontFillEnd(String value)
  {
    if(value == null)
    {
      setValue(FONTFILLEND, "");
    }
    else
    {
      setValue(FONTFILLEND, value);
    }
  }
  
  public String getFontFillStart()
  {
    return getValue(FONTFILLSTART);
  }
  
  public void validateFontFillStart()
  {
    this.validateAttribute(FONTFILLSTART);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF getFontFillStartMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.query.CategoryGen.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF)mdClassIF.definesAttribute(FONTFILLSTART);
  }
  
  public void setFontFillStart(String value)
  {
    if(value == null)
    {
      setValue(FONTFILLSTART, "");
    }
    else
    {
      setValue(FONTFILLSTART, value);
    }
  }
  
  public String getId()
  {
    return getValue(ID);
  }
  
  public void validateId()
  {
    this.validateAttribute(ID);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF getIdMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.query.CategoryGen.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF)mdClassIF.definesAttribute(ID);
  }
  
  public String getKeyName()
  {
    return getValue(KEYNAME);
  }
  
  public void validateKeyName()
  {
    this.validateAttribute(KEYNAME);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF getKeyNameMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.query.CategoryGen.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF)mdClassIF.definesAttribute(KEYNAME);
  }
  
  public void setKeyName(String value)
  {
    if(value == null)
    {
      setValue(KEYNAME, "");
    }
    else
    {
      setValue(KEYNAME, value);
    }
  }
  
  public String getLabelHaloFillEnd()
  {
    return getValue(LABELHALOFILLEND);
  }
  
  public void validateLabelHaloFillEnd()
  {
    this.validateAttribute(LABELHALOFILLEND);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF getLabelHaloFillEndMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.query.CategoryGen.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF)mdClassIF.definesAttribute(LABELHALOFILLEND);
  }
  
  public void setLabelHaloFillEnd(String value)
  {
    if(value == null)
    {
      setValue(LABELHALOFILLEND, "");
    }
    else
    {
      setValue(LABELHALOFILLEND, value);
    }
  }
  
  public String getLabelHaloFillStart()
  {
    return getValue(LABELHALOFILLSTART);
  }
  
  public void validateLabelHaloFillStart()
  {
    this.validateAttribute(LABELHALOFILLSTART);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF getLabelHaloFillStartMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.query.CategoryGen.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF)mdClassIF.definesAttribute(LABELHALOFILLSTART);
  }
  
  public void setLabelHaloFillStart(String value)
  {
    if(value == null)
    {
      setValue(LABELHALOFILLSTART, "");
    }
    else
    {
      setValue(LABELHALOFILLSTART, value);
    }
  }
  
  public java.util.Date getLastUpdateDate()
  {
    return com.runwaysdk.constants.MdAttributeDateTimeUtil.getTypeSafeValue(getValue(LASTUPDATEDATE));
  }
  
  public void validateLastUpdateDate()
  {
    this.validateAttribute(LASTUPDATEDATE);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDateTimeDAOIF getLastUpdateDateMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.query.CategoryGen.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeDateTimeDAOIF)mdClassIF.definesAttribute(LASTUPDATEDATE);
  }
  
  public com.runwaysdk.system.SingleActor getLastUpdatedBy()
  {
    if (getValue(LASTUPDATEDBY).trim().equals(""))
    {
      return null;
    }
    else
    {
      return com.runwaysdk.system.SingleActor.get(getValue(LASTUPDATEDBY));
    }
  }
  
  public String getLastUpdatedById()
  {
    return getValue(LASTUPDATEDBY);
  }
  
  public void validateLastUpdatedBy()
  {
    this.validateAttribute(LASTUPDATEDBY);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeReferenceDAOIF getLastUpdatedByMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.query.CategoryGen.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeReferenceDAOIF)mdClassIF.definesAttribute(LASTUPDATEDBY);
  }
  
  public String getLayerId()
  {
    return getValue(LAYERID);
  }
  
  public void validateLayerId()
  {
    this.validateAttribute(LAYERID);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF getLayerIdMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.query.CategoryGen.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF)mdClassIF.definesAttribute(LAYERID);
  }
  
  public void setLayerId(String value)
  {
    if(value == null)
    {
      setValue(LAYERID, "");
    }
    else
    {
      setValue(LAYERID, value);
    }
  }
  
  public com.runwaysdk.system.Users getLockedBy()
  {
    if (getValue(LOCKEDBY).trim().equals(""))
    {
      return null;
    }
    else
    {
      return com.runwaysdk.system.Users.get(getValue(LOCKEDBY));
    }
  }
  
  public String getLockedById()
  {
    return getValue(LOCKEDBY);
  }
  
  public void validateLockedBy()
  {
    this.validateAttribute(LOCKEDBY);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeReferenceDAOIF getLockedByMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.query.CategoryGen.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeReferenceDAOIF)mdClassIF.definesAttribute(LOCKEDBY);
  }
  
  public com.runwaysdk.system.Actor getOwner()
  {
    if (getValue(OWNER).trim().equals(""))
    {
      return null;
    }
    else
    {
      return com.runwaysdk.system.Actor.get(getValue(OWNER));
    }
  }
  
  public String getOwnerId()
  {
    return getValue(OWNER);
  }
  
  public void validateOwner()
  {
    this.validateAttribute(OWNER);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeReferenceDAOIF getOwnerMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.query.CategoryGen.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeReferenceDAOIF)mdClassIF.definesAttribute(OWNER);
  }
  
  public void setOwner(com.runwaysdk.system.Actor value)
  {
    if(value == null)
    {
      setValue(OWNER, "");
    }
    else
    {
      setValue(OWNER, value.getId());
    }
  }
  
  public Integer getPointSizeEnd()
  {
    return com.runwaysdk.constants.MdAttributeIntegerUtil.getTypeSafeValue(getValue(POINTSIZEEND));
  }
  
  public void validatePointSizeEnd()
  {
    this.validateAttribute(POINTSIZEEND);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeIntegerDAOIF getPointSizeEndMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.query.CategoryGen.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeIntegerDAOIF)mdClassIF.definesAttribute(POINTSIZEEND);
  }
  
  public void setPointSizeEnd(Integer value)
  {
    if(value == null)
    {
      setValue(POINTSIZEEND, "");
    }
    else
    {
      setValue(POINTSIZEEND, java.lang.Integer.toString(value));
    }
  }
  
  public Integer getPointSizeStart()
  {
    return com.runwaysdk.constants.MdAttributeIntegerUtil.getTypeSafeValue(getValue(POINTSIZESTART));
  }
  
  public void validatePointSizeStart()
  {
    this.validateAttribute(POINTSIZESTART);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeIntegerDAOIF getPointSizeStartMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.query.CategoryGen.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeIntegerDAOIF)mdClassIF.definesAttribute(POINTSIZESTART);
  }
  
  public void setPointSizeStart(Integer value)
  {
    if(value == null)
    {
      setValue(POINTSIZESTART, "");
    }
    else
    {
      setValue(POINTSIZESTART, java.lang.Integer.toString(value));
    }
  }
  
  public String getPointStrokeEnd()
  {
    return getValue(POINTSTROKEEND);
  }
  
  public void validatePointStrokeEnd()
  {
    this.validateAttribute(POINTSTROKEEND);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF getPointStrokeEndMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.query.CategoryGen.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF)mdClassIF.definesAttribute(POINTSTROKEEND);
  }
  
  public void setPointStrokeEnd(String value)
  {
    if(value == null)
    {
      setValue(POINTSTROKEEND, "");
    }
    else
    {
      setValue(POINTSTROKEEND, value);
    }
  }
  
  public String getPointStrokeStart()
  {
    return getValue(POINTSTROKESTART);
  }
  
  public void validatePointStrokeStart()
  {
    this.validateAttribute(POINTSTROKESTART);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF getPointStrokeStartMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.query.CategoryGen.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF)mdClassIF.definesAttribute(POINTSTROKESTART);
  }
  
  public void setPointStrokeStart(String value)
  {
    if(value == null)
    {
      setValue(POINTSTROKESTART, "");
    }
    else
    {
      setValue(POINTSTROKESTART, value);
    }
  }
  
  public String getPolygonFillEnd()
  {
    return getValue(POLYGONFILLEND);
  }
  
  public void validatePolygonFillEnd()
  {
    this.validateAttribute(POLYGONFILLEND);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF getPolygonFillEndMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.query.CategoryGen.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF)mdClassIF.definesAttribute(POLYGONFILLEND);
  }
  
  public void setPolygonFillEnd(String value)
  {
    if(value == null)
    {
      setValue(POLYGONFILLEND, "");
    }
    else
    {
      setValue(POLYGONFILLEND, value);
    }
  }
  
  public String getPolygonFillStart()
  {
    return getValue(POLYGONFILLSTART);
  }
  
  public void validatePolygonFillStart()
  {
    this.validateAttribute(POLYGONFILLSTART);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF getPolygonFillStartMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.query.CategoryGen.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF)mdClassIF.definesAttribute(POLYGONFILLSTART);
  }
  
  public void setPolygonFillStart(String value)
  {
    if(value == null)
    {
      setValue(POLYGONFILLSTART, "");
    }
    else
    {
      setValue(POLYGONFILLSTART, value);
    }
  }
  
  public String getPolygonStrokeEnd()
  {
    return getValue(POLYGONSTROKEEND);
  }
  
  public void validatePolygonStrokeEnd()
  {
    this.validateAttribute(POLYGONSTROKEEND);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF getPolygonStrokeEndMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.query.CategoryGen.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF)mdClassIF.definesAttribute(POLYGONSTROKEEND);
  }
  
  public void setPolygonStrokeEnd(String value)
  {
    if(value == null)
    {
      setValue(POLYGONSTROKEEND, "");
    }
    else
    {
      setValue(POLYGONSTROKEEND, value);
    }
  }
  
  public String getPolygonStrokeStart()
  {
    return getValue(POLYGONSTROKESTART);
  }
  
  public void validatePolygonStrokeStart()
  {
    this.validateAttribute(POLYGONSTROKESTART);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF getPolygonStrokeStartMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.query.CategoryGen.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF)mdClassIF.definesAttribute(POLYGONSTROKESTART);
  }
  
  public void setPolygonStrokeStart(String value)
  {
    if(value == null)
    {
      setValue(POLYGONSTROKESTART, "");
    }
    else
    {
      setValue(POLYGONSTROKESTART, value);
    }
  }
  
  public Integer getPrecisionFigures()
  {
    return com.runwaysdk.constants.MdAttributeIntegerUtil.getTypeSafeValue(getValue(PRECISIONFIGURES));
  }
  
  public void validatePrecisionFigures()
  {
    this.validateAttribute(PRECISIONFIGURES);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeIntegerDAOIF getPrecisionFiguresMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.query.CategoryGen.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeIntegerDAOIF)mdClassIF.definesAttribute(PRECISIONFIGURES);
  }
  
  public void setPrecisionFigures(Integer value)
  {
    if(value == null)
    {
      setValue(PRECISIONFIGURES, "");
    }
    else
    {
      setValue(PRECISIONFIGURES, java.lang.Integer.toString(value));
    }
  }
  
  public Long getSeq()
  {
    return com.runwaysdk.constants.MdAttributeLongUtil.getTypeSafeValue(getValue(SEQ));
  }
  
  public void validateSeq()
  {
    this.validateAttribute(SEQ);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeLongDAOIF getSeqMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.query.CategoryGen.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeLongDAOIF)mdClassIF.definesAttribute(SEQ);
  }
  
  public String getSiteMaster()
  {
    return getValue(SITEMASTER);
  }
  
  public void validateSiteMaster()
  {
    this.validateAttribute(SITEMASTER);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF getSiteMasterMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.query.CategoryGen.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF)mdClassIF.definesAttribute(SITEMASTER);
  }
  
  public String getType()
  {
    return getValue(TYPE);
  }
  
  public void validateType()
  {
    this.validateAttribute(TYPE);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF getTypeMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.query.CategoryGen.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF)mdClassIF.definesAttribute(TYPE);
  }
  
  protected String getDeclaredType()
  {
    return CLASS;
  }
  
  public static CategoryGenQuery getAllInstances(String sortAttribute, Boolean ascending, Integer pageSize, Integer pageNumber)
  {
    CategoryGenQuery query = new CategoryGenQuery(new com.runwaysdk.query.QueryFactory());
    com.runwaysdk.business.Entity.getAllInstances(query, sortAttribute, ascending, pageSize, pageNumber);
    return query;
  }
  
  public static CategoryGen get(String id)
  {
    return (CategoryGen) com.runwaysdk.business.Business.get(id);
  }
  
  public static CategoryGen getByKey(String key)
  {
    return (CategoryGen) com.runwaysdk.business.Business.get(CLASS, key);
  }
  
  public static CategoryGen lock(java.lang.String id)
  {
    CategoryGen _instance = CategoryGen.get(id);
    _instance.lock();
    
    return _instance;
  }
  
  public static CategoryGen unlock(java.lang.String id)
  {
    CategoryGen _instance = CategoryGen.get(id);
    _instance.unlock();
    
    return _instance;
  }
  
  public String toString()
  {
    if (this.isNew())
    {
      return "New: "+ this.getClassDisplayLabel();
    }
    else
    {
      return super.toString();
    }
  }
}
