package dss.vector.solutions.query;

@com.terraframe.mojo.business.ClassSignature(hash = 830274723)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to GeometryStyle.java
 *
 * @author Autogenerated by TerraFrame
 */
public abstract class GeometryStyleBase extends dss.vector.solutions.query.StyleRule implements com.terraframe.mojo.generation.loader.Reloadable
{
  public final static String CLASS = "dss.vector.solutions.query.GeometryStyle";
  public static java.lang.String STROKE = "stroke";
  public static java.lang.String STROKEWIDTH = "strokeWidth";
  private static final long serialVersionUID = 830274723;
  
  public GeometryStyleBase()
  {
    super();
  }
  
  public String getStroke()
  {
    return getValue(STROKE);
  }
  
  public void validateStroke()
  {
    this.validateAttribute(STROKE);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getStrokeMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.query.GeometryStyle.CLASS);
    return mdClassIF.definesAttribute(STROKE);
  }
  
  public void setStroke(String value)
  {
    if(value == null)
    {
      setValue(STROKE, "");
    }
    else
    {
      setValue(STROKE, value);
    }
  }
  
  public Integer getStrokeWidth()
  {
    return com.terraframe.mojo.constants.MdAttributeIntegerUtil.getTypeSafeValue(getValue(STROKEWIDTH));
  }
  
  public void validateStrokeWidth()
  {
    this.validateAttribute(STROKEWIDTH);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getStrokeWidthMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.query.GeometryStyle.CLASS);
    return mdClassIF.definesAttribute(STROKEWIDTH);
  }
  
  public void setStrokeWidth(Integer value)
  {
    if(value == null)
    {
      setValue(STROKEWIDTH, "");
    }
    else
    {
      setValue(STROKEWIDTH, java.lang.Integer.toString(value));
    }
  }
  
  protected String getDeclaredType()
  {
    return CLASS;
  }
  
  public static GeometryStyleQuery getAllInstances(String sortAttribute, Boolean ascending, Integer pageSize, Integer pageNumber)
  {
    GeometryStyleQuery query = new GeometryStyleQuery(new com.terraframe.mojo.query.QueryFactory());
    com.terraframe.mojo.business.Entity.getAllInstances(query, sortAttribute, ascending, pageSize, pageNumber);
    return query;
  }
  
  public static GeometryStyle get(String id)
  {
    return (GeometryStyle) com.terraframe.mojo.business.Business.get(id);
  }
  
  public static GeometryStyle getByKey(String key)
  {
    return (GeometryStyle) com.terraframe.mojo.business.Business.get(CLASS, key);
  }
  
  public static GeometryStyle lock(java.lang.String id)
  {
    GeometryStyle _instance = GeometryStyle.get(id);
    _instance.lock();
    
    return _instance;
  }
  
  public static GeometryStyle unlock(java.lang.String id)
  {
    GeometryStyle _instance = GeometryStyle.get(id);
    _instance.unlock();
    
    return _instance;
  }
  
  public String toString()
  {
    if (this.isNew())
    {
      return "New: "+ this.getClassDisplayLabel();
    }
    else
    {
      return super.toString();
    }
  }
}
