package dss.vector.solutions.query;

@com.terraframe.mojo.business.ClassSignature(hash = 1773456666)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to TextStyle.java
 *
 * @author Autogenerated by TerraFrame
 */
public abstract class TextStyleBase extends dss.vector.solutions.query.StyleRule implements com.terraframe.mojo.generation.loader.Reloadable
{
  public final static String CLASS = "dss.vector.solutions.query.TextStyle";
  public static java.lang.String FILL = "fill";
  public static java.lang.String FONTFAMILY = "fontFamily";
  public static java.lang.String FONTSIZE = "fontSize";
  public static java.lang.String FONTSTYLE = "fontStyle";
  private static final long serialVersionUID = 1773456666;
  
  public TextStyleBase()
  {
    super();
  }
  
  public String getFill()
  {
    return getValue(FILL);
  }
  
  public void validateFill()
  {
    this.validateAttribute(FILL);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getFillMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.query.TextStyle.CLASS);
    return mdClassIF.definesAttribute(FILL);
  }
  
  public void setFill(String value)
  {
    if(value == null)
    {
      setValue(FILL, "");
    }
    else
    {
      setValue(FILL, value);
    }
  }
  
  public String getFontFamily()
  {
    return getValue(FONTFAMILY);
  }
  
  public void validateFontFamily()
  {
    this.validateAttribute(FONTFAMILY);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getFontFamilyMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.query.TextStyle.CLASS);
    return mdClassIF.definesAttribute(FONTFAMILY);
  }
  
  public void setFontFamily(String value)
  {
    if(value == null)
    {
      setValue(FONTFAMILY, "");
    }
    else
    {
      setValue(FONTFAMILY, value);
    }
  }
  
  public Integer getFontSize()
  {
    return com.terraframe.mojo.constants.MdAttributeIntegerUtil.getTypeSafeValue(getValue(FONTSIZE));
  }
  
  public void validateFontSize()
  {
    this.validateAttribute(FONTSIZE);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getFontSizeMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.query.TextStyle.CLASS);
    return mdClassIF.definesAttribute(FONTSIZE);
  }
  
  public void setFontSize(Integer value)
  {
    if(value == null)
    {
      setValue(FONTSIZE, "");
    }
    else
    {
      setValue(FONTSIZE, java.lang.Integer.toString(value));
    }
  }
  
  public String getFontStyle()
  {
    return getValue(FONTSTYLE);
  }
  
  public void validateFontStyle()
  {
    this.validateAttribute(FONTSTYLE);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getFontStyleMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.query.TextStyle.CLASS);
    return mdClassIF.definesAttribute(FONTSTYLE);
  }
  
  public void setFontStyle(String value)
  {
    if(value == null)
    {
      setValue(FONTSTYLE, "");
    }
    else
    {
      setValue(FONTSTYLE, value);
    }
  }
  
  protected String getDeclaredType()
  {
    return CLASS;
  }
  
  public static TextStyleQuery getAllInstances(String sortAttribute, Boolean ascending, Integer pageSize, Integer pageNumber)
  {
    TextStyleQuery query = new TextStyleQuery(new com.terraframe.mojo.query.QueryFactory());
    com.terraframe.mojo.business.Entity.getAllInstances(query, sortAttribute, ascending, pageSize, pageNumber);
    return query;
  }
  
  public static TextStyle get(String id)
  {
    return (TextStyle) com.terraframe.mojo.business.Business.get(id);
  }
  
  public static TextStyle getByKey(String key)
  {
    return (TextStyle) com.terraframe.mojo.business.Business.get(CLASS, key);
  }
  
  public static TextStyle lock(java.lang.String id)
  {
    TextStyle _instance = TextStyle.get(id);
    _instance.lock();
    
    return _instance;
  }
  
  public static TextStyle unlock(java.lang.String id)
  {
    TextStyle _instance = TextStyle.get(id);
    _instance.unlock();
    
    return _instance;
  }
  
  public String toString()
  {
    if (this.isNew())
    {
      return "New: "+ this.getClassDisplayLabel();
    }
    else
    {
      return super.toString();
    }
  }
}
