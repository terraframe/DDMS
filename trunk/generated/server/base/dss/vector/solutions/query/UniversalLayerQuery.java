package dss.vector.solutions.query;

@com.terraframe.mojo.business.ClassSignature(hash = 562441551)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to UniversalLayer.java
 *
 * @author Autogenerated by TerraFrame
 */
public  class UniversalLayerQuery extends dss.vector.solutions.query.LayerQuery
 implements com.terraframe.mojo.generation.loader.Reloadable
{
private static final long serialVersionUID = 562441551;

  public UniversalLayerQuery(com.terraframe.mojo.query.QueryFactory componentQueryFactory)
  {
    super(componentQueryFactory);
    if (this.getComponentQuery() == null)
    {
      com.terraframe.mojo.business.BusinessQuery businessQuery = componentQueryFactory.businessQuery(this.getClassType());

       this.setBusinessQuery(businessQuery);
    }
  }

  public String getClassType()
  {
    return dss.vector.solutions.query.UniversalLayer.CLASS;
  }
  /**  
   * Returns an iterator of Business objects that match the query criteria specified
   * on this query object. 
   * @return iterator of Business objects that match the query criteria specified
   * on this query object.
   */
  public com.terraframe.mojo.query.OIterator<? extends UniversalLayer> getIterator()
  {
    String sqlStmt;
    if (_limit != null && _skip != null)
    {
      sqlStmt = this.getComponentQuery().getSQL(_limit, _skip);
    }
    else
    {
      sqlStmt = this.getComponentQuery().getSQL();
    }
    java.util.Map<String, com.terraframe.mojo.query.ColumnInfo> columnInfoMap = this.getComponentQuery().getColumnInfoMap();

    java.sql.ResultSet results = com.terraframe.mojo.dataaccess.database.Database.query(sqlStmt);
    return new com.terraframe.mojo.business.BusinessIterator<UniversalLayer>(this.getComponentQuery().getMdEntityIF(), columnInfoMap, results);
  }


  public com.terraframe.mojo.query.Condition fromSavedSearch()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.query.DefinesLayers.CLASS);

    return this.getBusinessQuery().isChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition fromSavedSearch(dss.vector.solutions.query.DefinesLayersQuery definesLayersQuery)
  {
    return this.getBusinessQuery().isChildIn(definesLayersQuery);
  }

  public com.terraframe.mojo.query.Condition fromSavedSearch(dss.vector.solutions.query.SavedSearchQuery savedSearchQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.query.DefinesLayers.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(savedSearchQuery));

    return this.getBusinessQuery().isChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition fromSavedSearch(dss.vector.solutions.query.SavedSearchQuery savedSearchQuery, dss.vector.solutions.query.DefinesLayersQuery definesLayersQuery)
  {
    definesLayersQuery.AND(definesLayersQuery.hasParent(savedSearchQuery));
    return this.getBusinessQuery().isChildIn(definesLayersQuery);
  }


  public com.terraframe.mojo.query.Condition NOT_IN_fromSavedSearch()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.query.DefinesLayers.CLASS);

    return this.getBusinessQuery().isNotChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_fromSavedSearch(dss.vector.solutions.query.DefinesLayersQuery definesLayersQuery)
  {
    return this.getBusinessQuery().isNotChildIn(definesLayersQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_fromSavedSearch(dss.vector.solutions.query.SavedSearchQuery savedSearchQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.query.DefinesLayers.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(savedSearchQuery));

    return this.getBusinessQuery().isNotChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_fromSavedSearch(dss.vector.solutions.query.SavedSearchQuery savedSearchQuery, dss.vector.solutions.query.DefinesLayersQuery definesLayersQuery)
  {
    definesLayersQuery.AND(definesLayersQuery.hasParent(savedSearchQuery));
    return this.getBusinessQuery().isNotChildIn(definesLayersQuery);
  }


/**
 * Interface that masks all type unsafe query methods and defines all type safe methods.
 * This type is used when a join is performed on this class as a reference.
 **/
  public interface UniversalLayerQueryReferenceIF extends com.terraframe.mojo.generation.loader.Reloadable, dss.vector.solutions.query.LayerQuery.LayerQueryReferenceIF
  {


    public com.terraframe.mojo.query.BasicCondition EQ(dss.vector.solutions.query.UniversalLayer universalLayer);

    public com.terraframe.mojo.query.BasicCondition NE(dss.vector.solutions.query.UniversalLayer universalLayer);


  public com.terraframe.mojo.query.Condition fromSavedSearch();
  public com.terraframe.mojo.query.Condition fromSavedSearch(dss.vector.solutions.query.SavedSearchQuery savedSearchQuery);

  public com.terraframe.mojo.query.Condition fromSavedSearch(dss.vector.solutions.query.SavedSearchQuery savedSearchQuery, dss.vector.solutions.query.DefinesLayersQuery definesLayersQuery);


  public com.terraframe.mojo.query.Condition NOT_IN_fromSavedSearch();
  public com.terraframe.mojo.query.Condition NOT_IN_fromSavedSearch(dss.vector.solutions.query.SavedSearchQuery savedSearchQuery);

  public com.terraframe.mojo.query.Condition NOT_IN_fromSavedSearch(dss.vector.solutions.query.SavedSearchQuery savedSearchQuery, dss.vector.solutions.query.DefinesLayersQuery definesLayersQuery);

  }

/**
 * Implements type safe query methods.
 * This type is used when a join is performed on this class as a reference.
 **/
  public static class UniversalLayerQueryReference extends dss.vector.solutions.query.LayerQuery.LayerQueryReference
 implements UniversalLayerQueryReferenceIF
, com.terraframe.mojo.generation.loader.Reloadable
  {
private static final long serialVersionUID = -1195636371;

  public UniversalLayerQueryReference(com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias, com.terraframe.mojo.dataaccess.MdBusinessDAOIF referenceMdBusinessIF, String referenceTableAlias, com.terraframe.mojo.query.ComponentQuery rootQuery, java.util.Set<com.terraframe.mojo.query.Join> tableJoinSet, String alias, String displayLabel)
  {
    super(mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, alias, displayLabel);

  }


    public com.terraframe.mojo.query.BasicCondition EQ(dss.vector.solutions.query.UniversalLayer universalLayer)
    {
      return this.EQ(universalLayer.getId());
    }

    public com.terraframe.mojo.query.BasicCondition NE(dss.vector.solutions.query.UniversalLayer universalLayer)
    {
      return this.NE(universalLayer.getId());
    }


  public com.terraframe.mojo.query.Condition fromSavedSearch()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.query.DefinesLayers.CLASS);

    return this.isChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition fromSavedSearch(dss.vector.solutions.query.SavedSearchQuery savedSearchQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.query.DefinesLayers.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(savedSearchQuery));

    return this.isChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition fromSavedSearch(dss.vector.solutions.query.SavedSearchQuery savedSearchQuery, dss.vector.solutions.query.DefinesLayersQuery definesLayersQuery)
  {
    definesLayersQuery.AND(definesLayersQuery.hasParent(savedSearchQuery));
    return this.isChildIn(definesLayersQuery);
  }


  public com.terraframe.mojo.query.Condition NOT_IN_fromSavedSearch()
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.query.DefinesLayers.CLASS);

    return this.isNotChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_fromSavedSearch(dss.vector.solutions.query.SavedSearchQuery savedSearchQuery)
  {
    com.terraframe.mojo.query.QueryFactory queryFactory = this.getQueryFactory();
    com.terraframe.mojo.business.RelationshipQuery relationshipQuery = queryFactory.relationshipQuery(dss.vector.solutions.query.DefinesLayers.CLASS);
    relationshipQuery.AND(relationshipQuery.hasParent(savedSearchQuery));

    return this.isNotChildIn(relationshipQuery);
  }

  public com.terraframe.mojo.query.Condition NOT_IN_fromSavedSearch(dss.vector.solutions.query.SavedSearchQuery savedSearchQuery, dss.vector.solutions.query.DefinesLayersQuery definesLayersQuery)
  {
    definesLayersQuery.AND(definesLayersQuery.hasParent(savedSearchQuery));
    return this.isNotChildIn(definesLayersQuery);
  }

  }
}
