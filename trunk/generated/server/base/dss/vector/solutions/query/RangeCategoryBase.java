package dss.vector.solutions.query;

@com.terraframe.mojo.business.ClassSignature(hash = 1044216755)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to RangeCategory.java
 *
 * @author Autogenerated by TerraFrame
 */
public abstract class RangeCategoryBase extends dss.vector.solutions.query.AbstractCategory implements com.terraframe.mojo.generation.loader.Reloadable
{
  public final static String CLASS = "dss.vector.solutions.query.RangeCategory";
  public static java.lang.String LOWERBOUND = "lowerBound";
  public static java.lang.String UPPERBOUND = "upperBound";
  private static final long serialVersionUID = 1044216755;
  
  public RangeCategoryBase()
  {
    super();
  }
  
  public Double getLowerBound()
  {
    return com.terraframe.mojo.constants.MdAttributeDoubleUtil.getTypeSafeValue(getValue(LOWERBOUND));
  }
  
  public void validateLowerBound()
  {
    this.validateAttribute(LOWERBOUND);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getLowerBoundMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.query.RangeCategory.CLASS);
    return mdClassIF.definesAttribute(LOWERBOUND);
  }
  
  public void setLowerBound(Double value)
  {
    if(value == null)
    {
      setValue(LOWERBOUND, "");
    }
    else
    {
      setValue(LOWERBOUND, java.lang.Double.toString(value));
    }
  }
  
  public Double getUpperBound()
  {
    return com.terraframe.mojo.constants.MdAttributeDoubleUtil.getTypeSafeValue(getValue(UPPERBOUND));
  }
  
  public void validateUpperBound()
  {
    this.validateAttribute(UPPERBOUND);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getUpperBoundMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.query.RangeCategory.CLASS);
    return mdClassIF.definesAttribute(UPPERBOUND);
  }
  
  public void setUpperBound(Double value)
  {
    if(value == null)
    {
      setValue(UPPERBOUND, "");
    }
    else
    {
      setValue(UPPERBOUND, java.lang.Double.toString(value));
    }
  }
  
  protected String getDeclaredType()
  {
    return CLASS;
  }
  
  public static RangeCategoryQuery getAllInstances(String sortAttribute, Boolean ascending, Integer pageSize, Integer pageNumber)
  {
    RangeCategoryQuery query = new RangeCategoryQuery(new com.terraframe.mojo.query.QueryFactory());
    com.terraframe.mojo.business.Entity.getAllInstances(query, sortAttribute, ascending, pageSize, pageNumber);
    return query;
  }
  
  public static RangeCategory get(String id)
  {
    return (RangeCategory) com.terraframe.mojo.business.Business.get(id);
  }
  
  public static RangeCategory getByKey(String key)
  {
    return (RangeCategory) com.terraframe.mojo.business.Business.get(CLASS, key);
  }
  
  public static RangeCategory lock(java.lang.String id)
  {
    RangeCategory _instance = RangeCategory.get(id);
    _instance.lock();
    
    return _instance;
  }
  
  public static RangeCategory unlock(java.lang.String id)
  {
    RangeCategory _instance = RangeCategory.get(id);
    _instance.unlock();
    
    return _instance;
  }
  
  public String toString()
  {
    if (this.isNew())
    {
      return "New: "+ this.getClassDisplayLabel();
    }
    else
    {
      return super.toString();
    }
  }
}
