<?xml version="1.0" encoding="UTF-8"?>
<project name="patch" default="build">

	<!--
    Run this with the -Dproject.root=<path/to/ddms/git/repo>
  -->

	<property name="nsis.exec" location="/usr/bin/makensis" />
  <property name="python.exec" location="/usr/bin/python3" />
	<property name="manager.dir" value="${project.root}/build/manager" />
	<property name="runway-patch.dir" value="${project.root}/ddms-runway-patcher" />
	<property name="ddms.root" value="${project.root}/DDMS" />
	<property name="doc.dir" value="${ddms.root}/doc" />
	<property name="stage.dir" value="${project.root}/build/patcher/stage" />
	<property name="stage.webapp" value="${stage.dir}/webapp" />
	<property name="stage.classes" location = "${stage.webapp}/WEB-INF/classes"/>
	<property name="geodata.db" value="mrc_blank" />
	<property name="postgres.user" value="ddmsbuild" />
  <property name="postgres.pass" value="ddmsbuild" />
  <property name="postgres.db" value="ddmsbuild" />

<!--
  ===============
    BUILD FLAGS
  ===============
  Copy and paste these depends into the target below to modify what you're building

	<target name="build" >
	<target name="build" depends="setup-files">
-->
	<target name="build" depends="setup-files">

		<!-- Get revision info from git -->
    <exec executable="${python.exec}" failonerror="true">
		  <arg line="${project.root}/build/ddms-revision-info.py"/>
		  <arg line="${project.root}/build/patcher/patcher.nsi" />
		  <arg line="${project.root}"/>
		</exec>

		<!-- Copy over an updated serverExceptions.property file -->
		<copy file="${ddms.root}/profiles/serverExceptions.properties" todir="${stage.dir}/backup-manager/profiles" />

		<!-- Get properties files ready for including into nsis -->
    <antcall target="configure_for_prod" />

		<!-- Compile all-in-one-patch.nsi -->
		<exec executable="${nsis.exec}" dir="${stage.dir}" failonerror="true" searchpath="true" logError="true">
			<arg line="${project.root}/build/patcher/patcher.nsi" />
		</exec>
	</target>

  <target name="test-prop-replace">
		<propertyfile file="/home/rich/dev/projects/DDMS/git/DDMS/DDMS/profiles/default/server/install.properties">
			<entry key="manager.root" value="MANAGER-ROOT-REPLACE" />
    </propertyfile>
		<replaceregexp file="/home/rich/dev/projects/DDMS/git/DDMS/DDMS/profiles/default/server/install.properties" match="MANAGER-ROOT-REPLACE" replace="C:/MDSS/manager" byline="true"/>
  </target>

  <!-- Configures the build system to be ready for a local build of the database -->
	<target name="configure_for_build">
    <propertyfile file="${ddms.root}/profiles/default/server/database.properties">
      <entry key="port" value="${postgres.port}" />
			<entry key="user" value="${postgres.user}" />
      <entry key="password" value="${postgres.pass}" />
      <entry key="databaseName" value="${postgres.db}" />
    </propertyfile>
		<propertyfile file="${ddms.root}/profiles/patch/server/database.properties">
      <entry key="port" value="${postgres.port}" />
			<entry key="user" value="${postgres.user}" />
      <entry key="password" value="${postgres.pass}" />
      <entry key="databaseName" value="${postgres.db}" />
    </propertyfile>
		<propertyfile file="${ddms.root}/profiles/develop/server/database.properties">
      <entry key="port" value="${postgres.port}" />
			<entry key="user" value="${postgres.user}" />
      <entry key="password" value="${postgres.pass}" />
      <entry key="databaseName" value="${postgres.db}" />
    </propertyfile>
    <propertyfile file="${ddms.root}/profiles/default/common/terraframe.properties">
      <entry key="local.root" value="${ddms.root}" />
    </propertyfile>
		<propertyfile file="${ddms.root}/profiles/patch/common/deploy.properties">
      <entry key="deploy.path" value="${stage.webapp}" />
    </propertyfile>
		<propertyfile file="${ddms.root}/profiles/default/server/install.properties">
      <entry key="manager.root" value="${manager.dir}" />
    </propertyfile>
  </target>

	<!-- Configures the staging properties files to be ready for a production deployment
       Any changes that were made in configure_for_build must be undone here.
  -->
	<target name="configure_for_prod">
		<propertyfile file="${stage.webapp}/WEB-INF/classes/deploy.properties">
      <entry key="deploy.path" value="${deploy.webapps.root}/${deploy.appname}" />
    </propertyfile>
		<!-- This properties file is only written on a new install.
    <propertyfile file="${stage.webapp}/WEB-INF/classes/install.properties">
      <entry key="manager.root" value="C:/MDSS/manager" />
    </propertyfile>
	  -->

		<!-- Since localization files are versioned now, we want to make sure that we delete these files otherwise they will overwrite localization on our target machine. -->
    <delete file="${stage.dir}/webapp/WEB-INF/classes/MDSS.properties" />
    <delete file="${stage.dir}/webapp/WEB-INF/classes/clientExceptions.properties" />
    <delete file="${stage.dir}/webapp/WEB-INF/classes/commonExceptions.properties" />
    <delete file="${stage.dir}/webapp/WEB-INF/classes/serverExceptions.properties" />

		<!-- We need to make sure we don't overwrite the domain/site master.  A better solution is to -->
		<!-- merge the old value into the new one.  For now, we just won't copy that file. -->
		<delete file="${stage.dir}/webapp/WEB-INF/classes/terraframe.properties" />
		<delete file="${stage.dir}/webapp/WEB-INF/classes/common.properties" />
    <delete file="${stage.dir}/webapp/WEB-INF/classes/analytics.properties" />
		<delete file="${stage.dir}/webapp/WEB-INF/classes/database.properties" />
		<!-- We're just deleting database.properties, so it doesn't matter that the username/password/dbname are for the build system and not prod.
		<propertyfile file="${stage.webapp}/WEB-INF/classes/database.properties">
      <entry key="user" value="mdssdeploy" />
      <entry key="password" value="mdssdeploy" />
      <entry key="databaseName" value="mdssdeploy" />
			<entry key="databaseBinDirectory" value="C:/MDSS/PostgreSql/9.6/bin/" />
    </propertyfile>
	   -->

		<!--
		  The ant command 'propertyfile' automatically escapes all ':' with '\:', this causes a problem when the java property
		  reader tries to merge property values. As such, we need to replace the updated '\:' with the original ':' character
		  through regex.
		-->
		<!--
	    <replaceregexp flags="g" byline="true" file="${stage.classes}/install.properties" match='\\\:' replace=":" />
			<replaceregexp flags="g" byline="true" file="${stage.classes}/install.properties" match='\\\\' replace="/" />
	    <replaceregexp flags="g" byline="true" file="${stage.classes}/database.properties" match='\\\\' replace="/" />
	    <replaceregexp flags="g" byline="true" file="${stage.classes}/database.properties" match='\\\:' replace=":" />
			-->
			<replaceregexp flags="g" byline="true" file="${stage.classes}/deploy.properties" match='\\\\' replace="/" />
	    <replaceregexp flags="g" byline="true" file="${stage.classes}/deploy.properties" match='\\\:' replace=":" />
			<!--
	    <replaceregexp byline="true" file="${stage.classes}/terraframe.properties" match='^local.root=.*$' replace="local.root=C:/MDSS/tomcat/" />
	    <replaceregexp byline="true" file="${stage.classes}/terraframe.properties" match='^deploy.root=.*$' replace="deploy.root=C:/MDSS/tomcat/" />
		  -->
  </target>

	<target name="setup-files" depends="configure_for_build">
		<delete dir="${stage.dir}/webapp" includeemptydirs="true" />

		<!-- Compile -->
		<ant inheritAll="false" dir="${ddms.root}/scripts/ant/deploy/" antfile="deploy.xml" target="compile_generated">
			<property name="profile.name" value="develop" />
			<property name="geodata.db" value="${geodata.db}" />
		</ant>

		<!-- Generate an up to date localization spread sheet -->
<!--

		<ant inheritAll="false" dir="${ddms.root}/scripts/ant/deploy/" antfile="deploy.xml" target="import_localization_disease_defaults">
			<property name="profile.name" value="develop" />
			<property name="geodata.db" value="${geodata.db}" />
		</ant>
-->
		<!-- Get a copy of all web files -->

		<ant inheritAll="false" dir="${ddms.root}/scripts/ant/deploy/" antfile="deploy.xml" target="deploy_all_files">
			<property name="profile.name" value="patch" />
			<property name="geodata.db" value="${geodata.db}" />
		</ant>

		<!-- Copy in the appropriate geo universals xls -->
		<copy file="${doc.dir}/country/${geodata.db}-universals.xls" tofile="${stage.dir}/geo-universals.xls" />

		<!-- Create the local-develop.properties file -->
		<copy file="${stage.dir}/webapp/WEB-INF/classes/local.properties" tofile="${stage.dir}/webapp/WEB-INF/classes/local-develop.properties" />
		<replace file="${stage.dir}/webapp/WEB-INF/classes/local-develop.properties" token="environment=deploy" value="environment=develop" />

		<!-- <delete file="${stage.dir}/webapp/login.jsp" /> -->
		<delete file="${stage.dir}/webapp/WEB-INF/originalVersion.jsp" />

		<!-- Delete the flag, so that we don't overwrite it. That could be bad. -->
		<delete file="${stage.dir}/webapp/imgs/flags/current" />

		<!-- Delete the source and classes directory of the MERG survey form, so that we don't overwrite any custom fields. -->
		<delete>
          <fileset dir="${stage.dir}/webapp/WEB-INF/classes/dss/vector/solutions/form/business" casesensitive="yes">
            <include name="**/*.class"/>
			<exclude name="**/*FormSurveyController*.class"/>
			<exclude name="**/*FormSurvey.class"/>
			<exclude name="**/*FormHousehold.class"/>
		  </fileset>
		</delete>
		<delete>
          <fileset dir="${stage.dir}/webapp/WEB-INF/source/server/stub/dss/vector/solutions/form/business" casesensitive="yes">
            <include name="**/*.java"/>
			<exclude name="**/*FormSurvey.java"/>
			<exclude name="**/*FormHousehold.java"/>
		  </fileset>
		</delete>
		<delete dir="${stage.dir}/webapp/WEB-INF/source/server/base/dss/vector/solutions/form/business" />
		<delete>
          <fileset dir="${stage.dir}/webapp/WEB-INF/source/client/stub/dss/vector/solutions/form/business" casesensitive="yes">
            <include name="**/*.java"/>
			<exclude name="**/*FormSurveyController*.java"/>
		  </fileset>
		</delete>
		<delete>
          <fileset dir="${stage.dir}/webapp/WEB-INF/source/client/base/dss/vector/solutions/form/business" casesensitive="yes">
            <include name="**/*.java"/>
			<exclude name="**/*FormSurveyController*.java"/>
		  </fileset>
		</delete>
	</target>
</project>
