# Auto-generated by EclipseNSIS Script Wizard
# Feb 10, 2011 10:10:22 AM

Name "DDMS"

RequestExecutionLevel highest

# General Symbol Definitions
!define REGKEY "SOFTWARE\$(^Name)"
!define VERSION 1.0.0
!define COMPANY "Innovative Vector Control Consortium"
!define URL "http://www.ivcc.com/"

# MUI Symbol Definitions
!define MUI_ICON "${NSISDIR}\Contrib\Graphics\Icons\modern-install-colorful.ico"
!define MUI_FINISHPAGE_NOAUTOCLOSE
!define MUI_UNICON "ivcc_roundel_1.ico"
!define MUI_UNFINISHPAGE_NOAUTOCLOSE

# Included files
!include Sections.nsh
!include MUI2.nsh
!include nsDialogs.nsh
!include LogicLib.nsh
!include FileFunc.nsh
!include x64.nsh

# Define access to the StrTrimNewLines function
!macro StrTrimNewLines ResultVar String
  Push "${String}"
  Call StrTrimNewLines
  Pop "${ResultVar}"
!macroend
!define StrTrimNewLines "!insertmacro StrTrimNewLines"

; StrContains
; This function does a case sensitive searches for an occurrence of a substring in a string. 
; It returns the substring if it is found. 
; Otherwise it returns null(""). 
; Written by kenglish_hi
; Adapted from StrReplace written by dandaman32
 
 
Var STR_HAYSTACK
Var STR_NEEDLE
Var STR_CONTAINS_VAR_1
Var STR_CONTAINS_VAR_2
Var STR_CONTAINS_VAR_3
Var STR_CONTAINS_VAR_4
Var STR_RETURN_VAR
 
Function StrContains
  Exch $STR_NEEDLE
  Exch 1
  Exch $STR_HAYSTACK
  ; Uncomment to debug
  ;MessageBox MB_OK 'STR_NEEDLE = $STR_NEEDLE STR_HAYSTACK = $STR_HAYSTACK '
    StrCpy $STR_RETURN_VAR ""
    StrCpy $STR_CONTAINS_VAR_1 -1
    StrLen $STR_CONTAINS_VAR_2 $STR_NEEDLE
    StrLen $STR_CONTAINS_VAR_4 $STR_HAYSTACK
    loop:
      IntOp $STR_CONTAINS_VAR_1 $STR_CONTAINS_VAR_1 + 1
      StrCpy $STR_CONTAINS_VAR_3 $STR_HAYSTACK $STR_CONTAINS_VAR_2 $STR_CONTAINS_VAR_1
      StrCmp $STR_CONTAINS_VAR_3 $STR_NEEDLE found
      StrCmp $STR_CONTAINS_VAR_1 $STR_CONTAINS_VAR_4 done
      Goto loop
    found:
      StrCpy $STR_RETURN_VAR $STR_NEEDLE
      Goto done
    done:
   Pop $STR_NEEDLE ;Prevent "invalid opcode" errors and keep the
   Exch $STR_RETURN_VAR  
FunctionEnd
 
!macro _StrContainsConstructor OUT NEEDLE HAYSTACK
  Push `${HAYSTACK}`
  Push `${NEEDLE}`
  Call StrContains
  Pop `${OUT}`
!macroend
 
!define StrContains '!insertmacro "_StrContainsConstructor"'


# Variables
Var Java
Var JavaOpts
Var JavaError
Var Classpath               # Classpath to use when running java commands.  Changes depending on $AppName.
Var PatchDir                # Location of the temp patch directory on the client install.
Var AgentDir                # Location of the logging agent directory on the client install.
Var isMaster                # Temp flag denoting if the current app is a master or not.
Var AppName                 # Temp variable for the name of the current app being patched.
Var AppsToPatch             # This variable is (optionally) set from the command line, during a silent install. Its a (comma delimited) list of apps which will get patched.
Var TargetLoc               # Location of the WEB-INF classes directory on the client install.  Changes depending on $AppName.
Var Phase
Var RunwayVersion           # Version of the runway metadata contained in the install.
Var MetadataVersion         # Runway metadata version which requires a delete.
Var ManagerVersion          # Version of the manager contained in the install.
Var JavaVersion             # Version of Java contained in the install.
Var BirtVersion             # Version of Birt contained in the install.
Var WebappsVersion          # Version of webapps directory contained in the install.
Var PatchVersion            # Version of the patch contained in the install.
Var TermsVersion            # Version of them terms contained in the install.
Var RootsVersion            # Version of the roots contained in the install.
Var MenuVersion             # Version of the menu structure contained in the install.
Var LocalizationVersion     # Version of the localization file contained in the install.
Var PermissionsVersion      # Version of the permissions contained in the install.
Var IdVersion			        	# Version of the predictive id change in the install. 
Var AppFile                 # Temp variable for looping through the contents of the application.txt file.
Var ExtraOpts               # Optional parameter value for extra JAVA options which should be used when running java commands during the patch process.
Var Params                  # Variable for storing all of the params
Var JavaHome                # Location of the Java JDK depending on the system OS version
Var JvmType                 # Flag indicating if the jvm is 32-bit or not
Var MaxMem                  # Max amount of memory to give Tomcat
Var PermMem                 # Amount of perm gen memory to give to Tomcat
Var TomcatExec              # Path of the tomcat service executable

# Installer pages
!insertmacro MUI_PAGE_WELCOME
#Page directory locationInputPage
!insertmacro MUI_PAGE_INSTFILES
!insertmacro MUI_PAGE_FINISH
!insertmacro MUI_UNPAGE_CONFIRM
!insertmacro MUI_UNPAGE_INSTFILES
!insertmacro MUI_UNPAGE_FINISH

# Installer languages
!insertmacro MUI_LANGUAGE English

# Installer attributes
OutFile manager-patch.exe
InstallDir C:\MDSS
CRCCheck on
XPStyle on
ShowInstDetails show
VIProductVersion 3.1.0.0
VIAddVersionKey ProductName "Runway"
VIAddVersionKey ProductVersion "${VERSION}"
VIAddVersionKey CompanyName "${COMPANY}"
VIAddVersionKey CompanyWebsite "${URL}"
VIAddVersionKey FileVersion "${VERSION}"
VIAddVersionKey FileDescription ""
VIAddVersionKey LegalCopyright ""
ShowUninstDetails show

Function locationInputPage
  StrCpy $R8 1 ;This is the first page
  
  !insertmacro MUI_HEADER_TEXT "Installation Folder" "Specify the folder that contains your DDMS install."
FunctionEnd

# Installer sections
Section -Main SEC0000

  # Determine the location of java home.  
  ${IfNot} ${RunningX64}
    StrCpy $JavaHome $INSTDIR\Java\jdk_32_bit
    StrCpy $JvmType true
    StrCpy $MaxMem 768    
    StrCpy $PermMem 256      
    StrCpy $TomcatExec $INSTDIR\tomcat6\bin\tomcat6.exe    
  ${Else}
    StrCpy $JavaHome $INSTDIR\Java\jdk1.6.0_16    
    StrCpy $JvmType false
    StrCpy $MaxMem 3072
    StrCpy $PermMem 512        
    StrCpy $TomcatExec $INSTDIR\tomcat6\bin\tomcat64.exe        
  ${EndIf}

  SetOutPath $INSTDIR
  SetOverwrite on
  
  # The version numbers are automatically replaced by all-in-one-patch.xml
  StrCpy $RunwayVersion 7774
  StrCpy $MetadataVersion 7688
  StrCpy $ManagerVersion 7884
  StrCpy $PatchVersion 7896
  StrCpy $TermsVersion 7764
  StrCpy $RootsVersion 7829
  StrCpy $MenuVersion 7786
  StrCpy $LocalizationVersion 7831
  StrCpy $PermissionsVersion 7799
  StrCpy $IdVersion 7686
  StrCpy $BirtVersion 7851
  StrCpy $WebappsVersion 7616
  StrCpy $JavaVersion 7802  
    
  # Set some constants
  StrCpy $PatchDir "$INSTDIR\patch"
  StrCpy $AgentDir "$PatchDir\output"
  StrCpy $JavaOpts "$ExtraOpts -Xmx$MaxMemM -XX:MaxPermSize=$PermMemM -javaagent:$PatchDir\OutputAgent.jar"
  StrCpy $Java "$JavaHome\bin\javaw.exe"
  
  # Extract the logging libs
  !insertmacro MUI_HEADER_TEXT "Patching DDMS" "Copying patch files"
  SetOutPath $PatchDir
  File ..\ddms-runway-patcher\OutputAgent.jar
  File ..\ddms-runway-patcher\7za.exe
  File ..\ddms-runway-patcher\lib\runway-patcher-1.0.0.jar
  
  #####################################################################
  # First we must patch any runway metadata changes for all of the apps
  #####################################################################
  Call patchAllMetadata

  #####################################################################
  # Next we must patch the manager jars and associated files
  #####################################################################
  Call patchManager  
  
  #####################################################################
  # Next we must patch default installer stage artifacts
  #####################################################################
  Call patchInstallerStage
  
  #####################################################################
  # Finally we can patch master applications
  #####################################################################
  Call patchApplications    

  #  After all patching has finished we need to delete the tomcat cache
  SetOutPath $INSTDIR
  RMDir /r $INSTDIR\tomcat6\work\Catalina 
  
  # Update the pathing for java  
  LogEx::Write "Updating java pathing"

  # Update startup.bat
  Push $INSTDIR\Java\jdk1.6.0_16         # text to be replaced
  Push $JavaHome                         # replace with
  Push all                               # replace all occurrences
  Push all                               # replace all occurrences
  Push $INSTDIR\tomcat6\bin\startup.bat  # file to replace in
  Call AdvReplaceInFile
    
  # Update shutdown.bat
  Push $INSTDIR\Java\jdk1.6.0_16         # text to be replaced
  Push $JavaHome                         # replace with
  Push all                               # replace all occurrences
  Push all                               # replace all occurrences
  Push $INSTDIR\tomcat6\bin\shutdown.bat # file to replace in
  Call AdvReplaceInFile
  
  # Update manager.bat
  Push $INSTDIR\Java\jdk1.6.0_16         # text to be replaced
  Push $JavaHome                         # replace with
  Push all                               # replace all occurrences
  Push all                               # replace all occurrences
  Push $INSTDIR\manager\manager.bat      # file to replace in
  Call AdvReplaceInFile  

  # Update manager.bat
  Push JAVA_HOME_VALUE                   # text to be replaced
  Push $JavaHome                         # replace with
  Push all                               # replace all occurrences
  Push all                               # replace all occurrences
  Push $INSTDIR\manager\manager.bat      # file to replace in
  Call AdvReplaceInFile  
  
  # Update the birt shortcut
  SetOutPath $INSTDIR\birt
  CreateShortcut "$SMPROGRAMS\DDMS\BIRT.lnk" "$INSTDIR\birt\birt.exe" "" "$INSTDIR\birt\BIRT.exe" 0 SW_SHOWMINIMIZED  
  
  # Update postgres.conf
  LogEx::Write "Updating postgres settings"  

  SetOutPath $INSTDIR\PostgreSql\9.1\data
  File ..\installer-stage\postgresql.conf
  
  # Clean-up the logging libs
  Delete $PatchDir\*  
SectionEnd

Function checkIfMaster
  # Set default status to false
  StrCpy $IsMaster "false"
  
  ClearErrors
  FileOpen $0 $INSTDIR\tomcat6\webapps\$AppName\WEB-INF\classes\install.properties r
    
  propFileReadLoop:
  # Read a line from the file into $1
  FileRead $0 $1
  # Errors means end of File
  IfErrors isNotMaster
    
  # Removes the newline from the end of $1
  ${StrTrimNewLines} $1 $1
    
  StrCmp $1 "master=true" isMaster propFileReadLoop
  
  isMaster:
  StrCpy $IsMaster "true"
    
  isNotMaster:
  ClearErrors
  FileClose $0
FunctionEnd

Function patchApplications
  ClearErrors
  FileOpen $AppFile $INSTDIR\manager\manager-1.0.0\classes\applications.txt r
      
  appNameFileReadLoop:
  # Read a line from the file into $1
  FileRead $AppFile $1
      
  # Errors means end of File
  IfErrors appNameDone
      
  # Removes the newline from the end of $1
  ${StrTrimNewLines} $1 $1
    
  Push $1
  Pop $AppName

  # Only master installations can be patched.  
  Call checkIfMaster

  ${If} $IsMaster == "true"
    Call patchApplication
  ${Else}
    DetailPrint "$AppName cannot be patched because it is not a master install."
  ${EndIf}

  Goto appNameFileReadLoop
          
  appNameDone:
  ClearErrors
  FileClose $AppFile
FunctionEnd


Function patchApplication    
    # Before we start, check the versions to make sure this is actually a patch.
    ReadRegStr $0 HKLM "${REGKEY}\Components\$AppName" App
    ${If} $PatchVersion > $0     
      MessageBox MB_YESNO "Patch application $AppName?" /SD IDYES IDYES true IDNO false  
      true:
    
      # Update the classpath to reference the particular application being patched
      StrCpy $Classpath "$INSTDIR\tomcat6\webapps\$AppName\WEB-INF\classes;$INSTDIR\tomcat6\webapps\$AppName\WEB-INF\lib\*"

      # Remove any old log files that may be laying around
      Delete $AgentDir\*.out
      Delete $AgentDir\*.err
	  
	  # Remove old lib files
      Delete $INSTDIR\tomcat6\webapps\$AppName\WEB-INF\lib\*.*
            
      # Copy web files
      !insertmacro MUI_HEADER_TEXT "Patching $AppName" "Updating web files"
      SetOutPath $INSTDIR\tomcat6\webapps\$AppName
      File /r /x .svn ..\trunk\patches\webapp\*
      File /oname=$INSTDIR\tomcat6\webapps\$AppName\WEB-INF\classes\version.xsd ..\trunk\profiles\version.xsd

      # We need to clear the old cache
      Delete $INSTDIR\tomcat6\$AppName.index
      Delete $INSTDIR\tomcat6\$AppName.data    

      # Build any dimensional metadata with the Master domain
      !insertmacro MUI_HEADER_TEXT "Patching metadata" "Building dimensional metadata for $AppName..."
      ExecWait `$Java $JavaOpts=$AgentDir -cp $Classpath com.runwaysdk.dataaccess.ClassAndAttributeDimensionBuilder 0.mdss.ivcc.com` $JavaError
      Call JavaAbort
	  
	  # Predictive id patching
      !insertmacro MUI_HEADER_TEXT "Patching $AppName" "Migrating system ids."
      ReadRegStr $0 HKLM "${REGKEY}\Components\$AppName" IdVersion
      ${If} $IdVersion > $0
        StrCpy $Phase "Updating root ids, this process can several hours to complete."		
		ExecWait `$Java $JavaOpts=$AgentDir\appdataupdate_roots -cp $Classpath dss.vector.solutions.util.ApplicationDataUpdater -r` $JavaError
        Call JavaAbort
		
		# We need to re-clear the old cache
		Delete $INSTDIR\tomcat6\$AppName.index
		Delete $INSTDIR\tomcat6\$AppName.data    
		
        StrCpy $Phase "Updating system ids, this process can several hours to complete."		
		ExecWait `$Java $JavaOpts=$AgentDir\appdataupdate_keys -cp $Classpath dss.vector.solutions.util.ApplicationDataUpdater -k` $JavaError
        Call JavaAbort
		
        WriteRegStr HKLM "${REGKEY}\Components\$AppName" IdVersion $IdVersion
      ${Else}
        DetailPrint "Skipping system id migration because they are already up to date"
      ${EndIf}	  
    
      # Import Most Recent
      !insertmacro MUI_HEADER_TEXT "Patching $AppName" "Importing updated schema definitions"
      SetOutPath $PatchDir\schema
      File /x .svn ..\trunk\doc\individual\*
      StrCpy $Phase "Importing updated schema definitions"
      ExecWait `$Java $JavaOpts=$AgentDir\versioning -cp $Classpath com.runwaysdk.dataaccess.io.Versioning $PatchDir\schema /version.xsd` $JavaError
      Call JavaAbort
    
      # Update Database Source and Class
      !insertmacro MUI_HEADER_TEXT "Patching $AppName" "Updating Database"
      StrCpy $Phase "Updating database"
      ExecWait `$Java $JavaOpts=$AgentDir\updateDB -cp $Classpath com.runwaysdk.util.UpdateDatabaseSourceAndClasses` $JavaError
      Call JavaAbort
      # Delete $PatchDir\schema
    
      # Switch to the develop environment
      Rename $INSTDIR\tomcat6\webapps\$AppName\WEB-INF\classes\local.properties $INSTDIR\tomcat6\webapps\$AppName\WEB-INF\classes\local-deploy.properties
      Rename $INSTDIR\tomcat6\webapps\$AppName\WEB-INF\classes\local-develop.properties $INSTDIR\tomcat6\webapps\$AppName\WEB-INF\classes\local.properties
    
      # Terms
      !insertmacro MUI_HEADER_TEXT "Patching $AppName" "Importing Ontology"
      SetOutPath $PatchDir\doc
      File ..\trunk\doc\ontology\MOterms.xls
      ReadRegStr $0 HKLM "${REGKEY}\Components\$AppName" Terms
      ${If} $TermsVersion > $0
        StrCpy $Phase "Importing ontology from spreadsheet"
        ExecWait `$Java $JavaOpts=$AgentDir\terms -cp $Classpath dss.vector.solutions.ontology.OntologyExcelImporter $PatchDir\doc\MOterms.xls` $JavaError
        Call JavaAbort
        StrCpy $Phase "Rebuilding all paths"
        ExecWait `$Java $JavaOpts=$AgentDir\term_all_paths -cp $Classpath dss.vector.solutions.ontology.AllPaths` $JavaError
        StrCpy $JavaError "500"
        Call JavaAbort
        WriteRegStr HKLM "${REGKEY}\Components\$AppName" Terms $TermsVersion
      ${Else}
        DetailPrint "Skipping Ontology because it is already up to date"
      ${EndIf}
    
      # Term Roots
      !insertmacro MUI_HEADER_TEXT "Patching $AppName" "Setting up Ontology Roots"
      File ..\trunk\doc\ontology\MOroots.xls
      File ..\trunk\patches\geo-universals.xls
      ReadRegStr $0 HKLM "${REGKEY}\Components\$AppName" Roots
      ${If} $RootsVersion > $0
        StrCpy $Phase "Post ontology setup"
        ExecWait `$Java $JavaOpts=$AgentDir\terms -cp $Classpath dss.vector.solutions.ontology.PostOntologySetup $PatchDir\doc\MOroots.xls $PatchDir\doc\geo-universals.xls false` $JavaError
        Call JavaAbort
        WriteRegStr HKLM "${REGKEY}\Components\$AppName" Roots $RootsVersion
      ${Else}
        DetailPrint "Skipping Ontology Roots because they are already up to date"
      ${EndIf}
    
      # Menu Items
      !insertmacro MUI_HEADER_TEXT "Patching $AppName" "Importing Menu Items"
      SetOutPath $PatchDir\doc
      File ..\trunk\doc\menu\MenuItems.xls
      ReadRegStr $0 HKLM "${REGKEY}\Components\$AppName" Menu
      ${If} $MenuVersion > $0
        StrCpy $Phase "Importing menu items"
        ExecWait `$Java $JavaOpts=$AgentDir\menu -cp $Classpath dss.vector.solutions.util.MenuItemImporter $PatchDir\doc\MenuItems.xls false` $JavaError
        Call JavaAbort
        WriteRegStr HKLM "${REGKEY}\Components\$AppName" Menu $MenuVersion
      ${Else}
        DetailPrint "Skipping Menu because it is already up to date"
      ${EndIf}
        
      # Localization
      !insertmacro MUI_HEADER_TEXT "Patching $AppName" "Updating Localization"
      SetOutPath $PatchDir\doc
      File ..\trunk\doc\DiseaseLocalizationDefaults.xls
      ReadRegStr $0 HKLM "${REGKEY}\Components\$AppName" Localization
      ${If} $LocalizationVersion > $0
        StrCpy $Phase "Updating localization"
        ExecWait `$Java $JavaOpts=$AgentDir\localization -cp $Classpath dss.vector.solutions.util.MdssLocalizationImporter $PatchDir\doc\DiseaseLocalizationDefaults.xls` $JavaError
        Call JavaAbort
        WriteRegStr HKLM "${REGKEY}\Components\$AppName" Localization $LocalizationVersion
      ${Else}
        DetailPrint "Skipping Localization because it is already up to date"
      ${EndIf}
	  
      # Permissions
      !insertmacro MUI_HEADER_TEXT "Patching $AppName" "Updating Permissions"
      SetOutPath $PatchDir\doc
      File ..\trunk\profiles\Permissions.xls
      ReadRegStr $0 HKLM "${REGKEY}\Components\$AppName" Permissions
      ${If} $PermissionsVersion > $0
        StrCpy $Phase "Updating permissions"
        ExecWait `$Java $JavaOpts=$AgentDir\permissions -cp $Classpath dss.vector.solutions.permission.PermissionImporter $INSTDIR\tomcat6\webapps\$AppName\WEB-INF\classes\Permissions.xls` $JavaError
        Call JavaAbort
        WriteRegStr HKLM "${REGKEY}\Components\$AppName" Permissions $PermissionsVersion
      ${Else}
        DetailPrint "Skipping Permissions because they are already up to date"
      ${EndIf}    
        
      # Update any application data which needs to be updated
      !insertmacro MUI_HEADER_TEXT "Patching $AppName" "Updating application data"
      SetOutPath $PatchDir\doc
      StrCpy $Phase "Updating application data"
      ExecWait `$Java $JavaOpts=$AgentDir\appdataupdate_app -cp $Classpath dss.vector.solutions.util.ApplicationDataUpdater` $JavaError
      Call JavaAbort
   
   		# Delete all database views and sql functions because the QB source / function source may have changed
   		StrCpy $Phase "Deleting existing database views and functions."
      ExecWait `$Java $JavaOpts=$AgentDir\databasecleaner -cp $Classpath dss.vector.solutions.util.DatabaseViewCleanerPatcher`
   
      # Switch back to the deploy environment
      Rename $INSTDIR\tomcat6\webapps\$AppName\WEB-INF\classes\local.properties $INSTDIR\tomcat6\webapps\$AppName\WEB-INF\classes\local-develop.properties
      Rename $INSTDIR\tomcat6\webapps\$AppName\WEB-INF\classes\local-deploy.properties $INSTDIR\tomcat6\webapps\$AppName\WEB-INF\classes\local.properties
  
      # Update the .css file with the correct pathing
      ExecWait `$Java -cp "$INSTDIR\tomcat6\webapps\$AppName\WEB-INF\classes;$INSTDIR\tomcat6\webapps\$AppName\WEB-INF\lib\*" dss.vector.solutions.util.PostInstallSetup -a$AppName -n0 -v$JvmType -itrue -p`
    
      # Copy the profile to the backup manager
      CreateDirectory $INSTDIR\manager\backup-manager-1.0.0\profiles\$AppName
      CopyFiles /FILESONLY $INSTDIR\tomcat6\webapps\$AppName\WEB-INF\classes\*.* $INSTDIR\manager\backup-manager-1.0.0\profiles\$AppName
    
      # Write updated versions into registry 
      WriteRegStr HKLM "${REGKEY}\Components" Main 1
      WriteRegStr HKLM "${REGKEY}\Components\$AppName" App $PatchVersion
    
      # We need to clear the old cache
      Delete $INSTDIR\tomcat6\$AppName.index
      Delete $INSTDIR\tomcat6\$AppName.data  
    Goto next
    false:
    DetailPrint "Skipping patch of $AppName"
    next:    
  ${Else}
    DetailPrint "The application $AppName is already up to date."
  ${EndIf}    
FunctionEnd

Function patchAllMetadata
  ClearErrors
  FileOpen $AppFile $INSTDIR\manager\manager-1.0.0\classes\applications.txt r
      
  metadataLoop:
  # Read a line from the file into $1
  FileRead $AppFile $1
      
  # Errors means end of File
  IfErrors metadataLoopDone
      
  # Removes the newline from the end of $1
  ${StrTrimNewLines} $1 $1
    
  Push $1
  Pop $AppName

  Call patchMetadata

  Goto metadataLoop
          
  metadataLoopDone:
  ClearErrors
  FileClose $AppFile
FunctionEnd

Function patchMetadata  
  ReadRegStr $0 HKLM "${REGKEY}\Components\$AppName" RunwayVersion  
  ${If} $RunwayVersion > $0
    StrCpy $TargetLoc "$INSTDIR\tomcat6\webapps\$AppName\WEB-INF"    
    StrCpy $Classpath "$INSTDIR\tomcat6\webapps\$AppName\WEB-INF\classes;$INSTDIR\tomcat6\webapps\$AppName\WEB-INF\lib\*"
	
	${If} $MetadataVersion > $0
		# Copy over the updated runway jar
		SetOutPath $INSTDIR\tomcat6\webapps\$AppName\WEB-INF\lib
		File /x .svn ..\trunk\patches\webapp\WEB-INF\lib\*
	  
		# Build any dimensional metadata with the Master domain
		!insertmacro MUI_HEADER_TEXT "Patching metadata" "Preparing dimensional metadata for $AppName..."
		ExecWait `$Java $JavaOpts=$AgentDir -cp $Classpath com.runwaysdk.dataaccess.ClassAndAttributeDimensionDeleter` $JavaError
		Call JavaAbort
	${EndIf}
  
    # Execute patch
    !insertmacro MUI_HEADER_TEXT "Patching metadata" "Patching $AppName..."
    ExecWait `$Java $JavaOpts=$AgentDir -cp $Classpath -jar $PatchDir\runway-patcher-1.0.0.jar $TargetLoc\classes\database.properties $TargetLoc\lib` $JavaError
    Call JavaAbort
  
    # We need to clear the old cache
    Delete $INSTDIR\tomcat6\$AppName.index
    Delete $INSTDIR\tomcat6\$AppName.data
  
    # Build any dimensional metadata with the Master domain
    #!insertmacro MUI_HEADER_TEXT "Patching metadata" "Building dimensional metadata for $AppName..."
    #ExecWait `$Java $JavaOpts=$AgentDir -cp $Classpath com.runwaysdk.dataaccess.ClassAndAttributeDimensionBuilder 0.mdss.ivcc.com` $JavaError
    #Call JavaAbort

    # Build any dimensional metadata with the Master domain
    #!insertmacro MUI_HEADER_TEXT "Patching metadata" "Recompiling $AppName..."
    #ExecWait `$Java $JavaOpts=$AgentDir -cp $Classpath  com.runwaysdk.util.UpdateDatabaseSourceAndClasses -compile` $JavaError
    #Call JavaAbort  
  
    WriteRegStr HKLM "${REGKEY}\Components\$AppName" RunwayVersion $RunwayVersion
  ${Else}
    DetailPrint "Runway metadata for application $AppName is already up to date"
  ${EndIf}
  
  ClearErrors  
FunctionEnd

Function patchManager
  !insertmacro MUI_HEADER_TEXT "Patching manager" "Patching manager"
  
  # Before we start, check the versions to make sure this is actually a patch.
  ReadRegStr $0 HKLM "${REGKEY}\Components" Manager
  ${If} $ManagerVersion > $0    
  
  # Delete the existing SWT jars, the SWT jar has been moved into the jre
  	RMDir /r $INSTDIR\manager\backup-manager-1.0.0\lib
    Delete $INSTDIR\manager\ddms-initializer-1.0.0\lib\swt.jar  
    Delete $INSTDIR\manager\geo-manager-1.0.0\lib\swt.jar  
    Delete $INSTDIR\manager\manager-1.0.0\lib\swt.jar  
    Delete $INSTDIR\manager\synch-manager-1.0.0\lib\swt.jar  
  
    SetOutPath $INSTDIR\manager
    File ..\standalone\patch\manager.bat
	File ..\standalone\patch\manager.ps1
    File ..\standalone\patch\manager.ico  
    SetOutPath $INSTDIR\manager\backup-manager-1.0.0
    File /r /x .svn ..\standalone\backup-manager-1.0.0\*
    SetOutPath $INSTDIR\manager\ddms-initializer-1.0.0
    File /r /x .svn ..\standalone\ddms-initializer-1.0.0\*
    SetOutPath $INSTDIR\manager\geo-manager-1.0.0
    File /r /x .svn ..\standalone\geo-manager-1.0.0\*
    SetOutPath $INSTDIR\manager\manager-1.0.0
    File /r /x .svn /x *applications.txt ..\standalone\manager-1.0.0\*
    SetOutPath $INSTDIR\manager\synch-manager-1.0.0
    File /r /x .svn ..\standalone\synch-manager-1.0.0\*
    SetOutPath $INSTDIR\manager\keystore
    File /r /x .svn ..\standalone\doc\keystore\*
  
    ################################################################################
    # Update the manager memory settings for 64-bit installs
    ################################################################################
  
    ${If} ${RunningX64}    
    
    # Update max memory
    Push process.memory.max=1024M                                       # text to be replaced
    Push process.memory.max=3072M                                       # replace with
    Push all                                                            # replace all occurrences
    Push all                                                            # replace all occurrences
    Push $INSTDIR\manager\manager-1.0.0\classes\manager.properties      # file to replace in
    Call AdvReplaceInFile  
    
    # Update perm gen memory
    Push process.perm.size=256M                                         # text to be replaced
    Push process.perm.size=512M                                         # replace with
    Push all                                                            # replace all occurrences
    Push all                                                            # replace all occurrences
    Push $INSTDIR\manager\manager-1.0.0\classes\manager.properties      # file to replace in
    Call AdvReplaceInFile  
  ${EndIF}  
          
    ################################################################################
    # Copy any updated runway properties to all of the backedup profile directories
    ################################################################################
    ClearErrors
    FileOpen $0 $INSTDIR\manager\manager-1.0.0\classes\applications.txt r
    
    appNameFileReadLoop:
    # Read a line from the file into $1
    FileRead $0 $1
    
    # Errors means end of File
    IfErrors appNameDone
    
    # Removes the newline from the end of $1
    ${StrTrimNewLines} $1 $1
    
    # Copy over updated runway properties
    SetOutPath $INSTDIR\manager\backup-manager-1.0.0\profiles\$1
    File /r /x .svn ..\standalone\patch\profiles\*
  
    Goto appNameFileReadLoop
        
    appNameDone:
    ClearErrors
    FileClose $0    
  
    SetOutPath $INSTDIR
    
    WriteRegStr HKLM "${REGKEY}\Components" Manager $ManagerVersion  
  ${Else}
    DetailPrint "Manager is already up to date"  
  ${EndIf}    
FunctionEnd

Function patchInstallerStage
  ################################################################################
  # Copy over the jdk
  ################################################################################

  !insertmacro MUI_HEADER_TEXT "Patching Java" "Patching Java"
  
  # Before we start, check the versions to make sure this is actually a patch.  
  ReadRegStr $0 HKLM "${REGKEY}\Components" Java
  ${If} $JavaVersion > $0    
  
    # Remove the existing java install
    RMDir /r $INSTDIR\Java
  
    # Copy over the new java install
    SetOutPath $INSTDIR\Java
    File /r /x .svn ..\installer-stage\Java\*
  
    WriteRegStr HKLM "${REGKEY}\Components" Java $JavaVersion  

  ${Else}
    DetailPrint "Java is already up to date"  
  ${EndIf}    
  
  ################################################################################
  # Copy over the Birt
  ################################################################################

  !insertmacro MUI_HEADER_TEXT "Patching Birt" "Patching Birt"
  
  # Before we start, check the versions to make sure this is actually a patch.
  ReadRegStr $0 HKLM "${REGKEY}\Components" Birt
  ${If} $BirtVersion > $0    
    
	# Remove the existing birt install
	RMDir /r $INSTDIR\birt\configuration
	RMDir /r $INSTDIR\birt\p2
	RMDir /r $INSTDIR\birt\plugins
  
    # Copy over the new birt files
    SetOutPath $INSTDIR\birt
    File /r /x .svn ..\installer-stage\birt\*  
  
    WriteRegStr HKLM "${REGKEY}\Components" Birt $BirtVersion  
  ${Else}
    DetailPrint "Birt is already up to date"  
  ${EndIf}    
  
  ################################################################################
  # Copy over the webapps changes
  ################################################################################

  !insertmacro MUI_HEADER_TEXT "Patching Tomcat webapps" "Patching Tomcat webapps"
  
  # Before we start, check the versions to make sure this is actually a patch.
  ReadRegStr $0 HKLM "${REGKEY}\Components" Webapps
  ${If} $WebappsVersion > $0    
    # Delete the existing birt web app files
	RMDir /r $INSTDIR\tomcat6\webapps\birt\logs
	RMDir /r $INSTDIR\tomcat6\webapps\birt\report
	RMDir /r $INSTDIR\tomcat6\webapps\birt\scriptlib
	RMDir /r $INSTDIR\tomcat6\webapps\birt\webcontent
	RMDir /r $INSTDIR\tomcat6\webapps\birt\WEB-INF 
  
    # Copy over the new webapp files
    SetOutPath $INSTDIR\tomcat6\webapps
    File /r /x .svn /x .war ..\installer-stage\tomcat6\webapps\*  
  
    WriteRegStr HKLM "${REGKEY}\Components" Webapps $WebappsVersion  
  ${Else}
    DetailPrint "Webapps directory is already up to date"  
  ${EndIf}      
  
  ################################################################################
  # Copy over the tomcat conf files
  ################################################################################
  SetOutPath $INSTDIR\tomcat6\conf
  File /r /x .svn /x .war ..\installer-stage\tomcat6\conf\tomcat-users.xml  
  
  # Copy over the 64 bit tomcat service executable
  SetOutPath $INSTDIR\tomcat6\bin
  File /r /x .svn /x .war ..\installer-stage\tomcat6\bin\tomcat64.exe
  
  ################################################################################
  # Install tomcat as a service
  ################################################################################
  
  SimpleSC::ExistsService "Tomcat6"
  Pop $0
  
  ${If} $0 <> 0        
    # Install tomcat as a service  
    LogEx::Write "Configuring Tomcat as a service"
    ExecWait `$TomcatExec //IS//Tomcat6 --DisplayName="DDMS"  --Install="$TomcatExec" --Jvm=$JavaHome\jre\bin\server\jvm.dll --StartMode=jvm --StopMode=jvm --StartClass=org.apache.catalina.startup.Bootstrap --StartParams=start --StopClass=org.apache.catalina.startup.Bootstrap --StopParams=stop`
  LogEx::AddFile "   >" "$INSTDIR\ServiceSetup.log"
  
  # Update tomcat service parameters
    LogEx::Write "Update tomcat service parameters"
    ExecWait `$TomcatExec //US//Tomcat6 --Startup=manual --StartMode=jvm --StopMode=jvm --JavaHome=$JavaHome --Classpath="$JavaHome\lib\tools.jar;$INSTDIR\tomcat6\bin\bootstrap.jar" --JvmOptions="-Xmx$MaxMemM;-XX:MaxPermSize=$PermMemM;-Dfile.encoding=UTF8;-Djava.util.logging.config.file=$INSTDIR\tomcat6\conf\logging.properties;-Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager;-Djavax.rmi.ssl.client.enabledProtocols=TLSv1;-Djavax.rmi.ssl.client.enabledCipherSuites=SSL_RSA_WITH_RC4_128_MD5;-Djavax.net.ssl.trustStorePassword=1206b6579Acb3;-Djavax.net.ssl.trustStore=$INSTDIR\manager\keystore\ddms.ts;-Djavax.net.ssl.keyStorePassword=4b657920666fZ;-Djavax.net.ssl.keyStore=$INSTDIR\manager\keystore\ddms.ks;-Djava.endorsed.dirs=$INSTDIR\tomcat6\endorsed;-Dcatalina.base=$INSTDIR\tomcat6;-Dcatalina.home=$INSTDIR\tomcat6;-Djava.io.tmpdir=$INSTDIR\tomcat6\temp"`  
  LogEx::AddFile "   >" "$INSTDIR\ServiceSetup.log"    
  ${EndIf}
  
  # Update tomcat memory parameters
  LogEx::Write "Update tomcat memory parameters"
  ExecWait `$TomcatExec //US//Tomcat6 --JvmOptions="-Xmx$MaxMemM;-XX:MaxPermSize=$PermMemM;-Dfile.encoding=UTF8;-Djava.util.logging.config.file=$INSTDIR\tomcat6\conf\logging.properties;-Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager;-Djavax.rmi.ssl.client.enabledProtocols=TLSv1;-Djavax.rmi.ssl.client.enabledCipherSuites=SSL_RSA_WITH_RC4_128_MD5;-Djavax.net.ssl.trustStorePassword=1206b6579Acb3;-Djavax.net.ssl.trustStore=$INSTDIR\manager\keystore\ddms.ts;-Djavax.net.ssl.keyStorePassword=4b657920666fZ;-Djavax.net.ssl.keyStore=$INSTDIR\manager\keystore\ddms.ks;-Djava.endorsed.dirs=$INSTDIR\tomcat6\endorsed;-Dcatalina.base=$INSTDIR\tomcat6;-Dcatalina.home=$INSTDIR\tomcat6;-Djava.io.tmpdir=$INSTDIR\tomcat6\temp"`  
  LogEx::AddFile "   >" "$INSTDIR\ServiceSetup.log"    
FunctionEnd


Function JavaAbort
  ${If} $JavaError == 1
    ExecWait `"$PatchDir\7za.exe" a -t7z -mx9 $DESKTOP\PatchFailure.7z $PatchDir\output\*.err $PatchDir\output\*.out $INSTDIR\logs`
    DetailPrint "Patch failed."
    DetailPrint "A file called PatchFailure.7z has been created on your desktop. Please send"
    DetailPrint "this file to technical support staff for review."
    DetailPrint "It is strongly recommended to restore from a backup to ensure that the app continues"
    Abort "to function properly."
  ${EndIf}
FunctionEnd

Function DeleteFoldersWithExclusion
 Exch $R0 ; exclude dir
 Exch
 Exch $R1 ; route dir
 Push $R2
 Push $R3
 
 
  ClearErrors
  FindFirst $R3 $R2 "$R1\*.*"
 
 
  Top:
   StrCmp $R2 "." Next
   StrCmp $R2 ".." Next
   
   ${StrContains} $0 $R2 $R0
   StrCmp $0 "" Exit
   
   IfFileExists "$R1\$R2\*.*" Jump DeleteFile
 
   Jump:
    Push '$R1\$R2'
    Push '$R0'
    Call DeleteFoldersWithExclusion
 
    Push "$R1\$R2" 
    Call isEmptyDir
    Pop $0    
    StrCmp $0 1 RmD Next
 
   RmD:
    RMDir /r $R1\$R2
    Goto Next
 
   DeleteFile:
    Delete '$R1\$R2'
 
   Next:
    ClearErrors
    FindNext $R3 $R2
    IfErrors Exit
   Goto Top
 
  Exit:
  FindClose $R3
 
 Pop $R3
 Pop $R2
 Pop $R1
 Pop $R0
 
FunctionEnd
 
 
Function isEmptyDir
  # Stack ->                    # Stack: <directory>
  Exch $0                       # Stack: $0
  Push $1                       # Stack: $1, $0
  FindFirst $0 $1 "$0\*.*"
  strcmp $1 "." 0 _notempty
    FindNext $0 $1
    strcmp $1 ".." 0 _notempty
      ClearErrors
      FindNext $0 $1
      IfErrors 0 _notempty
        FindClose $0
        Pop $1                  # Stack: $0
        StrCpy $0 1
        Exch $0                 # Stack: 1 (true)
        goto _end
     _notempty:
       FindClose $0
       Pop $1                   # Stack: $0
       StrCpy $0 0
       Exch $0                  # Stack: 0 (false)
  _end:
FunctionEnd


Function AdvReplaceInFile
Exch $0 ;file to replace in
Exch
Exch $1 ;number to replace after
Exch
Exch 2
Exch $2 ;replace and onwards
Exch 2
Exch 3
Exch $3 ;replace with
Exch 3
Exch 4
Exch $4 ;to replace
Exch 4
Push $5 ;minus count
Push $6 ;universal
Push $7 ;end string
Push $8 ;left string
Push $9 ;right string
Push $R0 ;file1
Push $R1 ;file2
Push $R2 ;read
Push $R3 ;universal
Push $R4 ;count (onwards)
Push $R5 ;count (after)
Push $R6 ;temp file name
 
  GetTempFileName $R6
  FileOpen $R1 $0 r ;file to search in
  FileOpen $R0 $R6 w ;temp file
   StrLen $R3 $4
   StrCpy $R4 -1
   StrCpy $R5 -1
 
loop_read:
 ClearErrors
 FileRead $R1 $R2 ;read line
 IfErrors exit
 
   StrCpy $5 0
   StrCpy $7 $R2
 
loop_filter:
   IntOp $5 $5 - 1
   StrCpy $6 $7 $R3 $5 ;search
   StrCmp $6 "" file_write1
   StrCmp $6 $4 0 loop_filter
 
StrCpy $8 $7 $5 ;left part
IntOp $6 $5 + $R3
IntCmp $6 0 is0 not0
is0:
StrCpy $9 ""
Goto done
not0:
StrCpy $9 $7 "" $6 ;right part
done:
StrCpy $7 $8$3$9 ;re-join
 
IntOp $R4 $R4 + 1
StrCmp $2 all loop_filter
StrCmp $R4 $2 0 file_write2
IntOp $R4 $R4 - 1
 
IntOp $R5 $R5 + 1
StrCmp $1 all loop_filter
StrCmp $R5 $1 0 file_write1
IntOp $R5 $R5 - 1
Goto file_write2
 
file_write1:
 FileWrite $R0 $7 ;write modified line
Goto loop_read
 
file_write2:
 FileWrite $R0 $R2 ;write unmodified line
Goto loop_read
 
exit:
  FileClose $R0
  FileClose $R1
 
   SetDetailsPrint none
  Delete $0
  Rename $R6 $0
  Delete $R6
   SetDetailsPrint both
 
Pop $R6
Pop $R5
Pop $R4
Pop $R3
Pop $R2
Pop $R1
Pop $R0
Pop $9
Pop $8
Pop $7
Pop $6
Pop $5
;These values are stored in the stack in the reverse order they were pushed
Pop $0
Pop $1
Pop $2
Pop $3
Pop $4
FunctionEnd


Function StrTrimNewLines
/*After this point:
  ------------------------------------------
  $R0 = String (input)
  $R1 = TrimCounter (temp)
  $R2 = Temp (temp)*/
 
  ;Get input from user
  Exch $R0
  Push $R1
  Push $R2
 
  ;Initialize trim counter
  StrCpy $R1 0
 
  loop:
  ;Subtract to get "String"'s last characters
  IntOp $R1 $R1 - 1
 
  ;Verify if they are either $\r or $\n
  StrCpy $R2 $R0 1 $R1
  ${If} $R2 == `$\r`
  ${OrIf} $R2 == `$\n`
    Goto loop
  ${EndIf}
 
  ;Trim characters (if needed)
  IntOp $R1 $R1 + 1
  ${If} $R1 < 0
    StrCpy $R0 $R0 $R1
  ${EndIf}
 
/*After this point:
  ------------------------------------------
  $R0 = ResultVar (output)*/
 
  ;Return output to user
  Pop $R2
  Pop $R1
  Exch $R0
FunctionEnd

Section -post SEC0001
    Delete $INSTDIR\uninstall.exe
    WriteUninstaller $INSTDIR\uninstall.exe
SectionEnd

# Installer functions
Function .onInit
  InitPluginsDir

  # Initialize the value of the text string
  StrCpy $ExtraOpts ""
  
  # Read the command-line parameters
  ${GetParameters} $Params
  # Check for the presence of the -master flag
  ${GetOptions} "$Params" "-opts=" $R0
 
  IfErrors optsDone copyOpts
    copyOpts:
      StrCpy $ExtraOpts $R0
    optsDone:
      ClearErrors
FunctionEnd

# Macro for selecting uninstaller sections
!macro SELECT_UNSECTION SECTION_NAME UNSECTION_ID
    Push $R0
    ReadRegStr $R0 HKLM "${REGKEY}\Components" "${SECTION_NAME}"
    StrCmp $R0 1 0 next${UNSECTION_ID}
    !insertmacro SelectSection "${UNSECTION_ID}"
    GoTo done${UNSECTION_ID}
next${UNSECTION_ID}:
    !insertmacro UnselectSection "${UNSECTION_ID}"
done${UNSECTION_ID}:
    Pop $R0
!macroend

# Uninstaller sections
Section /o -un.Main UNSEC0000

    SimpleSC::ServiceIsRunning "Tomcat6"
  Pop $0 ; returns an errorcode (<>0) otherwise success (0)
  Pop $1 ; returns 1 (service is running) - returns 0 (service is not running)
  
  ${If} $1 <> 0  
  
    # Try to stop the service
      SimpleSC::StopService "Tomcat6" 1 60
    Pop $0 ; returns an errorcode (<>0) otherwise success (0)
    
    ${If} $0 <> 0        
        MessageBox MB_OK|MB_ICONSTOP "Unable to stop the DDMS service.  The DDMS service must be stopped before DDMS can be uninstalled"
        Abort
    ${EndIf}
    
  ${EndIf}


    # Determine the location of java home.  
    ${IfNot} ${RunningX64}
      StrCpy $TomcatExec $INSTDIR\tomcat6\bin\tomcat6.exe    
    ${Else}
      StrCpy $TomcatExec $INSTDIR\tomcat6\bin\tomcat64.exe        
    ${EndIf}

    CreateDirectory $DESKTOP\temp_uninstall_files
    CopyFiles $INSTDIR\PostgreSQL\9.1\uninstall*.exe $DESKTOP\temp_uninstall_files
  
  ################################################################################
  # Uninstall the tomcat service
  ################################################################################  
    SimpleSC::ExistsService "Tomcat6"
  Pop $0
  
    ${If} $0 == 0        
      # Service exists, we need to delete it  
      LogEx::Write "Deleting tomcat service"
      ExecWait `$TomcatExec //DS//Tomcat6`
    ${EndIf}
  
    DeleteRegValue HKLM "${REGKEY}\Components" Main
    DeleteRegValue HKLM "${REGKEY}\Components\$AppName" App
    DeleteRegValue HKLM "${REGKEY}\Components\$AppName" Terms
    DeleteRegValue HKLM "${REGKEY}\Components\$AppName" Roots
    DeleteRegValue HKLM "${REGKEY}\Components\$AppName" Menu
    DeleteRegValue HKLM "${REGKEY}\Components\$AppName" Localization
    DeleteRegValue HKLM "${REGKEY}\Components\$AppName" Permissions
    DeleteRegValue HKLM "${REGKEY}\Components" Manager
    DeleteRegValue HKLM "${REGKEY}\Components" Java 
    DeleteRegValue HKLM "${REGKEY}\Components" Birt 
    DeleteRegValue HKLM "${REGKEY}\Components" Webapps
    DeleteRegValue HKLM "${REGKEY}\Components" Runway
    ExecWait `"$DESKTOP\temp_uninstall_files\uninstall-postgis-pg91-1.5.3-2.exe" /S`
    ExecWait `"$DESKTOP\temp_uninstall_files\uninstall-postgresql.exe" --mode unattended`
    RmDir /r /REBOOTOK $DESKTOP\temp_uninstall_files
    RmDir /r /REBOOTOK "$INSTDIR\PostgreSql"
    RmDir /r /REBOOTOK $INSTDIR
    UserMgr::DeleteAccount "ddmspostgres"
SectionEnd

Section -un.post UNSEC0001
    DeleteRegKey HKLM "SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\$(^Name)"
    Delete /REBOOTOK "$SMPROGRAMS\DDMS\Open $AppName.lnk"
    Delete /REBOOTOK "$SMPROGRAMS\DDMS\BIRT.lnk"
    Delete /REBOOTOK "$SMPROGRAMS\DDMS\Qcal.lnk"
    Delete /REBOOTOK "$SMPROGRAMS\DDMS\Manager.lnk"
    Delete /REBOOTOK "$SMPROGRAMS\DDMS\Uninstall $(^Name).lnk"
    Delete /REBOOTOK $INSTDIR\uninstall.exe
    DeleteRegValue HKLM "${REGKEY}" StartMenuGroup
    DeleteRegValue HKLM "${REGKEY}" Path
    DeleteRegKey HKLM "${REGKEY}\Components"
    DeleteRegKey HKLM "${REGKEY}"
    SetShellVarContext all
    RmDir /r /REBOOTOK $SMPROGRAMS\DDMS
    RmDir /r /REBOOTOK "$INSTDIR\PostgreSql"
SectionEnd

# Uninstaller functions
Function un.onInit
    ReadRegStr $INSTDIR HKLM "${REGKEY}" Path
    !insertmacro SELECT_UNSECTION Main ${UNSEC0000}
  SetRebootFlag true
FunctionEnd

