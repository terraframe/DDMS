# Auto-generated by EclipseNSIS Script Wizard
# Feb 10, 2011 10:10:22 AM

Name "DDMS"

RequestExecutionLevel highest

# General Symbol Definitions
!define REGKEY "SOFTWARE\$(^Name)"
!define VERSION 1.0.0
!define COMPANY "Innovative Vector Control Consortium"
!define URL "http://www.ivcc.com/"

# MUI Symbol Definitions
!define MUI_ICON "${NSISDIR}\Contrib\Graphics\Icons\modern-install-colorful.ico"
!define MUI_FINISHPAGE_NOAUTOCLOSE

# Included files
!include Sections.nsh
!include MUI2.nsh
!include nsDialogs.nsh
!include LogicLib.nsh
!include FileFunc.nsh

# Define access to the StrTrimNewLines function
!macro StrTrimNewLines ResultVar String
  Push "${String}"
  Call StrTrimNewLines
  Pop "${ResultVar}"
!macroend
!define StrTrimNewLines "!insertmacro StrTrimNewLines"

# Variables
Var Java
Var JavaOpts
Var JavaError
Var Classpath
Var PatchDir
Var AgentDir
Var AppName
Var TargetLoc
Var ManagerLibDir
Var RunwayVersion
Var ManagerVersion

# Installer pages
!insertmacro MUI_PAGE_WELCOME
!insertmacro MUI_PAGE_INSTFILES
!insertmacro MUI_PAGE_FINISH

# Installer languages
!insertmacro MUI_LANGUAGE English

# Installer attributes
OutFile manager-patch.exe
InstallDir C:\MDSS
CRCCheck on
XPStyle on
ShowInstDetails show
VIProductVersion 3.1.0.0
VIAddVersionKey ProductName "Runway"
VIAddVersionKey ProductVersion "${VERSION}"
VIAddVersionKey CompanyName "${COMPANY}"
VIAddVersionKey CompanyWebsite "${URL}"
VIAddVersionKey FileVersion "${VERSION}"
VIAddVersionKey FileDescription ""
VIAddVersionKey LegalCopyright ""

# Installer sections
Section -Main SEC0000
    SetOutPath $INSTDIR
    SetOverwrite on
	
    # The version numbers are automatically replaced by all-in-one-patch.xml
    StrCpy $RunwayVersion 6847
    StrCpy $ManagerVersion 6846
    
    # Set some constants
    StrCpy $PatchDir "$INSTDIR\runway_patch"
    StrCpy $AgentDir "$PatchDir\output"
    StrCpy $JavaOpts "-Xmx1024m -javaagent:$PatchDir\OutputAgent.jar"
    StrCpy $Java "$INSTDIR\Java\jdk1.6.0_16\bin\javaw.exe"
    StrCpy $ManagerLibDir "$INSTDIR\manager\backup-manager-1.0.0\lib"	
	
	#####################################################################
	# First we must patch any runway metadata changes for all of the apps
	#####################################################################
	Call patchAllMetadata

	#####################################################################
	# Next we must patch the manager jars and associated files
	#####################################################################
    Call patchManager
    
SectionEnd

Function patchAllMetadata
  !insertmacro MUI_HEADER_TEXT "Patching Runway" "Copying patch files"
  SetOutPath $PatchDir
  File ..\ddms-runway-patcher\OutputAgent.jar
  File ..\ddms-runway-patcher\7za.exe
  File ..\ddms-runway-patcher\lib\runway-patcher-1.0.0.jar

  ClearErrors
  FileOpen $0 $INSTDIR\manager\manager-1.0.0\classes\applications.txt r
      
  appNameFileReadLoop:
  # Read a line from the file into $1
  FileRead $0 $1
      
  # Errors means end of File
  IfErrors appNameDone
      
  # Removes the newline from the end of $1
  ${StrTrimNewLines} $1 $1
    
  Push $1
      
  Call patchMetadata
    
  Goto appNameFileReadLoop
          
  appNameDone:
  ClearErrors
  FileClose $0
      
  # Remove libs
  Delete $PatchDir\*
FunctionEnd


Function patchMetadata
  Pop $AppName  
  
  ReadRegStr $0 HKLM "${REGKEY}\Components\$AppName" RunwayVersion  
  ${If} $RunwayVersion > $0
    StrCpy $TargetLoc "$INSTDIR\tomcat6\webapps\$AppName\WEB-INF"    
    StrCpy $Classpath "$INSTDIR\tomcat6\webapps\$AppName\WEB-INF\classes;$INSTDIR\tomcat6\webapps\$AppName\WEB-INF\lib\*"
  
    # Execute patch
    !insertmacro MUI_HEADER_TEXT "Patching Runway" "Patching $AppName..."
    ExecWait `$Java $JavaOpts=$AgentDir -cp $Classpath -jar $PatchDir\runway-patcher-1.0.0.jar $TargetLoc\classes\database.properties $TargetLoc\lib` $JavaError
    Call JavaAbort
  
    # We need to clear the old cache
    Delete $INSTDIR\tomcat6\$AppName.index
    Delete $INSTDIR\tomcat6\$AppName.data
  
    # Build any dimensional metadata with the Master domain
    !insertmacro MUI_HEADER_TEXT "Patching Runway" "Building dimensional metadata for $AppName..."
    ExecWait `$Java $JavaOpts=$AgentDir -cp $Classpath com.runwaysdk.dataaccess.ClassAndAttributeDimensionBuilder 0.mdss.ivcc.com` $JavaError
    Call JavaAbort

    # Build any dimensional metadata with the Master domain
    !insertmacro MUI_HEADER_TEXT "Patching Runway" "Recompiling $AppName..."
    ExecWait `$Java $JavaOpts=$AgentDir -cp $Classpath  com.runwaysdk.util.UpdateDatabaseSourceAndClasses -compile` $JavaError
    Call JavaAbort  
  
    WriteRegStr HKLM "${REGKEY}\Components\$AppName" RunwayVersion $RunwayVersion
  ${Else}
    DetailPrint "Runway metadata for application $AppName is already up to date"
  ${EndIf}          
FunctionEnd

Function patchManager
  # Before we start, check the versions to make sure this is actually a patch.
  ReadRegStr $0 HKLM "${REGKEY}\Components" Manager
  ${If} $ManagerVersion > $0    
    SetOutPath $INSTDIR
    File ..\standalone\patch\manager.bat
    File ..\standalone\patch\manager.ico	
    SetOutPath $INSTDIR\backup-manager-1.0.0
    SetOutPath $INSTDIR\ddms-initializer-1.0.0
    File /r /x .svn ..\standalone\ddms-initializer-1.0.0\*
    SetOutPath $INSTDIR\geo-manager-1.0.0
    File /r /x .svn ..\standalone\geo-manager-1.0.0\*
    SetOutPath $INSTDIR\manager-1.0.0
    File /r /x .svn /x *applications.txt ..\standalone\manager-1.0.0\*
    SetOutPath $INSTDIR\synch-manager-1.0.0
    File /r /x .svn ..\standalone\synch-manager-1.0.0\*
    SetOutPath $INSTDIR\keystore
    File /r /x .svn ..\standalone\doc\keystore\*
    	
    ################################################################################
    # Copy any updated runway properties to all of the backedup profile directories
    ################################################################################
    ClearErrors
    FileOpen $0 $INSTDIR\manager-1.0.0\classes\applications.txt r
    
    appNameFileReadLoop:
    # Read a line from the file into $1
    FileRead $0 $1
    
    # Errors means end of File
    IfErrors appNameDone
    
    # Removes the newline from the end of $1
    ${StrTrimNewLines} $1 $1
    
    # Copy over updated runway properties
    SetOutPath $INSTDIR\backup-manager-1.0.0\profiles\$1
    File /r /x .svn ..\standalone\patch\profiles\*
  
    Goto appNameFileReadLoop
        
    appNameDone:
    ClearErrors
    FileClose $0    
	
    SetOutPath $INSTDIR
    
    WriteRegStr HKLM "${REGKEY}\Components" Manager $ManagerVersion  
  ${Else}
    DetailPrint "Manager is already up to date"	
  ${EndIf}
    
FunctionEnd


Function JavaAbort
    ${If} $JavaError == 1
      ExecWait `"$PatchDir\7za.exe" a -t7z -mx9 $DESKTOP\RunwayPatchFailure.7z $PatchDir\*.err $PatchDir\*.out $INSTDIR\logs`
      DetailPrint "Runway Patch failed."
      DetailPrint "A file called RunwayPatchFailure.7z has been created on your desktop. Please send"
      DetailPrint "this file to technical support staff for review."
      DetailPrint "It is strongly recommended to restore from a backup to ensure that the app continues"
      Abort "to function properly."
    ${EndIf}
FunctionEnd

Function StrTrimNewLines
/*After this point:
  ------------------------------------------
  $R0 = String (input)
  $R1 = TrimCounter (temp)
  $R2 = Temp (temp)*/
 
  ;Get input from user
  Exch $R0
  Push $R1
  Push $R2
 
  ;Initialize trim counter
  StrCpy $R1 0
 
  loop:
  ;Subtract to get "String"'s last characters
  IntOp $R1 $R1 - 1
 
  ;Verify if they are either $\r or $\n
  StrCpy $R2 $R0 1 $R1
  ${If} $R2 == `$\r`
  ${OrIf} $R2 == `$\n`
    Goto loop
  ${EndIf}
 
  ;Trim characters (if needed)
  IntOp $R1 $R1 + 1
  ${If} $R1 < 0
    StrCpy $R0 $R0 $R1
  ${EndIf}
 
/*After this point:
  ------------------------------------------
  $R0 = ResultVar (output)*/
 
  ;Return output to user
  Pop $R2
  Pop $R1
  Exch $R0
FunctionEnd

# Installer functions
Function .onInit
    InitPluginsDir
FunctionEnd

