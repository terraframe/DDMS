package org.obofoundry;

/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to IsA.java
 *
 * @author Autogenerated by TerraFrame
 */
public  class IsAQuery extends org.obofoundry.OBORelationshipQuery implements com.terraframe.mojo.generation.loader.Reloadable
{
private static final long serialVersionUID = 1229530369012L;

  public IsAQuery(com.terraframe.mojo.query.QueryFactory componentQueryFactory)
  {
     super(componentQueryFactory);
    if (this.getComponentQuery() == null)
    {
      com.terraframe.mojo.business.RelationshipQuery relationshipQuery = componentQueryFactory.relationshipQuery(this.getClassType());

       this.setRelationshipQuery(relationshipQuery);
    }
  }

  public String getClassType()
  {
    return "org.obofoundry.IsA";
  }
  /**
   * Restricts the query to include objects that are children in this relationship.
   * @param componentQuery
   * @return Condition restricting objects that are children in this relationship.
   */
   public com.terraframe.mojo.query.Condition hasChild(org.obofoundry.ComponentQuery componentQuery)
   {
     return this.getRelationshipQuery().hasChild(componentQuery);
   }
  /**
   * Restricts the query to include objects that are children in this relationship.
   * @param componentQuery
   * @return Condition restricting objects that are children in this relationship.
   */
   public com.terraframe.mojo.query.Condition doesNotHaveChild(org.obofoundry.ComponentQuery componentQuery)
   {
     return this.getRelationshipQuery().doesNotHaveChild(componentQuery);
   }
  /**
   * Restricts the query to include objects that are parents in this relationship.
   * @param componentQuery
   * @return Condition restricting objects that are parents in this relationship.
   */
   public com.terraframe.mojo.query.Condition hasParent(org.obofoundry.ComponentQuery componentQuery)
   {
     return this.getRelationshipQuery().hasParent(componentQuery);
   }
  /**
   * Restricts the query to include objects that are parents in this relationship.
   * @param componentQuery
   * @return Condition restricting objects that are parents in this relationship.
   */
   public com.terraframe.mojo.query.Condition doesNotHaveParent(org.obofoundry.ComponentQuery componentQuery)
   {
     return this.getRelationshipQuery().doesNotHaveParent(componentQuery);
   }
  /**  
   * Returns an iterator of Business objects that match the query criteria specified
   * on this query object. 
   * @return iterator of Business objects that match the query criteria specified
   * on this query object.
   */
  public com.terraframe.mojo.query.OIterator<? extends IsA> getIterator()
  {
    String sqlStmt;
    if (_limit != null && _skip != null)
    {
      sqlStmt = this.getComponentQuery().getSQL(_limit, _skip);
    }
    else
    {
      sqlStmt = this.getComponentQuery().getSQL();
    }
    java.util.Map<String, com.terraframe.mojo.query.ColumnInfo> columnInfoMap = this.getComponentQuery().getColumnInfoMap();

    java.sql.ResultSet results = com.terraframe.mojo.dataaccess.database.Database.selectEntityAttributes(sqlStmt);
    return new com.terraframe.mojo.business.RelationshipIterator<IsA>(this.getComponentQuery().getMdEntityIF(), this.getRelationshipQuery(), columnInfoMap, results);
  }

}
