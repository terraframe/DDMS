package org.obofoundry;

/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to Typedef.java
 *
 * @author Autogenerated by TerraFrame
 */
public  class TypedefQuery extends org.obofoundry.ComponentQuery
 implements com.terraframe.mojo.generation.loader.Reloadable
{
private static final long serialVersionUID = 1229530369104L;

  public TypedefQuery(com.terraframe.mojo.query.QueryFactory componentQueryFactory)
  {
    super(componentQueryFactory);
    if (this.getComponentQuery() == null)
    {
      com.terraframe.mojo.business.BusinessQuery businessQuery = componentQueryFactory.businessQuery(this.getClassType());

       this.setBusinessQuery(businessQuery);
    }
  }

  public String getClassType()
  {
    return "org.obofoundry.Typedef";
  }
  public com.terraframe.mojo.query.AttributeBooleanIF getIsAntiSymmetric()
  {
    return getIsAntiSymmetric(null);

  }
 
  public com.terraframe.mojo.query.AttributeBooleanIF getIsAntiSymmetric(String alias)
  {
    return (com.terraframe.mojo.query.AttributeBooleanIF)this.getComponentQuery().attributeFactory(org.obofoundry.Typedef.ISANTISYMMETRIC, "com.terraframe.mojo.system.metadata.MdAttributeBoolean", alias);

  }
  public com.terraframe.mojo.system.metadata.MdRelationshipQuery.MdRelationshipQueryReferenceIF getMdRelationship()
  {
    return getMdRelationship(null);

  }
 
  public com.terraframe.mojo.system.metadata.MdRelationshipQuery.MdRelationshipQueryReferenceIF getMdRelationship(String alias)
  {

    com.terraframe.mojo.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap("mdRelationship");

    return (com.terraframe.mojo.system.metadata.MdRelationshipQuery.MdRelationshipQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(org.obofoundry.Typedef.MDRELATIONSHIP, mdAttributeIF, this, alias);

  }
  public org.obofoundry.TypedefQuery.TypedefQueryReferenceIF getInverseof()
  {
    return getInverseof(null);

  }
 
  public org.obofoundry.TypedefQuery.TypedefQueryReferenceIF getInverseof(String alias)
  {

    com.terraframe.mojo.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap("inverseof");

    return (org.obofoundry.TypedefQuery.TypedefQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(org.obofoundry.Typedef.INVERSEOF, mdAttributeIF, this, alias);

  }
  public com.terraframe.mojo.query.AttributeBooleanIF getIsParent()
  {
    return getIsParent(null);

  }
 
  public com.terraframe.mojo.query.AttributeBooleanIF getIsParent(String alias)
  {
    return (com.terraframe.mojo.query.AttributeBooleanIF)this.getComponentQuery().attributeFactory(org.obofoundry.Typedef.ISPARENT, "com.terraframe.mojo.system.metadata.MdAttributeBoolean", alias);

  }
  public com.terraframe.mojo.query.AttributeBooleanIF getIsReflexive()
  {
    return getIsReflexive(null);

  }
 
  public com.terraframe.mojo.query.AttributeBooleanIF getIsReflexive(String alias)
  {
    return (com.terraframe.mojo.query.AttributeBooleanIF)this.getComponentQuery().attributeFactory(org.obofoundry.Typedef.ISREFLEXIVE, "com.terraframe.mojo.system.metadata.MdAttributeBoolean", alias);

  }
  public com.terraframe.mojo.query.AttributeBooleanIF getIsChild()
  {
    return getIsChild(null);

  }
 
  public com.terraframe.mojo.query.AttributeBooleanIF getIsChild(String alias)
  {
    return (com.terraframe.mojo.query.AttributeBooleanIF)this.getComponentQuery().attributeFactory(org.obofoundry.Typedef.ISCHILD, "com.terraframe.mojo.system.metadata.MdAttributeBoolean", alias);

  }
  public com.terraframe.mojo.query.AttributeBooleanIF getIsTransitive()
  {
    return getIsTransitive(null);

  }
 
  public com.terraframe.mojo.query.AttributeBooleanIF getIsTransitive(String alias)
  {
    return (com.terraframe.mojo.query.AttributeBooleanIF)this.getComponentQuery().attributeFactory(org.obofoundry.Typedef.ISTRANSITIVE, "com.terraframe.mojo.system.metadata.MdAttributeBoolean", alias);

  }
  protected com.terraframe.mojo.query.AttributeReference referenceFactory( com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  com.terraframe.mojo.dataaccess.MdBusinessDAOIF referenceMdBusinessIF, String referenceTableAlias, com.terraframe.mojo.query.ComponentQuery rootQuery, java.util.Set<com.terraframe.mojo.query.Join> tableJoinSet, String userDefinedAlias)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals("mdRelationship")) 
    {
       return new com.terraframe.mojo.system.metadata.MdRelationshipQuery.MdRelationshipQueryReference((com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias);
    }
    else if (name.equals("inverseof")) 
    {
       return new org.obofoundry.TypedefQuery.TypedefQueryReference((com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias);
    }
    else 
    {
      return super.referenceFactory(mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias);
    }
  }

  /**  
   * Returns an iterator of Business objects that match the query criteria specified
   * on this query object. 
   * @return iterator of Business objects that match the query criteria specified
   * on this query object.
   */
  public com.terraframe.mojo.query.OIterator<? extends Typedef> getIterator()
  {
    String sqlStmt;
    if (_limit != null && _skip != null)
    {
      sqlStmt = this.getComponentQuery().getSQL(_limit, _skip);
    }
    else
    {
      sqlStmt = this.getComponentQuery().getSQL();
    }
    java.util.Map<String, com.terraframe.mojo.query.ColumnInfo> columnInfoMap = this.getComponentQuery().getColumnInfoMap();

    java.sql.ResultSet results = com.terraframe.mojo.dataaccess.database.Database.selectEntityAttributes(sqlStmt);
    return new com.terraframe.mojo.business.BusinessIterator<Typedef>(this.getComponentQuery().getMdEntityIF(), columnInfoMap, results);
  }


/**
 * Interface that masks all type unsafe query methods and defines all type safe methods.
 * This type is used when a join is performed on this class as a reference.
 **/
  public interface TypedefQueryReferenceIF extends com.terraframe.mojo.generation.loader.Reloadable, org.obofoundry.ComponentQuery.ComponentQueryReferenceIF
  {

    public com.terraframe.mojo.query.AttributeBooleanIF getIsAntiSymmetric();
    public com.terraframe.mojo.query.AttributeBooleanIF getIsAntiSymmetric(String alias);
    public com.terraframe.mojo.system.metadata.MdRelationshipQuery.MdRelationshipQueryReferenceIF getMdRelationship();
    public com.terraframe.mojo.system.metadata.MdRelationshipQuery.MdRelationshipQueryReferenceIF getMdRelationship(String alias);
    public org.obofoundry.TypedefQuery.TypedefQueryReferenceIF getInverseof();
    public org.obofoundry.TypedefQuery.TypedefQueryReferenceIF getInverseof(String alias);
    public com.terraframe.mojo.query.AttributeBooleanIF getIsParent();
    public com.terraframe.mojo.query.AttributeBooleanIF getIsParent(String alias);
    public com.terraframe.mojo.query.AttributeBooleanIF getIsReflexive();
    public com.terraframe.mojo.query.AttributeBooleanIF getIsReflexive(String alias);
    public com.terraframe.mojo.query.AttributeBooleanIF getIsChild();
    public com.terraframe.mojo.query.AttributeBooleanIF getIsChild(String alias);
    public com.terraframe.mojo.query.AttributeBooleanIF getIsTransitive();
    public com.terraframe.mojo.query.AttributeBooleanIF getIsTransitive(String alias);

    public com.terraframe.mojo.query.BasicCondition EQ(org.obofoundry.Typedef typedef);

    public com.terraframe.mojo.query.BasicCondition NE(org.obofoundry.Typedef typedef);

  }

/**
 * Implements type safe query methods.
 * This type is used when a join is performed on this class as a reference.
 **/
  public static class TypedefQueryReference extends org.obofoundry.ComponentQuery.ComponentQueryReference
 implements TypedefQueryReferenceIF
, com.terraframe.mojo.generation.loader.Reloadable
  {
private static final long serialVersionUID = 1229530369134L;

  public TypedefQueryReference(com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias, com.terraframe.mojo.dataaccess.MdBusinessDAOIF referenceMdBusinessIF, String referenceTableAlias, com.terraframe.mojo.query.ComponentQuery rootQuery, java.util.Set<com.terraframe.mojo.query.Join> tableJoinSet, String alias)
  {
    super(mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, alias);

  }


    public com.terraframe.mojo.query.BasicCondition EQ(org.obofoundry.Typedef typedef)
    {
      return this.EQ(typedef.getId());
    }

    public com.terraframe.mojo.query.BasicCondition NE(org.obofoundry.Typedef typedef)
    {
      return this.NE(typedef.getId());
    }

  public com.terraframe.mojo.query.AttributeBooleanIF getIsAntiSymmetric()
  {
    return getIsAntiSymmetric(null);

  }
 
  public com.terraframe.mojo.query.AttributeBooleanIF getIsAntiSymmetric(String alias)
  {
    return (com.terraframe.mojo.query.AttributeBooleanIF)this.attributeFactory("isAntiSymmetric", "com.terraframe.mojo.system.metadata.MdAttributeBoolean", alias);

  }
  public com.terraframe.mojo.system.metadata.MdRelationshipQuery.MdRelationshipQueryReferenceIF getMdRelationship()
  {
    return getMdRelationship(null);

  }
 
  public com.terraframe.mojo.system.metadata.MdRelationshipQuery.MdRelationshipQueryReferenceIF getMdRelationship(String alias)
  {
    return (com.terraframe.mojo.system.metadata.MdRelationshipQuery.MdRelationshipQueryReferenceIF)this.attributeFactory("mdRelationship", "com.terraframe.mojo.system.metadata.MdAttributeReference", alias);

  }
  public org.obofoundry.TypedefQuery.TypedefQueryReferenceIF getInverseof()
  {
    return getInverseof(null);

  }
 
  public org.obofoundry.TypedefQuery.TypedefQueryReferenceIF getInverseof(String alias)
  {
    return (org.obofoundry.TypedefQuery.TypedefQueryReferenceIF)this.attributeFactory("inverseof", "com.terraframe.mojo.system.metadata.MdAttributeReference", alias);

  }
  public com.terraframe.mojo.query.AttributeBooleanIF getIsParent()
  {
    return getIsParent(null);

  }
 
  public com.terraframe.mojo.query.AttributeBooleanIF getIsParent(String alias)
  {
    return (com.terraframe.mojo.query.AttributeBooleanIF)this.attributeFactory("isParent", "com.terraframe.mojo.system.metadata.MdAttributeBoolean", alias);

  }
  public com.terraframe.mojo.query.AttributeBooleanIF getIsReflexive()
  {
    return getIsReflexive(null);

  }
 
  public com.terraframe.mojo.query.AttributeBooleanIF getIsReflexive(String alias)
  {
    return (com.terraframe.mojo.query.AttributeBooleanIF)this.attributeFactory("isReflexive", "com.terraframe.mojo.system.metadata.MdAttributeBoolean", alias);

  }
  public com.terraframe.mojo.query.AttributeBooleanIF getIsChild()
  {
    return getIsChild(null);

  }
 
  public com.terraframe.mojo.query.AttributeBooleanIF getIsChild(String alias)
  {
    return (com.terraframe.mojo.query.AttributeBooleanIF)this.attributeFactory("isChild", "com.terraframe.mojo.system.metadata.MdAttributeBoolean", alias);

  }
  public com.terraframe.mojo.query.AttributeBooleanIF getIsTransitive()
  {
    return getIsTransitive(null);

  }
 
  public com.terraframe.mojo.query.AttributeBooleanIF getIsTransitive(String alias)
  {
    return (com.terraframe.mojo.query.AttributeBooleanIF)this.attributeFactory("isTransitive", "com.terraframe.mojo.system.metadata.MdAttributeBoolean", alias);

  }
  protected com.terraframe.mojo.query.AttributeReference referenceFactory( com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  com.terraframe.mojo.dataaccess.MdBusinessDAOIF referenceMdBusinessIF, String referenceTableAlias, com.terraframe.mojo.query.ComponentQuery rootQuery, java.util.Set<com.terraframe.mojo.query.Join> tableJoinSet, String userDefinedAlias)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals("mdRelationship")) 
    {
       return new com.terraframe.mojo.system.metadata.MdRelationshipQuery.MdRelationshipQueryReference((com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias);
    }
    else if (name.equals("inverseof")) 
    {
       return new org.obofoundry.TypedefQuery.TypedefQueryReference((com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias);
    }
    else 
    {
      return super.referenceFactory(mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias);
    }
  }

  }
}
