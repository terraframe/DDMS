package org.obofoundry;

/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to Component.java
 *
 * @author Autogenerated by TerraFrame
 */
public abstract class ComponentBase extends com.terraframe.mojo.business.Business implements com.terraframe.mojo.generation.loader.Reloadable
{
  public final static String CLASS = "org.obofoundry.Component";
  public static java.lang.String CREATEDATE = "createDate";
  public static java.lang.String LOCKEDBY = "lockedBy";
  public static java.lang.String OBOID = "oboId";
  public static java.lang.String CREATEDBY = "createdBy";
  public static java.lang.String LASTUPDATEDATE = "lastUpdateDate";
  public static java.lang.String LASTUPDATEDBY = "lastUpdatedBy";
  public static java.lang.String SEQ = "seq";
  public static java.lang.String KEYNAME = "keyName";
  public static java.lang.String OWNER = "owner";
  public static java.lang.String DEF = "def";
  public static java.lang.String ENTITYDOMAIN = "entityDomain";
  public static java.lang.String ID = "id";
  public static java.lang.String COMPONENTNAME = "componentName";
  public static java.lang.String NAMESPACE = "nameSpace";
  public static java.lang.String SITEMASTER = "siteMaster";
  public static java.lang.String COMPONENTCOMMENT = "componentComment";
  public static java.lang.String TYPE = "type";
  private static final long serialVersionUID = 1229530368836L;
  
  public ComponentBase()
  {
    super();
  }
  
  public String getOboId()
  {
    return getValue(OBOID);
  }
  
  public void validateOboId()
  {
    this.validateAttribute(OBOID);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getOboIdMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(org.obofoundry.Component.CLASS);
    return mdClassIF.definesAttribute(OBOID);
  }
  
  public void setOboId(String value)
  {
    if(value == null)
    {
      setValue(OBOID, "");
    }
    else
    {
      setValue(OBOID, value);
    }
  }
  
  public com.terraframe.mojo.system.Actor getOwner()
  {
    try
    {
      return com.terraframe.mojo.system.Actor.get(getValue(OWNER));
    }
    catch (com.terraframe.mojo.dataaccess.cache.DataNotFoundException e)
    {
      return null;
    }
  }
  
  public void validateOwner()
  {
    this.validateAttribute(OWNER);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getOwnerMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(org.obofoundry.Component.CLASS);
    return mdClassIF.definesAttribute(OWNER);
  }
  
  public void setOwner(com.terraframe.mojo.system.Actor value)
  {
    if(value == null)
    {
      setValue(OWNER, "");
    }
    else
    {
      setValue(OWNER, value.getId());
    }
  }
  
  public String getDef()
  {
    return getValue(DEF);
  }
  
  public void validateDef()
  {
    this.validateAttribute(DEF);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getDefMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(org.obofoundry.Component.CLASS);
    return mdClassIF.definesAttribute(DEF);
  }
  
  public void setDef(String value)
  {
    if(value == null)
    {
      setValue(DEF, "");
    }
    else
    {
      setValue(DEF, value);
    }
  }
  
  public com.terraframe.mojo.system.metadata.MdDomain getEntityDomain()
  {
    try
    {
      return com.terraframe.mojo.system.metadata.MdDomain.get(getValue(ENTITYDOMAIN));
    }
    catch (com.terraframe.mojo.dataaccess.cache.DataNotFoundException e)
    {
      return null;
    }
  }
  
  public void validateEntityDomain()
  {
    this.validateAttribute(ENTITYDOMAIN);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getEntityDomainMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(org.obofoundry.Component.CLASS);
    return mdClassIF.definesAttribute(ENTITYDOMAIN);
  }
  
  public void setEntityDomain(com.terraframe.mojo.system.metadata.MdDomain value)
  {
    if(value == null)
    {
      setValue(ENTITYDOMAIN, "");
    }
    else
    {
      setValue(ENTITYDOMAIN, value.getId());
    }
  }
  
  public String getComponentName()
  {
    return getValue(COMPONENTNAME);
  }
  
  public void validateComponentName()
  {
    this.validateAttribute(COMPONENTNAME);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getComponentNameMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(org.obofoundry.Component.CLASS);
    return mdClassIF.definesAttribute(COMPONENTNAME);
  }
  
  public void setComponentName(String value)
  {
    if(value == null)
    {
      setValue(COMPONENTNAME, "");
    }
    else
    {
      setValue(COMPONENTNAME, value);
    }
  }
  
  public String getNameSpace()
  {
    return getValue(NAMESPACE);
  }
  
  public void validateNameSpace()
  {
    this.validateAttribute(NAMESPACE);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getNameSpaceMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(org.obofoundry.Component.CLASS);
    return mdClassIF.definesAttribute(NAMESPACE);
  }
  
  public void setNameSpace(String value)
  {
    if(value == null)
    {
      setValue(NAMESPACE, "");
    }
    else
    {
      setValue(NAMESPACE, value);
    }
  }
  
  public String getComponentComment()
  {
    return getValue(COMPONENTCOMMENT);
  }
  
  public void validateComponentComment()
  {
    this.validateAttribute(COMPONENTCOMMENT);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getComponentCommentMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(org.obofoundry.Component.CLASS);
    return mdClassIF.definesAttribute(COMPONENTCOMMENT);
  }
  
  public void setComponentComment(String value)
  {
    if(value == null)
    {
      setValue(COMPONENTCOMMENT, "");
    }
    else
    {
      setValue(COMPONENTCOMMENT, value);
    }
  }
  
  protected String getDeclaredType()
  {
    return CLASS;
  }
  
  public org.obofoundry.OBORelationship addChildRelationship(org.obofoundry.Component component)
  {
    return (org.obofoundry.OBORelationship) addChild(component, org.obofoundry.OBORelationship.CLASS);
  }
  
  public void removeChildRelationship(org.obofoundry.Component component)
  {
    removeAllChildren(component, org.obofoundry.OBORelationship.CLASS);
  }
  
  @SuppressWarnings("unchecked")
  public com.terraframe.mojo.query.OIterator<? extends org.obofoundry.Component> getAllChildRelationship()
  {
    return (com.terraframe.mojo.query.OIterator<? extends org.obofoundry.Component>) getChildren(org.obofoundry.OBORelationship.CLASS);
  }
  
  @SuppressWarnings("unchecked")
  public com.terraframe.mojo.query.OIterator<? extends org.obofoundry.OBORelationship> getAllChildRelationshipRel()
  {
    return (com.terraframe.mojo.query.OIterator<? extends org.obofoundry.OBORelationship>) getChildRelationships(org.obofoundry.OBORelationship.CLASS);
  }
  
  @SuppressWarnings("unchecked")
  public com.terraframe.mojo.query.OIterator<? extends org.obofoundry.OBORelationship> getChildRelationshipRel(org.obofoundry.Component component)
  {
    return (com.terraframe.mojo.query.OIterator<? extends org.obofoundry.OBORelationship>) getRelationshipsWithChild(component, org.obofoundry.OBORelationship.CLASS);
  }
  
  public org.obofoundry.IsA addIsASubClasses(org.obofoundry.Component component)
  {
    return (org.obofoundry.IsA) addChild(component, org.obofoundry.IsA.CLASS);
  }
  
  public void removeIsASubClasses(org.obofoundry.Component component)
  {
    removeAllChildren(component, org.obofoundry.IsA.CLASS);
  }
  
  @SuppressWarnings("unchecked")
  public com.terraframe.mojo.query.OIterator<? extends org.obofoundry.Component> getAllIsASubClasses()
  {
    return (com.terraframe.mojo.query.OIterator<? extends org.obofoundry.Component>) getChildren(org.obofoundry.IsA.CLASS);
  }
  
  @SuppressWarnings("unchecked")
  public com.terraframe.mojo.query.OIterator<? extends org.obofoundry.IsA> getAllIsASubClassesRel()
  {
    return (com.terraframe.mojo.query.OIterator<? extends org.obofoundry.IsA>) getChildRelationships(org.obofoundry.IsA.CLASS);
  }
  
  @SuppressWarnings("unchecked")
  public com.terraframe.mojo.query.OIterator<? extends org.obofoundry.IsA> getIsASubClassesRel(org.obofoundry.Component component)
  {
    return (com.terraframe.mojo.query.OIterator<? extends org.obofoundry.IsA>) getRelationshipsWithChild(component, org.obofoundry.IsA.CLASS);
  }
  
  public org.obofoundry.OBORelationship addParentRelationship(org.obofoundry.Component component)
  {
    return (org.obofoundry.OBORelationship) addParent(component, org.obofoundry.OBORelationship.CLASS);
  }
  
  public void removeParentRelationship(org.obofoundry.Component component)
  {
    removeAllParents(component, org.obofoundry.OBORelationship.CLASS);
  }
  
  @SuppressWarnings("unchecked")
  public com.terraframe.mojo.query.OIterator<? extends org.obofoundry.Component> getAllParentRelationship()
  {
    return (com.terraframe.mojo.query.OIterator<? extends org.obofoundry.Component>) getParents(org.obofoundry.OBORelationship.CLASS);
  }
  
  @SuppressWarnings("unchecked")
  public com.terraframe.mojo.query.OIterator<? extends org.obofoundry.OBORelationship> getAllParentRelationshipRel()
  {
    return (com.terraframe.mojo.query.OIterator<? extends org.obofoundry.OBORelationship>) getParentRelationships(org.obofoundry.OBORelationship.CLASS);
  }
  
  @SuppressWarnings("unchecked")
  public com.terraframe.mojo.query.OIterator<? extends org.obofoundry.OBORelationship> getParentRelationshipRel(org.obofoundry.Component component)
  {
    return (com.terraframe.mojo.query.OIterator<? extends org.obofoundry.OBORelationship>) getRelationshipsWithParent(component, org.obofoundry.OBORelationship.CLASS);
  }
  
  public org.obofoundry.IsA addIsASuperClasses(org.obofoundry.Component component)
  {
    return (org.obofoundry.IsA) addParent(component, org.obofoundry.IsA.CLASS);
  }
  
  public void removeIsASuperClasses(org.obofoundry.Component component)
  {
    removeAllParents(component, org.obofoundry.IsA.CLASS);
  }
  
  @SuppressWarnings("unchecked")
  public com.terraframe.mojo.query.OIterator<? extends org.obofoundry.Component> getAllIsASuperClasses()
  {
    return (com.terraframe.mojo.query.OIterator<? extends org.obofoundry.Component>) getParents(org.obofoundry.IsA.CLASS);
  }
  
  @SuppressWarnings("unchecked")
  public com.terraframe.mojo.query.OIterator<? extends org.obofoundry.IsA> getAllIsASuperClassesRel()
  {
    return (com.terraframe.mojo.query.OIterator<? extends org.obofoundry.IsA>) getParentRelationships(org.obofoundry.IsA.CLASS);
  }
  
  @SuppressWarnings("unchecked")
  public com.terraframe.mojo.query.OIterator<? extends org.obofoundry.IsA> getIsASuperClassesRel(org.obofoundry.Component component)
  {
    return (com.terraframe.mojo.query.OIterator<? extends org.obofoundry.IsA>) getRelationshipsWithParent(component, org.obofoundry.IsA.CLASS);
  }
  
  public static Component get(String id)
  {
    return (Component) com.terraframe.mojo.business.Business.get(id);
  }
  
  public static org.obofoundry.Component lock(java.lang.String id)
  {
    Component _instance = Component.get(id);
    _instance.lock();
    
    return _instance;
  }
  
  public static org.obofoundry.Component unlock(java.lang.String id)
  {
    Component _instance = Component.get(id);
    _instance.unlock();
    
    return _instance;
  }
  
  public String toString()
  {
    if (this.isNew())
    {
      return "New: "+ this.getClassDisplayLabel();
    }
    else
    {
      return super.toString();
    }
  }
}
