package org.obofoundry;

/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to Typedef.java
 *
 * @author Autogenerated by TerraFrame
 */
public abstract class TypedefBase extends org.obofoundry.Component implements com.terraframe.mojo.generation.loader.Reloadable
{
  public final static String CLASS = "org.obofoundry.Typedef";
  public static java.lang.String ISANTISYMMETRIC = "isAntiSymmetric";
  public static java.lang.String MDRELATIONSHIP = "mdRelationship";
  public static java.lang.String INVERSEOF = "inverseof";
  public static java.lang.String ISPARENT = "isParent";
  public static java.lang.String ISREFLEXIVE = "isReflexive";
  public static java.lang.String ISCHILD = "isChild";
  public static java.lang.String ISTRANSITIVE = "isTransitive";
  private static final long serialVersionUID = 1229530369071L;
  
  public TypedefBase()
  {
    super();
  }
  
  public Boolean getIsAntiSymmetric()
  {
    return com.terraframe.mojo.constants.MdAttributeBooleanUtil.getTypeSafeValue(getValue(ISANTISYMMETRIC));
  }
  
  public void validateIsAntiSymmetric()
  {
    this.validateAttribute(ISANTISYMMETRIC);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getIsAntiSymmetricMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(org.obofoundry.Typedef.CLASS);
    return mdClassIF.definesAttribute(ISANTISYMMETRIC);
  }
  
  public void setIsAntiSymmetric(Boolean value)
  {
    if(value == null)
    {
      setValue(ISANTISYMMETRIC, "");
    }
    else
    {
      setValue(ISANTISYMMETRIC, java.lang.Boolean.toString(value));
    }
  }
  
  public com.terraframe.mojo.system.metadata.MdRelationship getMdRelationship()
  {
    try
    {
      return com.terraframe.mojo.system.metadata.MdRelationship.get(getValue(MDRELATIONSHIP));
    }
    catch (com.terraframe.mojo.dataaccess.cache.DataNotFoundException e)
    {
      return null;
    }
  }
  
  public void validateMdRelationship()
  {
    this.validateAttribute(MDRELATIONSHIP);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getMdRelationshipMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(org.obofoundry.Typedef.CLASS);
    return mdClassIF.definesAttribute(MDRELATIONSHIP);
  }
  
  public void setMdRelationship(com.terraframe.mojo.system.metadata.MdRelationship value)
  {
    if(value == null)
    {
      setValue(MDRELATIONSHIP, "");
    }
    else
    {
      setValue(MDRELATIONSHIP, value.getId());
    }
  }
  
  public org.obofoundry.Typedef getInverseof()
  {
    try
    {
      return org.obofoundry.Typedef.get(getValue(INVERSEOF));
    }
    catch (com.terraframe.mojo.dataaccess.cache.DataNotFoundException e)
    {
      return null;
    }
  }
  
  public void validateInverseof()
  {
    this.validateAttribute(INVERSEOF);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getInverseofMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(org.obofoundry.Typedef.CLASS);
    return mdClassIF.definesAttribute(INVERSEOF);
  }
  
  public void setInverseof(org.obofoundry.Typedef value)
  {
    if(value == null)
    {
      setValue(INVERSEOF, "");
    }
    else
    {
      setValue(INVERSEOF, value.getId());
    }
  }
  
  public Boolean getIsParent()
  {
    return com.terraframe.mojo.constants.MdAttributeBooleanUtil.getTypeSafeValue(getValue(ISPARENT));
  }
  
  public void validateIsParent()
  {
    this.validateAttribute(ISPARENT);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getIsParentMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(org.obofoundry.Typedef.CLASS);
    return mdClassIF.definesAttribute(ISPARENT);
  }
  
  public void setIsParent(Boolean value)
  {
    if(value == null)
    {
      setValue(ISPARENT, "");
    }
    else
    {
      setValue(ISPARENT, java.lang.Boolean.toString(value));
    }
  }
  
  public Boolean getIsReflexive()
  {
    return com.terraframe.mojo.constants.MdAttributeBooleanUtil.getTypeSafeValue(getValue(ISREFLEXIVE));
  }
  
  public void validateIsReflexive()
  {
    this.validateAttribute(ISREFLEXIVE);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getIsReflexiveMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(org.obofoundry.Typedef.CLASS);
    return mdClassIF.definesAttribute(ISREFLEXIVE);
  }
  
  public void setIsReflexive(Boolean value)
  {
    if(value == null)
    {
      setValue(ISREFLEXIVE, "");
    }
    else
    {
      setValue(ISREFLEXIVE, java.lang.Boolean.toString(value));
    }
  }
  
  public Boolean getIsChild()
  {
    return com.terraframe.mojo.constants.MdAttributeBooleanUtil.getTypeSafeValue(getValue(ISCHILD));
  }
  
  public void validateIsChild()
  {
    this.validateAttribute(ISCHILD);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getIsChildMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(org.obofoundry.Typedef.CLASS);
    return mdClassIF.definesAttribute(ISCHILD);
  }
  
  public void setIsChild(Boolean value)
  {
    if(value == null)
    {
      setValue(ISCHILD, "");
    }
    else
    {
      setValue(ISCHILD, java.lang.Boolean.toString(value));
    }
  }
  
  public Boolean getIsTransitive()
  {
    return com.terraframe.mojo.constants.MdAttributeBooleanUtil.getTypeSafeValue(getValue(ISTRANSITIVE));
  }
  
  public void validateIsTransitive()
  {
    this.validateAttribute(ISTRANSITIVE);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getIsTransitiveMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(org.obofoundry.Typedef.CLASS);
    return mdClassIF.definesAttribute(ISTRANSITIVE);
  }
  
  public void setIsTransitive(Boolean value)
  {
    if(value == null)
    {
      setValue(ISTRANSITIVE, "");
    }
    else
    {
      setValue(ISTRANSITIVE, java.lang.Boolean.toString(value));
    }
  }
  
  protected String getDeclaredType()
  {
    return CLASS;
  }
  
  public static Typedef get(String id)
  {
    return (Typedef) com.terraframe.mojo.business.Business.get(id);
  }
  
  public static org.obofoundry.Typedef lock(java.lang.String id)
  {
    Typedef _instance = Typedef.get(id);
    _instance.lock();
    
    return _instance;
  }
  
  public static org.obofoundry.Typedef unlock(java.lang.String id)
  {
    Typedef _instance = Typedef.get(id);
    _instance.unlock();
    
    return _instance;
  }
  
  public String toString()
  {
    if (this.isNew())
    {
      return "New: "+ this.getClassDisplayLabel();
    }
    else
    {
      return super.toString();
    }
  }
}
