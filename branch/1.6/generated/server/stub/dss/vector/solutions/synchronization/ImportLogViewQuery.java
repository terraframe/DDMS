package dss.vector.solutions.synchronization;

import com.runwaysdk.generation.loader.Reloadable;
import com.runwaysdk.query.OrderBy.SortOrder;
import com.runwaysdk.query.QueryFactory;
import com.runwaysdk.query.ViewQueryBuilder;
import com.runwaysdk.system.transaction.ImportLogQuery;

/**
 *
 * @author Autogenerated by TerraFrame
 */
public class ImportLogViewQuery extends ImportLogViewQueryBase implements Reloadable
{
  private static final long serialVersionUID = 1493754534;
  
  private ImportLogQuery importLogQuery;
  
  private String sortAttribute;
  
  private SortOrder sortOrder;
  
  private Integer pageSize;
  
  private Integer pageNumber;

  public ImportLogViewQuery(QueryFactory queryFactory)
  {
    this(queryFactory, "", true, 20, 1);
  }
  
  public ImportLogViewQuery(QueryFactory queryFactory, String sortAttribute, Boolean ascending, Integer pageSize, Integer pageNumber)
  {
    super(queryFactory);

    this.sortAttribute = sortAttribute;
    this.sortOrder = ascending==null ? null : ascending ? SortOrder.ASC : SortOrder.DESC;
    this.pageSize = pageSize;
    this.pageNumber = pageNumber;
    
    this.importLogQuery = new ImportLogQuery(queryFactory);
    this.buildQuery(new DefaultImportLogViewBuilder(queryFactory));
  }

  public ImportLogViewQuery(QueryFactory queryFactory, ViewQueryBuilder viewQueryBuilder)
  {
    super(queryFactory, viewQueryBuilder);
  }

  class DefaultImportLogViewBuilder extends ViewQueryBuilder implements Reloadable
  {
    public DefaultImportLogViewBuilder(QueryFactory queryFactory)
    {
      super(queryFactory);
    }

    protected ImportLogViewQuery getViewQuery()
    {
      return (ImportLogViewQuery)super.getViewQuery();
    }

    /**
     * build the select clause
     */
    protected void buildSelectClause()
    {
      ImportLogViewQuery vQuery = this.getViewQuery();
      
      vQuery.map(ImportLogView.LASTEXPORTSEQ, importLogQuery.getLastExportSeq());
      vQuery.map(ImportLogView.SOURCESITE, importLogQuery.getSourceSite());
    }

    /**
     * Implement only if additional join criteria is required.
     */
    protected void buildWhereClause()
    {
      ImportLogViewQuery vQuery = this.getViewQuery();
      
      if (sortAttribute.equals(ImportLogView.LASTEXPORTSEQ)) vQuery.ORDER_BY(getLastExportSeq(), sortOrder);
      if (sortAttribute.equals(ImportLogView.SOURCESITE)) vQuery.ORDER_BY(getSourceSite(), sortOrder);

      if(pageSize != null && pageNumber != null)
      {
        vQuery.restrictRows(pageSize, pageNumber);
      }
    }

  }
}
