package dss.vector.solutions.general;

@com.runwaysdk.business.ClassSignature(hash = -1208751359)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to ThresholdCalculationCaseTypesMaster.java
 *
 * @author Autogenerated by RunwaySDK
 */
public abstract class ThresholdCalculationCaseTypesMasterBase extends com.runwaysdk.system.EnumerationMaster implements com.runwaysdk.generation.loader.Reloadable
{
  public final static String CLASS = "dss.vector.solutions.general.ThresholdCalculationCaseTypesMaster";
  private static final long serialVersionUID = -1208751359;
  
  public ThresholdCalculationCaseTypesMasterBase()
  {
    super();
  }
  
  protected String getDeclaredType()
  {
    return CLASS;
  }
  
  public static ThresholdCalculationCaseTypesMasterQuery getAllInstances(String sortAttribute, Boolean ascending, Integer pageSize, Integer pageNumber)
  {
    ThresholdCalculationCaseTypesMasterQuery query = new ThresholdCalculationCaseTypesMasterQuery(new com.runwaysdk.query.QueryFactory());
    com.runwaysdk.business.Entity.getAllInstances(query, sortAttribute, ascending, pageSize, pageNumber);
    return query;
  }
  
  public static ThresholdCalculationCaseTypesMaster get(String id)
  {
    return (ThresholdCalculationCaseTypesMaster) com.runwaysdk.business.Business.get(id);
  }
  
  public static ThresholdCalculationCaseTypesMaster getByKey(String key)
  {
    return (ThresholdCalculationCaseTypesMaster) com.runwaysdk.business.Business.get(CLASS, key);
  }
  
  public static ThresholdCalculationCaseTypesMaster getEnumeration(String enumName)
  {
    return (ThresholdCalculationCaseTypesMaster) com.runwaysdk.business.Business.getEnumeration(dss.vector.solutions.general.ThresholdCalculationCaseTypesMaster.CLASS ,enumName);
  }
  
  public static ThresholdCalculationCaseTypesMaster lock(java.lang.String id)
  {
    ThresholdCalculationCaseTypesMaster _instance = ThresholdCalculationCaseTypesMaster.get(id);
    _instance.lock();
    
    return _instance;
  }
  
  public static ThresholdCalculationCaseTypesMaster unlock(java.lang.String id)
  {
    ThresholdCalculationCaseTypesMaster _instance = ThresholdCalculationCaseTypesMaster.get(id);
    _instance.unlock();
    
    return _instance;
  }
  
  public String toString()
  {
    if (this.isNew())
    {
      return "New: "+ this.getClassDisplayLabel();
    }
    else
    {
      return super.toString();
    }
  }
}
