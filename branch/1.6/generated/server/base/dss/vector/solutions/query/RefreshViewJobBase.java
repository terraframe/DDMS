package dss.vector.solutions.query;

@com.runwaysdk.business.ClassSignature(hash = 759367021)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to RefreshViewJob.java
 *
 * @author Autogenerated by RunwaySDK
 */
public abstract class RefreshViewJobBase extends com.runwaysdk.system.scheduler.ExecutableJob implements com.runwaysdk.generation.loader.Reloadable
{
  public final static String CLASS = "dss.vector.solutions.query.RefreshViewJob";
  public static java.lang.String MATERIALIZEDTABLE = "materializedTable";
  private static final long serialVersionUID = 759367021;
  
  public RefreshViewJobBase()
  {
    super();
  }
  
  public com.runwaysdk.system.metadata.MdTable getMaterializedTable()
  {
    if (getValue(MATERIALIZEDTABLE).trim().equals(""))
    {
      return null;
    }
    else
    {
      return com.runwaysdk.system.metadata.MdTable.get(getValue(MATERIALIZEDTABLE));
    }
  }
  
  public String getMaterializedTableId()
  {
    return getValue(MATERIALIZEDTABLE);
  }
  
  public void validateMaterializedTable()
  {
    this.validateAttribute(MATERIALIZEDTABLE);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeReferenceDAOIF getMaterializedTableMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.query.RefreshViewJob.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeReferenceDAOIF)mdClassIF.definesAttribute(MATERIALIZEDTABLE);
  }
  
  public void setMaterializedTable(com.runwaysdk.system.metadata.MdTable value)
  {
    if(value == null)
    {
      setValue(MATERIALIZEDTABLE, "");
    }
    else
    {
      setValue(MATERIALIZEDTABLE, value.getId());
    }
  }
  
  protected String getDeclaredType()
  {
    return CLASS;
  }
  
  public static RefreshViewJobQuery getAllInstances(String sortAttribute, Boolean ascending, Integer pageSize, Integer pageNumber)
  {
    RefreshViewJobQuery query = new RefreshViewJobQuery(new com.runwaysdk.query.QueryFactory());
    com.runwaysdk.business.Entity.getAllInstances(query, sortAttribute, ascending, pageSize, pageNumber);
    return query;
  }
  
  public static RefreshViewJob get(String id)
  {
    return (RefreshViewJob) com.runwaysdk.business.Business.get(id);
  }
  
  public static RefreshViewJob getByKey(String key)
  {
    return (RefreshViewJob) com.runwaysdk.business.Business.get(CLASS, key);
  }
  
  public static RefreshViewJob lock(java.lang.String id)
  {
    RefreshViewJob _instance = RefreshViewJob.get(id);
    _instance.lock();
    
    return _instance;
  }
  
  public static RefreshViewJob unlock(java.lang.String id)
  {
    RefreshViewJob _instance = RefreshViewJob.get(id);
    _instance.unlock();
    
    return _instance;
  }
  
  public String toString()
  {
    if (this.isNew())
    {
      return "New: "+ this.getClassDisplayLabel();
    }
    else
    {
      return super.toString();
    }
  }
}
