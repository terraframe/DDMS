package dss.vector.solutions.generator;

@com.runwaysdk.business.ClassSignature(hash = 330110397)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to MdWebIndicator.java
 *
 * @author Autogenerated by RunwaySDK
 */
public abstract class MdWebIndicatorBase extends com.runwaysdk.system.metadata.MdWebAttribute implements com.runwaysdk.generation.loader.Reloadable
{
  public final static String CLASS = "dss.vector.solutions.generator.MdWebIndicator";
  public static java.lang.String DENOMINATORAGGREGATION = "denominatorAggregation";
  public static java.lang.String DENOMINATORFIELD = "denominatorField";
  public static java.lang.String NUMERATORAGGREGATION = "numeratorAggregation";
  public static java.lang.String NUMERATORFIELD = "numeratorField";
  public static java.lang.String PERCENTAGE = "percentage";
  private static final long serialVersionUID = 330110397;
  
  public MdWebIndicatorBase()
  {
    super();
  }
  
  @SuppressWarnings("unchecked")
  public java.util.List<com.runwaysdk.system.metadata.IndicatorAggregateFunction> getDenominatorAggregation()
  {
    return (java.util.List<com.runwaysdk.system.metadata.IndicatorAggregateFunction>) getEnumValues(DENOMINATORAGGREGATION);
  }
  
  public void addDenominatorAggregation(com.runwaysdk.system.metadata.IndicatorAggregateFunction value)
  {
    if(value != null)
    {
      addEnumItem(DENOMINATORAGGREGATION, value.getId());
    }
  }
  
  public void removeDenominatorAggregation(com.runwaysdk.system.metadata.IndicatorAggregateFunction value)
  {
    if(value != null)
    {
      removeEnumItem(DENOMINATORAGGREGATION, value.getId());
    }
  }
  
  public void clearDenominatorAggregation()
  {
    clearEnum(DENOMINATORAGGREGATION);
  }
  
  public void validateDenominatorAggregation()
  {
    this.validateAttribute(DENOMINATORAGGREGATION);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeEnumerationDAOIF getDenominatorAggregationMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.generator.MdWebIndicator.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeEnumerationDAOIF)mdClassIF.definesAttribute(DENOMINATORAGGREGATION);
  }
  
  public com.runwaysdk.system.metadata.MdWebAttribute getDenominatorField()
  {
    if (getValue(DENOMINATORFIELD).trim().equals(""))
    {
      return null;
    }
    else
    {
      return com.runwaysdk.system.metadata.MdWebAttribute.get(getValue(DENOMINATORFIELD));
    }
  }
  
  public String getDenominatorFieldId()
  {
    return getValue(DENOMINATORFIELD);
  }
  
  public void validateDenominatorField()
  {
    this.validateAttribute(DENOMINATORFIELD);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeReferenceDAOIF getDenominatorFieldMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.generator.MdWebIndicator.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeReferenceDAOIF)mdClassIF.definesAttribute(DENOMINATORFIELD);
  }
  
  public void setDenominatorField(com.runwaysdk.system.metadata.MdWebAttribute value)
  {
    if(value == null)
    {
      setValue(DENOMINATORFIELD, "");
    }
    else
    {
      setValue(DENOMINATORFIELD, value.getId());
    }
  }
  
  @SuppressWarnings("unchecked")
  public java.util.List<com.runwaysdk.system.metadata.IndicatorAggregateFunction> getNumeratorAggregation()
  {
    return (java.util.List<com.runwaysdk.system.metadata.IndicatorAggregateFunction>) getEnumValues(NUMERATORAGGREGATION);
  }
  
  public void addNumeratorAggregation(com.runwaysdk.system.metadata.IndicatorAggregateFunction value)
  {
    if(value != null)
    {
      addEnumItem(NUMERATORAGGREGATION, value.getId());
    }
  }
  
  public void removeNumeratorAggregation(com.runwaysdk.system.metadata.IndicatorAggregateFunction value)
  {
    if(value != null)
    {
      removeEnumItem(NUMERATORAGGREGATION, value.getId());
    }
  }
  
  public void clearNumeratorAggregation()
  {
    clearEnum(NUMERATORAGGREGATION);
  }
  
  public void validateNumeratorAggregation()
  {
    this.validateAttribute(NUMERATORAGGREGATION);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeEnumerationDAOIF getNumeratorAggregationMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.generator.MdWebIndicator.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeEnumerationDAOIF)mdClassIF.definesAttribute(NUMERATORAGGREGATION);
  }
  
  public com.runwaysdk.system.metadata.MdWebAttribute getNumeratorField()
  {
    if (getValue(NUMERATORFIELD).trim().equals(""))
    {
      return null;
    }
    else
    {
      return com.runwaysdk.system.metadata.MdWebAttribute.get(getValue(NUMERATORFIELD));
    }
  }
  
  public String getNumeratorFieldId()
  {
    return getValue(NUMERATORFIELD);
  }
  
  public void validateNumeratorField()
  {
    this.validateAttribute(NUMERATORFIELD);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeReferenceDAOIF getNumeratorFieldMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.generator.MdWebIndicator.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeReferenceDAOIF)mdClassIF.definesAttribute(NUMERATORFIELD);
  }
  
  public void setNumeratorField(com.runwaysdk.system.metadata.MdWebAttribute value)
  {
    if(value == null)
    {
      setValue(NUMERATORFIELD, "");
    }
    else
    {
      setValue(NUMERATORFIELD, value.getId());
    }
  }
  
  public Boolean getPercentage()
  {
    return com.runwaysdk.constants.MdAttributeBooleanUtil.getTypeSafeValue(getValue(PERCENTAGE));
  }
  
  public void validatePercentage()
  {
    this.validateAttribute(PERCENTAGE);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeBooleanDAOIF getPercentageMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(dss.vector.solutions.generator.MdWebIndicator.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeBooleanDAOIF)mdClassIF.definesAttribute(PERCENTAGE);
  }
  
  public void setPercentage(Boolean value)
  {
    if(value == null)
    {
      setValue(PERCENTAGE, "");
    }
    else
    {
      setValue(PERCENTAGE, java.lang.Boolean.toString(value));
    }
  }
  
  protected String getDeclaredType()
  {
    return CLASS;
  }
  
  public static MdWebIndicatorQuery getAllInstances(String sortAttribute, Boolean ascending, Integer pageSize, Integer pageNumber)
  {
    MdWebIndicatorQuery query = new MdWebIndicatorQuery(new com.runwaysdk.query.QueryFactory());
    com.runwaysdk.business.Entity.getAllInstances(query, sortAttribute, ascending, pageSize, pageNumber);
    return query;
  }
  
  public static MdWebIndicator get(String id)
  {
    return (MdWebIndicator) com.runwaysdk.business.Business.get(id);
  }
  
  public static MdWebIndicator getByKey(String key)
  {
    return (MdWebIndicator) com.runwaysdk.business.Business.get(CLASS, key);
  }
  
  public static MdWebIndicator lock(java.lang.String id)
  {
    MdWebIndicator _instance = MdWebIndicator.get(id);
    _instance.lock();
    
    return _instance;
  }
  
  public static MdWebIndicator unlock(java.lang.String id)
  {
    MdWebIndicator _instance = MdWebIndicator.get(id);
    _instance.unlock();
    
    return _instance;
  }
  
  public String toString()
  {
    if (this.isNew())
    {
      return "New: "+ this.getClassDisplayLabel();
    }
    else
    {
      return super.toString();
    }
  }
}
