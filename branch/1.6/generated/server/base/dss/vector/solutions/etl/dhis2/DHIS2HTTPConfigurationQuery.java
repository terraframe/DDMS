package dss.vector.solutions.etl.dhis2;

@com.runwaysdk.business.ClassSignature(hash = -1564914082)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to DHIS2HTTPConfiguration.java
 *
 * @author Autogenerated by RunwaySDK
 */
public  class DHIS2HTTPConfigurationQuery extends dss.vector.solutions.etl.dhis2.DHIS2AbstractConfigurationQuery
 implements com.runwaysdk.generation.loader.Reloadable
{

  public DHIS2HTTPConfigurationQuery(com.runwaysdk.query.QueryFactory componentQueryFactory)
  {
    super(componentQueryFactory);
    if (this.getComponentQuery() == null)
    {
      com.runwaysdk.business.BusinessQuery businessQuery = componentQueryFactory.businessQuery(this.getClassType());

       this.setBusinessQuery(businessQuery);
    }
  }

  public DHIS2HTTPConfigurationQuery(com.runwaysdk.query.ValueQuery valueQuery)
  {
    super(valueQuery);
    if (this.getComponentQuery() == null)
    {
      com.runwaysdk.business.BusinessQuery businessQuery = new com.runwaysdk.business.BusinessQuery(valueQuery, this.getClassType());

       this.setBusinessQuery(businessQuery);
    }
  }

  public String getClassType()
  {
    return dss.vector.solutions.etl.dhis2.DHIS2HTTPConfiguration.CLASS;
  }
  public com.runwaysdk.query.SelectableChar getPazzword()
  {
    return getPazzword(null);

  }
 
  public com.runwaysdk.query.SelectableChar getPazzword(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(dss.vector.solutions.etl.dhis2.DHIS2HTTPConfiguration.PAZZWORD, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getPazzword(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(dss.vector.solutions.etl.dhis2.DHIS2HTTPConfiguration.PAZZWORD, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getUsername()
  {
    return getUsername(null);

  }
 
  public com.runwaysdk.query.SelectableChar getUsername(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(dss.vector.solutions.etl.dhis2.DHIS2HTTPConfiguration.USERNAME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getUsername(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(dss.vector.solutions.etl.dhis2.DHIS2HTTPConfiguration.USERNAME, alias, displayLabel);

  }
  /**  
   * Returns an iterator of Business objects that match the query criteria specified
   * on this query object. 
   * @return iterator of Business objects that match the query criteria specified
   * on this query object.
   */
  public com.runwaysdk.query.OIterator<? extends DHIS2HTTPConfiguration> getIterator()
  {
    this.checkNotUsedInValueQuery();
    String sqlStmt;
    if (_limit != null && _skip != null)
    {
      sqlStmt = this.getComponentQuery().getSQL(_limit, _skip);
    }
    else
    {
      sqlStmt = this.getComponentQuery().getSQL();
    }
    java.util.Map<String, com.runwaysdk.query.ColumnInfo> columnInfoMap = this.getComponentQuery().getColumnInfoMap();

    java.sql.ResultSet results = com.runwaysdk.dataaccess.database.Database.query(sqlStmt);
    return new com.runwaysdk.business.BusinessIterator<DHIS2HTTPConfiguration>(this.getComponentQuery().getMdEntityIF(), columnInfoMap, results);
  }


/**
 * Interface that masks all type unsafe query methods and defines all type safe methods.
 * This type is used when a join is performed on this class as a reference.
 **/
  public interface DHIS2HTTPConfigurationQueryReferenceIF extends com.runwaysdk.generation.loader.Reloadable, dss.vector.solutions.etl.dhis2.DHIS2AbstractConfigurationQuery.DHIS2AbstractConfigurationQueryReferenceIF
  {

    public com.runwaysdk.query.SelectableChar getPazzword();
    public com.runwaysdk.query.SelectableChar getPazzword(String alias);
    public com.runwaysdk.query.SelectableChar getPazzword(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getUsername();
    public com.runwaysdk.query.SelectableChar getUsername(String alias);
    public com.runwaysdk.query.SelectableChar getUsername(String alias, String displayLabel);

    public com.runwaysdk.query.BasicCondition EQ(dss.vector.solutions.etl.dhis2.DHIS2HTTPConfiguration dHIS2HTTPConfiguration);

    public com.runwaysdk.query.BasicCondition NE(dss.vector.solutions.etl.dhis2.DHIS2HTTPConfiguration dHIS2HTTPConfiguration);

  }

/**
 * Implements type safe query methods.
 * This type is used when a join is performed on this class as a reference.
 **/
  public static class DHIS2HTTPConfigurationQueryReference extends dss.vector.solutions.etl.dhis2.DHIS2AbstractConfigurationQuery.DHIS2AbstractConfigurationQueryReference
 implements DHIS2HTTPConfigurationQueryReferenceIF
, com.runwaysdk.generation.loader.Reloadable
  {

  public DHIS2HTTPConfigurationQueryReference(com.runwaysdk.dataaccess.MdAttributeRefDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias, com.runwaysdk.dataaccess.MdBusinessDAOIF referenceMdBusinessIF, String referenceTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String alias, String displayLabel)
  {
    super(mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, alias, displayLabel);

  }


    public com.runwaysdk.query.BasicCondition EQ(dss.vector.solutions.etl.dhis2.DHIS2HTTPConfiguration dHIS2HTTPConfiguration)
    {
      if(dHIS2HTTPConfiguration == null) return this.EQ((java.lang.String)null);
      return this.EQ(dHIS2HTTPConfiguration.getId());
    }

    public com.runwaysdk.query.BasicCondition NE(dss.vector.solutions.etl.dhis2.DHIS2HTTPConfiguration dHIS2HTTPConfiguration)
    {
      if(dHIS2HTTPConfiguration == null) return this.NE((java.lang.String)null);
      return this.NE(dHIS2HTTPConfiguration.getId());
    }

  public com.runwaysdk.query.SelectableChar getPazzword()
  {
    return getPazzword(null);

  }
 
  public com.runwaysdk.query.SelectableChar getPazzword(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(dss.vector.solutions.etl.dhis2.DHIS2HTTPConfiguration.PAZZWORD, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getPazzword(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(dss.vector.solutions.etl.dhis2.DHIS2HTTPConfiguration.PAZZWORD, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getUsername()
  {
    return getUsername(null);

  }
 
  public com.runwaysdk.query.SelectableChar getUsername(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(dss.vector.solutions.etl.dhis2.DHIS2HTTPConfiguration.USERNAME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getUsername(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(dss.vector.solutions.etl.dhis2.DHIS2HTTPConfiguration.USERNAME, alias, displayLabel);

  }
  }

/**
 * Interface that masks all type unsafe query methods and defines all type safe methods.
 * This type is used when a join is performed on this class as a reference.
 **/
  public interface DHIS2HTTPConfigurationQueryMultiReferenceIF extends com.runwaysdk.generation.loader.Reloadable, dss.vector.solutions.etl.dhis2.DHIS2AbstractConfigurationQuery.DHIS2AbstractConfigurationQueryMultiReferenceIF
  {

    public com.runwaysdk.query.SelectableChar getPazzword();
    public com.runwaysdk.query.SelectableChar getPazzword(String alias);
    public com.runwaysdk.query.SelectableChar getPazzword(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getUsername();
    public com.runwaysdk.query.SelectableChar getUsername(String alias);
    public com.runwaysdk.query.SelectableChar getUsername(String alias, String displayLabel);

    public com.runwaysdk.query.Condition containsAny(dss.vector.solutions.etl.dhis2.DHIS2HTTPConfiguration ... dHIS2HTTPConfiguration);
    public com.runwaysdk.query.Condition notContainsAny(dss.vector.solutions.etl.dhis2.DHIS2HTTPConfiguration ... dHIS2HTTPConfiguration);
    public com.runwaysdk.query.Condition containsAll(dss.vector.solutions.etl.dhis2.DHIS2HTTPConfiguration ... dHIS2HTTPConfiguration);
    public com.runwaysdk.query.Condition notContainsAll(dss.vector.solutions.etl.dhis2.DHIS2HTTPConfiguration ... dHIS2HTTPConfiguration);
    public com.runwaysdk.query.Condition containsExactly(dss.vector.solutions.etl.dhis2.DHIS2HTTPConfiguration ... dHIS2HTTPConfiguration);
  }

/**
 * Implements type safe query methods.
 * This type is used when a join is performed on this class as a reference.
 **/
  public static class DHIS2HTTPConfigurationQueryMultiReference extends dss.vector.solutions.etl.dhis2.DHIS2AbstractConfigurationQuery.DHIS2AbstractConfigurationQueryMultiReference
 implements DHIS2HTTPConfigurationQueryMultiReferenceIF
, com.runwaysdk.generation.loader.Reloadable
  {

  public DHIS2HTTPConfigurationQueryMultiReference(com.runwaysdk.dataaccess.MdAttributeMultiReferenceDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias, String mdMultiReferenceTableName, com.runwaysdk.dataaccess.MdBusinessDAOIF referenceMdBusinessIF, String referenceTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String alias, String displayLabel)
  {
    super(mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, mdMultiReferenceTableName, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, alias, displayLabel);

  }



    public com.runwaysdk.query.Condition containsAny(dss.vector.solutions.etl.dhis2.DHIS2HTTPConfiguration ... dHIS2HTTPConfiguration)  {

      String[] itemIdArray = new String[dHIS2HTTPConfiguration.length]; 

      for (int i=0; i<dHIS2HTTPConfiguration.length; i++)
      {
        itemIdArray[i] = dHIS2HTTPConfiguration[i].getId();
      }

      return this.containsAny(itemIdArray);
  }

    public com.runwaysdk.query.Condition notContainsAny(dss.vector.solutions.etl.dhis2.DHIS2HTTPConfiguration ... dHIS2HTTPConfiguration)  {

      String[] itemIdArray = new String[dHIS2HTTPConfiguration.length]; 

      for (int i=0; i<dHIS2HTTPConfiguration.length; i++)
      {
        itemIdArray[i] = dHIS2HTTPConfiguration[i].getId();
      }

      return this.notContainsAny(itemIdArray);
  }

    public com.runwaysdk.query.Condition containsAll(dss.vector.solutions.etl.dhis2.DHIS2HTTPConfiguration ... dHIS2HTTPConfiguration)  {

      String[] itemIdArray = new String[dHIS2HTTPConfiguration.length]; 

      for (int i=0; i<dHIS2HTTPConfiguration.length; i++)
      {
        itemIdArray[i] = dHIS2HTTPConfiguration[i].getId();
      }

      return this.containsAll(itemIdArray);
  }

    public com.runwaysdk.query.Condition notContainsAll(dss.vector.solutions.etl.dhis2.DHIS2HTTPConfiguration ... dHIS2HTTPConfiguration)  {

      String[] itemIdArray = new String[dHIS2HTTPConfiguration.length]; 

      for (int i=0; i<dHIS2HTTPConfiguration.length; i++)
      {
        itemIdArray[i] = dHIS2HTTPConfiguration[i].getId();
      }

      return this.notContainsAll(itemIdArray);
  }

    public com.runwaysdk.query.Condition containsExactly(dss.vector.solutions.etl.dhis2.DHIS2HTTPConfiguration ... dHIS2HTTPConfiguration)  {

      String[] itemIdArray = new String[dHIS2HTTPConfiguration.length]; 

      for (int i=0; i<dHIS2HTTPConfiguration.length; i++)
      {
        itemIdArray[i] = dHIS2HTTPConfiguration[i].getId();
      }

      return this.containsExactly(itemIdArray);
  }
  public com.runwaysdk.query.SelectableChar getPazzword()
  {
    return getPazzword(null);

  }
 
  public com.runwaysdk.query.SelectableChar getPazzword(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(dss.vector.solutions.etl.dhis2.DHIS2HTTPConfiguration.PAZZWORD, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getPazzword(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(dss.vector.solutions.etl.dhis2.DHIS2HTTPConfiguration.PAZZWORD, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getUsername()
  {
    return getUsername(null);

  }
 
  public com.runwaysdk.query.SelectableChar getUsername(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(dss.vector.solutions.etl.dhis2.DHIS2HTTPConfiguration.USERNAME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getUsername(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(dss.vector.solutions.etl.dhis2.DHIS2HTTPConfiguration.USERNAME, alias, displayLabel);

  }
  }
}
