package dss.vector.solutions.entomology;

@com.runwaysdk.business.ClassSignature(hash = 582712961)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to PupalContainerView.java
 *
 * @author Autogenerated by RunwaySDK
 */
public  abstract  class PupalContainerViewQueryBase extends com.runwaysdk.query.GeneratedViewQuery
 implements com.runwaysdk.generation.loader.Reloadable
{

  public PupalContainerViewQueryBase(com.runwaysdk.query.QueryFactory componentQueryFactory)
  {
    super(componentQueryFactory);
  }

  public PupalContainerViewQueryBase(com.runwaysdk.query.QueryFactory componentQueryFactory, com.runwaysdk.query.ViewQueryBuilder viewQueryBuilder)
  {
    super(componentQueryFactory, viewQueryBuilder);
  }
  public String getClassType()
  {
    return dss.vector.solutions.entomology.PupalContainerView.CLASS;
  }
  public com.runwaysdk.query.SelectableChar getConcreteId()
  {
    return getConcreteId(null);

  }
 
  public com.runwaysdk.query.SelectableChar getConcreteId(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getSelectable(dss.vector.solutions.entomology.PupalContainerView.CONCRETEID, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getConcreteId(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getSelectable(dss.vector.solutions.entomology.PupalContainerView.CONCRETEID, alias, displayLabel);

  }
 
  public com.runwaysdk.query.SelectableChar getContainerId()
  {
    return getContainerId(null);

  }
 
  public com.runwaysdk.query.SelectableChar getContainerId(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getSelectable(dss.vector.solutions.entomology.PupalContainerView.CONTAINERID, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getContainerId(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getSelectable(dss.vector.solutions.entomology.PupalContainerView.CONTAINERID, alias, displayLabel);

  }
 
  public com.runwaysdk.query.SelectableDecimal getContainerLength()
  {
    return getContainerLength(null);

  }
 
  public com.runwaysdk.query.SelectableDecimal getContainerLength(String alias)
  {
    return (com.runwaysdk.query.SelectableDecimal)this.getSelectable(dss.vector.solutions.entomology.PupalContainerView.CONTAINERLENGTH, alias, null);

  }
 
  public com.runwaysdk.query.SelectableDecimal getContainerLength(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableDecimal)this.getSelectable(dss.vector.solutions.entomology.PupalContainerView.CONTAINERLENGTH, alias, displayLabel);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getContainerType()
  {
    return getContainerType(null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getContainerType(String alias)
  {

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.PupalContainerView.CONTAINERTYPE, alias, null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getContainerType(String alias, String displayLabel)
  {

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.PupalContainerView.CONTAINERTYPE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableDecimal getDiameter()
  {
    return getDiameter(null);

  }
 
  public com.runwaysdk.query.SelectableDecimal getDiameter(String alias)
  {
    return (com.runwaysdk.query.SelectableDecimal)this.getSelectable(dss.vector.solutions.entomology.PupalContainerView.DIAMETER, alias, null);

  }
 
  public com.runwaysdk.query.SelectableDecimal getDiameter(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableDecimal)this.getSelectable(dss.vector.solutions.entomology.PupalContainerView.DIAMETER, alias, displayLabel);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getDrawdownFrequency()
  {
    return getDrawdownFrequency(null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getDrawdownFrequency(String alias)
  {

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.PupalContainerView.DRAWDOWNFREQUENCY, alias, null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getDrawdownFrequency(String alias, String displayLabel)
  {

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.PupalContainerView.DRAWDOWNFREQUENCY, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableInteger getDrawdownPercent()
  {
    return getDrawdownPercent(null);

  }
 
  public com.runwaysdk.query.SelectableInteger getDrawdownPercent(String alias)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getSelectable(dss.vector.solutions.entomology.PupalContainerView.DRAWDOWNPERCENT, alias, null);

  }
 
  public com.runwaysdk.query.SelectableInteger getDrawdownPercent(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableInteger)this.getSelectable(dss.vector.solutions.entomology.PupalContainerView.DRAWDOWNPERCENT, alias, displayLabel);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getFillFrequency()
  {
    return getFillFrequency(null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getFillFrequency(String alias)
  {

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.PupalContainerView.FILLFREQUENCY, alias, null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getFillFrequency(String alias, String displayLabel)
  {

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.PupalContainerView.FILLFREQUENCY, alias, displayLabel);

  }
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getFillMethod()
  {
    return getFillMethod(null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getFillMethod(String alias)
  {

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.PupalContainerView.FILLMETHOD, alias, null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getFillMethod(String alias, String displayLabel)
  {

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.PupalContainerView.FILLMETHOD, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableDecimal getHeight()
  {
    return getHeight(null);

  }
 
  public com.runwaysdk.query.SelectableDecimal getHeight(String alias)
  {
    return (com.runwaysdk.query.SelectableDecimal)this.getSelectable(dss.vector.solutions.entomology.PupalContainerView.HEIGHT, alias, null);

  }
 
  public com.runwaysdk.query.SelectableDecimal getHeight(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableDecimal)this.getSelectable(dss.vector.solutions.entomology.PupalContainerView.HEIGHT, alias, displayLabel);

  }
 
  public com.runwaysdk.query.SelectableChar getId()
  {
    return getId(null);

  }
 
  public com.runwaysdk.query.SelectableChar getId(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getSelectable(dss.vector.solutions.entomology.PupalContainerView.ID, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getId(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getSelectable(dss.vector.solutions.entomology.PupalContainerView.ID, alias, displayLabel);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getLid()
  {
    return getLid(null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getLid(String alias)
  {

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.PupalContainerView.LID, alias, null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getLid(String alias, String displayLabel)
  {

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.PupalContainerView.LID, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableDecimal getOpeningDiameter()
  {
    return getOpeningDiameter(null);

  }
 
  public com.runwaysdk.query.SelectableDecimal getOpeningDiameter(String alias)
  {
    return (com.runwaysdk.query.SelectableDecimal)this.getSelectable(dss.vector.solutions.entomology.PupalContainerView.OPENINGDIAMETER, alias, null);

  }
 
  public com.runwaysdk.query.SelectableDecimal getOpeningDiameter(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableDecimal)this.getSelectable(dss.vector.solutions.entomology.PupalContainerView.OPENINGDIAMETER, alias, displayLabel);

  }
 
  public com.runwaysdk.query.SelectableDecimal getOpeningLength()
  {
    return getOpeningLength(null);

  }
 
  public com.runwaysdk.query.SelectableDecimal getOpeningLength(String alias)
  {
    return (com.runwaysdk.query.SelectableDecimal)this.getSelectable(dss.vector.solutions.entomology.PupalContainerView.OPENINGLENGTH, alias, null);

  }
 
  public com.runwaysdk.query.SelectableDecimal getOpeningLength(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableDecimal)this.getSelectable(dss.vector.solutions.entomology.PupalContainerView.OPENINGLENGTH, alias, displayLabel);

  }
 
  public com.runwaysdk.query.SelectableDecimal getOpeningWidth()
  {
    return getOpeningWidth(null);

  }
 
  public com.runwaysdk.query.SelectableDecimal getOpeningWidth(String alias)
  {
    return (com.runwaysdk.query.SelectableDecimal)this.getSelectable(dss.vector.solutions.entomology.PupalContainerView.OPENINGWIDTH, alias, null);

  }
 
  public com.runwaysdk.query.SelectableDecimal getOpeningWidth(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableDecimal)this.getSelectable(dss.vector.solutions.entomology.PupalContainerView.OPENINGWIDTH, alias, displayLabel);

  }
 
  public dss.vector.solutions.entomology.PupalPremiseQuery.PupalPremiseQueryReferenceIF getPremise()
  {
    return getPremise(null);

  }
 
  public dss.vector.solutions.entomology.PupalPremiseQuery.PupalPremiseQueryReferenceIF getPremise(String alias)
  {

    return (dss.vector.solutions.entomology.PupalPremiseQuery.PupalPremiseQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.PupalContainerView.PREMISE, alias, null);

  }
 
  public dss.vector.solutions.entomology.PupalPremiseQuery.PupalPremiseQueryReferenceIF getPremise(String alias, String displayLabel)
  {

    return (dss.vector.solutions.entomology.PupalPremiseQuery.PupalPremiseQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.PupalContainerView.PREMISE, alias, displayLabel);

  }
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getPupaeAmount()
  {
    return getPupaeAmount(null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getPupaeAmount(String alias)
  {

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.PupalContainerView.PUPAEAMOUNT, alias, null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getPupaeAmount(String alias, String displayLabel)
  {

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.PupalContainerView.PUPAEAMOUNT, alias, displayLabel);

  }
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getRoof()
  {
    return getRoof(null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getRoof(String alias)
  {

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.PupalContainerView.ROOF, alias, null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getRoof(String alias, String displayLabel)
  {

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.PupalContainerView.ROOF, alias, displayLabel);

  }
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getShading()
  {
    return getShading(null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getShading(String alias)
  {

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.PupalContainerView.SHADING, alias, null);

  }
 
  public dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF getShading(String alias, String displayLabel)
  {

    return (dss.vector.solutions.ontology.TermQuery.TermQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.PupalContainerView.SHADING, alias, displayLabel);

  }
  public dss.vector.solutions.entomology.ContainerShapeMasterQuery.ContainerShapeQueryIF getShape()
  {
    return getShape(null);

  }
 
  public dss.vector.solutions.entomology.ContainerShapeMasterQuery.ContainerShapeQueryIF getShape(String alias)
  {
    return (dss.vector.solutions.entomology.ContainerShapeMasterQuery.ContainerShapeQueryIF)this.getSelectable(dss.vector.solutions.entomology.PupalContainerView.SHAPE, alias, null);

  }
 
  public dss.vector.solutions.entomology.ContainerShapeMasterQuery.ContainerShapeQueryIF getShape(String alias, String displayLabel)
  {
    return (dss.vector.solutions.entomology.ContainerShapeMasterQuery.ContainerShapeQueryIF)this.getSelectable(dss.vector.solutions.entomology.PupalContainerView.SHAPE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableDecimal getWidth()
  {
    return getWidth(null);

  }
 
  public com.runwaysdk.query.SelectableDecimal getWidth(String alias)
  {
    return (com.runwaysdk.query.SelectableDecimal)this.getSelectable(dss.vector.solutions.entomology.PupalContainerView.WIDTH, alias, null);

  }
 
  public com.runwaysdk.query.SelectableDecimal getWidth(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableDecimal)this.getSelectable(dss.vector.solutions.entomology.PupalContainerView.WIDTH, alias, displayLabel);

  }
 
  /**  
   * Returns an iterator of Business objects that match the query criteria specified
   * on this query object. 
   * @return iterator of Business objects that match the query criteria specified
   * on this query object.
   */
  @java.lang.SuppressWarnings("unchecked")
  public com.runwaysdk.query.OIterator<? extends PupalContainerView> getIterator()
  {
    com.runwaysdk.query.ValueIterator valueIterator;
    if (_pageSize != null && _pageNumber != null)
    {
      valueIterator = (com.runwaysdk.query.ValueIterator<com.runwaysdk.dataaccess.ValueObject>)this.getComponentQuery().getIterator(_pageSize, _pageNumber);
    }
    else
    {
      valueIterator = (com.runwaysdk.query.ValueIterator<com.runwaysdk.dataaccess.ValueObject>)this.getComponentQuery().getIterator();
    }
    return new com.runwaysdk.query.ViewIterator<PupalContainerView>(this.getMdClassIF(), valueIterator);
  }

}
