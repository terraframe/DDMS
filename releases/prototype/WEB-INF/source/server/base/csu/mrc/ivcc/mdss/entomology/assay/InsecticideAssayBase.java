package csu.mrc.ivcc.mdss.entomology.assay;

/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to InsecticideAssay.java
 *
 * @author Autogenerated by TerraFrame
 */
public abstract class InsecticideAssayBase extends csu.mrc.ivcc.mdss.entomology.assay.AdultAssay implements com.terraframe.mojo.generation.loader.Reloadable
{
  public final static String CLASS = "csu.mrc.ivcc.mdss.entomology.assay.InsecticideAssay";
  public static java.lang.String AMOUNT = "amount";
  public static java.lang.String GENERICNAME = "genericName";
  public static java.lang.String INSECTICIDE = "insecticide";
  public static java.lang.String UNITS = "units";
  private static final long serialVersionUID = 1236803173438L;
  
  public InsecticideAssayBase()
  {
    super();
  }
  
  public Integer getAmount()
  {
    return com.terraframe.mojo.constants.MdAttributeIntegerUtil.getTypeSafeValue(getValue(AMOUNT));
  }
  
  public void validateAmount()
  {
    this.validateAttribute(AMOUNT);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getAmountMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(csu.mrc.ivcc.mdss.entomology.assay.InsecticideAssay.CLASS);
    return mdClassIF.definesAttribute(AMOUNT);
  }
  
  public void setAmount(Integer value)
  {
    if(value == null)
    {
      setValue(AMOUNT, "");
    }
    else
    {
      setValue(AMOUNT, java.lang.Integer.toString(value));
    }
  }
  
  public String getGenericName()
  {
    return getValue(GENERICNAME);
  }
  
  public void validateGenericName()
  {
    this.validateAttribute(GENERICNAME);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getGenericNameMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(csu.mrc.ivcc.mdss.entomology.assay.InsecticideAssay.CLASS);
    return mdClassIF.definesAttribute(GENERICNAME);
  }
  
  public void setGenericName(String value)
  {
    if(value == null)
    {
      setValue(GENERICNAME, "");
    }
    else
    {
      setValue(GENERICNAME, value);
    }
  }
  
  public csu.mrc.ivcc.mdss.mo.Insecticide getInsecticide()
  {
    try
    {
      return csu.mrc.ivcc.mdss.mo.Insecticide.get(getValue(INSECTICIDE));
    }
    catch (com.terraframe.mojo.dataaccess.cache.DataNotFoundException e)
    {
      return null;
    }
  }
  
  public void validateInsecticide()
  {
    this.validateAttribute(INSECTICIDE);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getInsecticideMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(csu.mrc.ivcc.mdss.entomology.assay.InsecticideAssay.CLASS);
    return mdClassIF.definesAttribute(INSECTICIDE);
  }
  
  public void setInsecticide(csu.mrc.ivcc.mdss.mo.Insecticide value)
  {
    if(value == null)
    {
      setValue(INSECTICIDE, "");
    }
    else
    {
      setValue(INSECTICIDE, value.getId());
    }
  }
  
  @SuppressWarnings("unchecked")
  public java.util.List<csu.mrc.ivcc.mdss.entomology.assay.Unit> getUnits()
  {
    return (java.util.List<csu.mrc.ivcc.mdss.entomology.assay.Unit>) getEnumValues(UNITS);
  }
  
  public void addUnits(csu.mrc.ivcc.mdss.entomology.assay.Unit value)
  {
    addEnumItem(UNITS, value.getId());
  }
  
  public void removeUnits(csu.mrc.ivcc.mdss.entomology.assay.Unit value)
  {
    removeEnumItem(UNITS, value.getId());
  }
  
  public void clearUnits()
  {
    clearEnum(UNITS);
  }
  
  public void validateUnits()
  {
    this.validateAttribute(UNITS);
  }
  
  public static com.terraframe.mojo.dataaccess.MdAttributeDAOIF getUnitsMd()
  {
    com.terraframe.mojo.dataaccess.MdClassDAOIF mdClassIF = com.terraframe.mojo.dataaccess.metadata.MdClassDAO.getMdClassDAO(csu.mrc.ivcc.mdss.entomology.assay.InsecticideAssay.CLASS);
    return mdClassIF.definesAttribute(UNITS);
  }
  
  protected String getDeclaredType()
  {
    return CLASS;
  }
  
  public static InsecticideAssayQuery getAllInstances(String sortAttribute, Boolean ascending, Integer pageSize, Integer pageNumber)
  {
    InsecticideAssayQuery query = new InsecticideAssayQuery(new com.terraframe.mojo.query.QueryFactory());
    com.terraframe.mojo.business.Entity.getAllInstances(query, sortAttribute, ascending, pageSize, pageNumber);
    return query;
  }
  
  public static InsecticideAssay get(String id)
  {
    return (InsecticideAssay) com.terraframe.mojo.business.Business.get(id);
  }
  
  public static InsecticideAssay lock(java.lang.String id)
  {
    InsecticideAssay _instance = InsecticideAssay.get(id);
    _instance.lock();
    
    return _instance;
  }
  
  public static InsecticideAssay unlock(java.lang.String id)
  {
    InsecticideAssay _instance = InsecticideAssay.get(id);
    _instance.unlock();
    
    return _instance;
  }
  
  public String toString()
  {
    if (this.isNew())
    {
      return "New: "+ this.getClassDisplayLabel();
    }
    else
    {
      return super.toString();
    }
  }
}
