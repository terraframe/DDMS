package csu.mrc.ivcc.mdss.entomology.assay;

/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to AdultAssay.java
 *
 * @author Autogenerated by TerraFrame
 */
public  class AdultAssayQuery extends csu.mrc.ivcc.mdss.entomology.assay.AbstractAssayQuery
 implements com.terraframe.mojo.generation.loader.Reloadable
{
private static final long serialVersionUID = 1236360376405L;

  public AdultAssayQuery(com.terraframe.mojo.query.QueryFactory componentQueryFactory)
  {
    super(componentQueryFactory);
    if (this.getComponentQuery() == null)
    {
      com.terraframe.mojo.business.BusinessQuery businessQuery = componentQueryFactory.businessQuery(this.getClassType());

       this.setBusinessQuery(businessQuery);
    }
  }

  public String getClassType()
  {
    return "csu.mrc.ivcc.mdss.entomology.assay.AdultAssay";
  }
  public csu.mrc.ivcc.mdss.entomology.assay.AdultAgeRangeQuery.AdultAgeRangeQueryStructIF getAgeRange()
  {
    return getAgeRange(null);

  }
 
  public csu.mrc.ivcc.mdss.entomology.assay.AdultAgeRangeQuery.AdultAgeRangeQueryStructIF getAgeRange(String alias)
  {

    com.terraframe.mojo.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(csu.mrc.ivcc.mdss.entomology.assay.AdultAssay.AGERANGE);

    return (csu.mrc.ivcc.mdss.entomology.assay.AdultAgeRangeQuery.AdultAgeRangeQueryStructIF)this.getComponentQuery().internalAttributeFactory(csu.mrc.ivcc.mdss.entomology.assay.AdultAssay.AGERANGE, mdAttributeIF, this, alias);

  }
  public com.terraframe.mojo.query.AttributeIntegerIF getAmount()
  {
    return getAmount(null);

  }
 
  public com.terraframe.mojo.query.AttributeIntegerIF getAmount(String alias)
  {
    return (com.terraframe.mojo.query.AttributeIntegerIF)this.getComponentQuery().attributeFactory(csu.mrc.ivcc.mdss.entomology.assay.AdultAssay.AMOUNT, "com.terraframe.mojo.system.metadata.MdAttributeInteger", alias);

  }
  public com.terraframe.mojo.query.AttributeIntegerIF getExposureTime()
  {
    return getExposureTime(null);

  }
 
  public com.terraframe.mojo.query.AttributeIntegerIF getExposureTime(String alias)
  {
    return (com.terraframe.mojo.query.AttributeIntegerIF)this.getComponentQuery().attributeFactory(csu.mrc.ivcc.mdss.entomology.assay.AdultAssay.EXPOSURETIME, "com.terraframe.mojo.system.metadata.MdAttributeInteger", alias);

  }
  public com.terraframe.mojo.query.AttributeIntegerIF getFed()
  {
    return getFed(null);

  }
 
  public com.terraframe.mojo.query.AttributeIntegerIF getFed(String alias)
  {
    return (com.terraframe.mojo.query.AttributeIntegerIF)this.getComponentQuery().attributeFactory(csu.mrc.ivcc.mdss.entomology.assay.AdultAssay.FED, "com.terraframe.mojo.system.metadata.MdAttributeInteger", alias);

  }
  public csu.mrc.ivcc.mdss.mo.GenerationQuery.GenerationQueryReferenceIF getGeneration()
  {
    return getGeneration(null);

  }
 
  public csu.mrc.ivcc.mdss.mo.GenerationQuery.GenerationQueryReferenceIF getGeneration(String alias)
  {

    com.terraframe.mojo.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap("generation");

    return (csu.mrc.ivcc.mdss.mo.GenerationQuery.GenerationQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(csu.mrc.ivcc.mdss.entomology.assay.AdultAssay.GENERATION, mdAttributeIF, this, alias);

  }
  public com.terraframe.mojo.query.AttributeCharIF getGenericName()
  {
    return getGenericName(null);

  }
 
  public com.terraframe.mojo.query.AttributeCharIF getGenericName(String alias)
  {
    return (com.terraframe.mojo.query.AttributeCharIF)this.getComponentQuery().attributeFactory(csu.mrc.ivcc.mdss.entomology.assay.AdultAssay.GENERICNAME, "com.terraframe.mojo.system.metadata.MdAttributeCharacter", alias);

  }
  public com.terraframe.mojo.query.AttributeIntegerIF getGravid()
  {
    return getGravid(null);

  }
 
  public com.terraframe.mojo.query.AttributeIntegerIF getGravid(String alias)
  {
    return (com.terraframe.mojo.query.AttributeIntegerIF)this.getComponentQuery().attributeFactory(csu.mrc.ivcc.mdss.entomology.assay.AdultAssay.GRAVID, "com.terraframe.mojo.system.metadata.MdAttributeInteger", alias);

  }
  public csu.mrc.ivcc.mdss.mo.InsecticideQuery.InsecticideQueryReferenceIF getInsecticide()
  {
    return getInsecticide(null);

  }
 
  public csu.mrc.ivcc.mdss.mo.InsecticideQuery.InsecticideQueryReferenceIF getInsecticide(String alias)
  {

    com.terraframe.mojo.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap("insecticide");

    return (csu.mrc.ivcc.mdss.mo.InsecticideQuery.InsecticideQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(csu.mrc.ivcc.mdss.entomology.assay.AdultAssay.INSECTICIDE, mdAttributeIF, this, alias);

  }
  public com.terraframe.mojo.query.AttributeIntegerIF getQuantityTested()
  {
    return getQuantityTested(null);

  }
 
  public com.terraframe.mojo.query.AttributeIntegerIF getQuantityTested(String alias)
  {
    return (com.terraframe.mojo.query.AttributeIntegerIF)this.getComponentQuery().attributeFactory(csu.mrc.ivcc.mdss.entomology.assay.AdultAssay.QUANTITYTESTED, "com.terraframe.mojo.system.metadata.MdAttributeInteger", alias);

  }
  public csu.mrc.ivcc.mdss.entomology.assay.UnitMasterQuery.UnitQueryIF getUnits()
  {
    return getUnits(null);

  }
 
  public csu.mrc.ivcc.mdss.entomology.assay.UnitMasterQuery.UnitQueryIF getUnits(String alias)
  {

    com.terraframe.mojo.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap("units");

    return (csu.mrc.ivcc.mdss.entomology.assay.UnitMasterQuery.UnitQueryIF)this.getComponentQuery().internalAttributeFactory("units", mdAttributeIF, this, alias);

  }
  protected com.terraframe.mojo.query.AttributeReference referenceFactory( com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  com.terraframe.mojo.dataaccess.MdBusinessDAOIF referenceMdBusinessIF, String referenceTableAlias, com.terraframe.mojo.query.ComponentQuery rootQuery, java.util.Set<com.terraframe.mojo.query.Join> tableJoinSet, String userDefinedAlias)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals("generation")) 
    {
       return new csu.mrc.ivcc.mdss.mo.GenerationQuery.GenerationQueryReference((com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias);
    }
    else if (name.equals("insecticide")) 
    {
       return new csu.mrc.ivcc.mdss.mo.InsecticideQuery.InsecticideQueryReference((com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias);
    }
    else 
    {
      return super.referenceFactory(mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias);
    }
  }

  protected com.terraframe.mojo.query.AttributeStruct structFactory( com.terraframe.mojo.dataaccess.MdAttributeStructDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  com.terraframe.mojo.dataaccess.MdStructDAOIF mdStructIF, String structTableAlias, com.terraframe.mojo.query.ComponentQuery rootQuery, java.util.Set<com.terraframe.mojo.query.Join> tableJoinSet, String userDefinedAlias)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals("ageRange")) 
    {
       return new csu.mrc.ivcc.mdss.entomology.assay.AdultAgeRangeQuery.AdultAgeRangeQueryStruct((com.terraframe.mojo.dataaccess.MdAttributeStructDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdStructIF, structTableAlias, rootQuery, tableJoinSet, userDefinedAlias);
    }
    else 
    {
      return super.structFactory(mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, mdStructIF, structTableAlias, rootQuery, tableJoinSet, userDefinedAlias);
    }
  }

  protected com.terraframe.mojo.query.AttributeEnumeration enumerationFactory( com.terraframe.mojo.dataaccess.MdAttributeEnumerationDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  String mdEnumerationTableName, com.terraframe.mojo.dataaccess.MdBusinessDAOIF masterListMdBusinessIF, String masterListTalbeAlias, com.terraframe.mojo.query.ComponentQuery rootQuery, java.util.Set<com.terraframe.mojo.query.Join> tableJoinSet, String userDefinedAlias)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals("units")) 
    {
       return new csu.mrc.ivcc.mdss.entomology.assay.UnitMasterQuery.UnitQuery((com.terraframe.mojo.dataaccess.MdAttributeEnumerationDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdEnumerationTableName, masterListMdBusinessIF, masterListTalbeAlias, rootQuery, tableJoinSet, userDefinedAlias);
    }
    else 
    {
      return super.enumerationFactory(mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, mdEnumerationTableName, masterListMdBusinessIF, masterListTalbeAlias, rootQuery, tableJoinSet, userDefinedAlias);
    }
  }

  /**  
   * Returns an iterator of Business objects that match the query criteria specified
   * on this query object. 
   * @return iterator of Business objects that match the query criteria specified
   * on this query object.
   */
  public com.terraframe.mojo.query.OIterator<? extends AdultAssay> getIterator()
  {
    String sqlStmt;
    if (_limit != null && _skip != null)
    {
      sqlStmt = this.getComponentQuery().getSQL(_limit, _skip);
    }
    else
    {
      sqlStmt = this.getComponentQuery().getSQL();
    }
    java.util.Map<String, com.terraframe.mojo.query.ColumnInfo> columnInfoMap = this.getComponentQuery().getColumnInfoMap();

    java.sql.ResultSet results = com.terraframe.mojo.dataaccess.database.Database.query(sqlStmt);
    return new com.terraframe.mojo.business.BusinessIterator<AdultAssay>(this.getComponentQuery().getMdEntityIF(), columnInfoMap, results);
  }


/**
 * Interface that masks all type unsafe query methods and defines all type safe methods.
 * This type is used when a join is performed on this class as a reference.
 **/
  public interface AdultAssayQueryReferenceIF extends com.terraframe.mojo.generation.loader.Reloadable, csu.mrc.ivcc.mdss.entomology.assay.AbstractAssayQuery.AbstractAssayQueryReferenceIF
  {

    public csu.mrc.ivcc.mdss.entomology.assay.AdultAgeRangeQuery.AdultAgeRangeQueryStructIF getAgeRange();
    public csu.mrc.ivcc.mdss.entomology.assay.AdultAgeRangeQuery.AdultAgeRangeQueryStructIF getAgeRange(String alias);
    public com.terraframe.mojo.query.AttributeIntegerIF getAmount();
    public com.terraframe.mojo.query.AttributeIntegerIF getAmount(String alias);
    public com.terraframe.mojo.query.AttributeIntegerIF getExposureTime();
    public com.terraframe.mojo.query.AttributeIntegerIF getExposureTime(String alias);
    public com.terraframe.mojo.query.AttributeIntegerIF getFed();
    public com.terraframe.mojo.query.AttributeIntegerIF getFed(String alias);
    public csu.mrc.ivcc.mdss.mo.GenerationQuery.GenerationQueryReferenceIF getGeneration();
    public csu.mrc.ivcc.mdss.mo.GenerationQuery.GenerationQueryReferenceIF getGeneration(String alias);
    public com.terraframe.mojo.query.AttributeCharIF getGenericName();
    public com.terraframe.mojo.query.AttributeCharIF getGenericName(String alias);
    public com.terraframe.mojo.query.AttributeIntegerIF getGravid();
    public com.terraframe.mojo.query.AttributeIntegerIF getGravid(String alias);
    public csu.mrc.ivcc.mdss.mo.InsecticideQuery.InsecticideQueryReferenceIF getInsecticide();
    public csu.mrc.ivcc.mdss.mo.InsecticideQuery.InsecticideQueryReferenceIF getInsecticide(String alias);
    public com.terraframe.mojo.query.AttributeIntegerIF getQuantityTested();
    public com.terraframe.mojo.query.AttributeIntegerIF getQuantityTested(String alias);
  public csu.mrc.ivcc.mdss.entomology.assay.UnitMasterQuery.UnitQueryIF getUnits();
  public csu.mrc.ivcc.mdss.entomology.assay.UnitMasterQuery.UnitQueryIF getUnits(String alias);

    public com.terraframe.mojo.query.BasicCondition EQ(csu.mrc.ivcc.mdss.entomology.assay.AdultAssay adultAssay);

    public com.terraframe.mojo.query.BasicCondition NE(csu.mrc.ivcc.mdss.entomology.assay.AdultAssay adultAssay);

  }

/**
 * Implements type safe query methods.
 * This type is used when a join is performed on this class as a reference.
 **/
  public static class AdultAssayQueryReference extends csu.mrc.ivcc.mdss.entomology.assay.AbstractAssayQuery.AbstractAssayQueryReference
 implements AdultAssayQueryReferenceIF
, com.terraframe.mojo.generation.loader.Reloadable
  {
private static final long serialVersionUID = 1236360376541L;

  public AdultAssayQueryReference(com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias, com.terraframe.mojo.dataaccess.MdBusinessDAOIF referenceMdBusinessIF, String referenceTableAlias, com.terraframe.mojo.query.ComponentQuery rootQuery, java.util.Set<com.terraframe.mojo.query.Join> tableJoinSet, String alias)
  {
    super(mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, alias);

  }


    public com.terraframe.mojo.query.BasicCondition EQ(csu.mrc.ivcc.mdss.entomology.assay.AdultAssay adultAssay)
    {
      return this.EQ(adultAssay.getId());
    }

    public com.terraframe.mojo.query.BasicCondition NE(csu.mrc.ivcc.mdss.entomology.assay.AdultAssay adultAssay)
    {
      return this.NE(adultAssay.getId());
    }

  public csu.mrc.ivcc.mdss.entomology.assay.AdultAgeRangeQuery.AdultAgeRangeQueryStructIF getAgeRange()
  {
    return getAgeRange(null);

  }
 
  public csu.mrc.ivcc.mdss.entomology.assay.AdultAgeRangeQuery.AdultAgeRangeQueryStructIF getAgeRange(String alias)
  {
    return (csu.mrc.ivcc.mdss.entomology.assay.AdultAgeRangeQuery.AdultAgeRangeQueryStructIF)this.attributeFactory("ageRange", "com.terraframe.mojo.system.metadata.MdAttributeStruct", alias);

  }
  public com.terraframe.mojo.query.AttributeIntegerIF getAmount()
  {
    return getAmount(null);

  }
 
  public com.terraframe.mojo.query.AttributeIntegerIF getAmount(String alias)
  {
    return (com.terraframe.mojo.query.AttributeIntegerIF)this.attributeFactory("amount", "com.terraframe.mojo.system.metadata.MdAttributeInteger", alias);

  }
  public com.terraframe.mojo.query.AttributeIntegerIF getExposureTime()
  {
    return getExposureTime(null);

  }
 
  public com.terraframe.mojo.query.AttributeIntegerIF getExposureTime(String alias)
  {
    return (com.terraframe.mojo.query.AttributeIntegerIF)this.attributeFactory("exposureTime", "com.terraframe.mojo.system.metadata.MdAttributeInteger", alias);

  }
  public com.terraframe.mojo.query.AttributeIntegerIF getFed()
  {
    return getFed(null);

  }
 
  public com.terraframe.mojo.query.AttributeIntegerIF getFed(String alias)
  {
    return (com.terraframe.mojo.query.AttributeIntegerIF)this.attributeFactory("fed", "com.terraframe.mojo.system.metadata.MdAttributeInteger", alias);

  }
  public csu.mrc.ivcc.mdss.mo.GenerationQuery.GenerationQueryReferenceIF getGeneration()
  {
    return getGeneration(null);

  }
 
  public csu.mrc.ivcc.mdss.mo.GenerationQuery.GenerationQueryReferenceIF getGeneration(String alias)
  {
    return (csu.mrc.ivcc.mdss.mo.GenerationQuery.GenerationQueryReferenceIF)this.attributeFactory("generation", "com.terraframe.mojo.system.metadata.MdAttributeReference", alias);

  }
  public com.terraframe.mojo.query.AttributeCharIF getGenericName()
  {
    return getGenericName(null);

  }
 
  public com.terraframe.mojo.query.AttributeCharIF getGenericName(String alias)
  {
    return (com.terraframe.mojo.query.AttributeCharIF)this.attributeFactory("genericName", "com.terraframe.mojo.system.metadata.MdAttributeCharacter", alias);

  }
  public com.terraframe.mojo.query.AttributeIntegerIF getGravid()
  {
    return getGravid(null);

  }
 
  public com.terraframe.mojo.query.AttributeIntegerIF getGravid(String alias)
  {
    return (com.terraframe.mojo.query.AttributeIntegerIF)this.attributeFactory("gravid", "com.terraframe.mojo.system.metadata.MdAttributeInteger", alias);

  }
  public csu.mrc.ivcc.mdss.mo.InsecticideQuery.InsecticideQueryReferenceIF getInsecticide()
  {
    return getInsecticide(null);

  }
 
  public csu.mrc.ivcc.mdss.mo.InsecticideQuery.InsecticideQueryReferenceIF getInsecticide(String alias)
  {
    return (csu.mrc.ivcc.mdss.mo.InsecticideQuery.InsecticideQueryReferenceIF)this.attributeFactory("insecticide", "com.terraframe.mojo.system.metadata.MdAttributeReference", alias);

  }
  public com.terraframe.mojo.query.AttributeIntegerIF getQuantityTested()
  {
    return getQuantityTested(null);

  }
 
  public com.terraframe.mojo.query.AttributeIntegerIF getQuantityTested(String alias)
  {
    return (com.terraframe.mojo.query.AttributeIntegerIF)this.attributeFactory("quantityTested", "com.terraframe.mojo.system.metadata.MdAttributeInteger", alias);

  }
  public csu.mrc.ivcc.mdss.entomology.assay.UnitMasterQuery.UnitQueryIF getUnits()
  {
    return getUnits(null);

  }
 
  public csu.mrc.ivcc.mdss.entomology.assay.UnitMasterQuery.UnitQueryIF getUnits(String alias)
  {
    return (csu.mrc.ivcc.mdss.entomology.assay.UnitMasterQuery.UnitQueryIF)this.attributeFactory("units", "com.terraframe.mojo.system.metadata.MdAttributeEnumeration", alias);

  }
  protected com.terraframe.mojo.query.AttributeReference referenceFactory( com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  com.terraframe.mojo.dataaccess.MdBusinessDAOIF referenceMdBusinessIF, String referenceTableAlias, com.terraframe.mojo.query.ComponentQuery rootQuery, java.util.Set<com.terraframe.mojo.query.Join> tableJoinSet, String userDefinedAlias)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals("generation")) 
    {
       return new csu.mrc.ivcc.mdss.mo.GenerationQuery.GenerationQueryReference((com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias);
    }
    else if (name.equals("insecticide")) 
    {
       return new csu.mrc.ivcc.mdss.mo.InsecticideQuery.InsecticideQueryReference((com.terraframe.mojo.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias);
    }
    else 
    {
      return super.referenceFactory(mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias);
    }
  }

  protected com.terraframe.mojo.query.AttributeStruct structFactory( com.terraframe.mojo.dataaccess.MdAttributeStructDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  com.terraframe.mojo.dataaccess.MdStructDAOIF mdStructIF, String structTableAlias, com.terraframe.mojo.query.ComponentQuery rootQuery, java.util.Set<com.terraframe.mojo.query.Join> tableJoinSet, String userDefinedAlias)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals("ageRange")) 
    {
       return new csu.mrc.ivcc.mdss.entomology.assay.AdultAgeRangeQuery.AdultAgeRangeQueryStruct((com.terraframe.mojo.dataaccess.MdAttributeStructDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdStructIF, structTableAlias, rootQuery, tableJoinSet, userDefinedAlias);
    }
    else 
    {
      return super.structFactory(mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, mdStructIF, structTableAlias, rootQuery, tableJoinSet, userDefinedAlias);
    }
  }

  protected com.terraframe.mojo.query.AttributeEnumeration enumerationFactory( com.terraframe.mojo.dataaccess.MdAttributeEnumerationDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  String mdEnumerationTableName, com.terraframe.mojo.dataaccess.MdBusinessDAOIF masterListMdBusinessIF, String masterListTalbeAlias, com.terraframe.mojo.query.ComponentQuery rootQuery, java.util.Set<com.terraframe.mojo.query.Join> tableJoinSet, String userDefinedAlias)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals("units")) 
    {
       return new csu.mrc.ivcc.mdss.entomology.assay.UnitMasterQuery.UnitQuery((com.terraframe.mojo.dataaccess.MdAttributeEnumerationDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdEnumerationTableName, masterListMdBusinessIF, masterListTalbeAlias, rootQuery, tableJoinSet, userDefinedAlias);
    }
    else 
    {
      return super.enumerationFactory(mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, mdEnumerationTableName, masterListMdBusinessIF, masterListTalbeAlias, rootQuery, tableJoinSet, userDefinedAlias);
    }
  }

  }
}
