package dss.vector.solutions.entomology;

/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to CompositeMosquitoCollection.java
 *
 * @author Autogenerated by TerraFrame
 */
public abstract class CompositeMosquitoCollectionBase extends dss.vector.solutions.entomology.AbstractMosquitoCollection implements com.terraframe.mojo.generation.loader.Reloadable
{
  public final static String CLASS = "dss.vector.solutions.entomology.CompositeMosquitoCollection";
  private static final long serialVersionUID = 1237311449459L;
  
  public CompositeMosquitoCollectionBase()
  {
    super();
  }
  
  protected String getDeclaredType()
  {
    return CLASS;
  }
  
  public static CompositeMosquitoCollectionQuery getAllInstances(String sortAttribute, Boolean ascending, Integer pageSize, Integer pageNumber)
  {
    CompositeMosquitoCollectionQuery query = new CompositeMosquitoCollectionQuery(new com.terraframe.mojo.query.QueryFactory());
    com.terraframe.mojo.business.Entity.getAllInstances(query, sortAttribute, ascending, pageSize, pageNumber);
    return query;
  }
  
  public static CompositeMosquitoCollection get(String id)
  {
    return (CompositeMosquitoCollection) com.terraframe.mojo.business.Business.get(id);
  }
  
  public dss.vector.solutions.entomology.MosquitoCollectionPointView[] getCollections()
  {
    return null;
  }
  
  public static final dss.vector.solutions.entomology.MosquitoCollectionPointView[] getCollections(java.lang.String id)
  {
    CompositeMosquitoCollection _instance = CompositeMosquitoCollection.get(id);
    return _instance.getCollections();
  }
  
  public static CompositeMosquitoCollection lock(java.lang.String id)
  {
    CompositeMosquitoCollection _instance = CompositeMosquitoCollection.get(id);
    _instance.lock();
    
    return _instance;
  }
  
  public static CompositeMosquitoCollection unlock(java.lang.String id)
  {
    CompositeMosquitoCollection _instance = CompositeMosquitoCollection.get(id);
    _instance.unlock();
    
    return _instance;
  }
  
  public String toString()
  {
    if (this.isNew())
    {
      return "New: "+ this.getClassDisplayLabel();
    }
    else
    {
      return super.toString();
    }
  }
}
