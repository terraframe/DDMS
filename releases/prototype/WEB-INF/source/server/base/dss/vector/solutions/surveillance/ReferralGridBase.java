package dss.vector.solutions.surveillance;

/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to ReferralGrid.java
 *
 * @author Autogenerated by TerraFrame
 */
public abstract class ReferralGridBase extends dss.vector.solutions.surveillance.AbstractGrid implements com.terraframe.mojo.generation.loader.Reloadable
{
  public final static String CLASS = "dss.vector.solutions.surveillance.ReferralGrid";
  private static final long serialVersionUID = 1239517511155L;
  
  public ReferralGridBase()
  {
    super();
  }
  
  protected String getDeclaredType()
  {
    return CLASS;
  }
  
  public static ReferralGridQuery getAllInstances(String sortAttribute, Boolean ascending, Integer pageSize, Integer pageNumber)
  {
    ReferralGridQuery query = new ReferralGridQuery(new com.terraframe.mojo.query.QueryFactory());
    com.terraframe.mojo.business.Entity.getAllInstances(query, sortAttribute, ascending, pageSize, pageNumber);
    return query;
  }
  
  public dss.vector.solutions.surveillance.CaseReferral addAggregatedCase(dss.vector.solutions.surveillance.AggregatedCase aggregatedCase)
  {
    return (dss.vector.solutions.surveillance.CaseReferral) addParent(aggregatedCase, dss.vector.solutions.surveillance.CaseReferral.CLASS);
  }
  
  public void removeAggregatedCase(dss.vector.solutions.surveillance.AggregatedCase aggregatedCase)
  {
    removeAllParents(aggregatedCase, dss.vector.solutions.surveillance.CaseReferral.CLASS);
  }
  
  @SuppressWarnings("unchecked")
  public com.terraframe.mojo.query.OIterator<? extends dss.vector.solutions.surveillance.AggregatedCase> getAllAggregatedCase()
  {
    return (com.terraframe.mojo.query.OIterator<? extends dss.vector.solutions.surveillance.AggregatedCase>) getParents(dss.vector.solutions.surveillance.CaseReferral.CLASS);
  }
  
  @SuppressWarnings("unchecked")
  public com.terraframe.mojo.query.OIterator<? extends dss.vector.solutions.surveillance.CaseReferral> getAllAggregatedCaseRel()
  {
    return (com.terraframe.mojo.query.OIterator<? extends dss.vector.solutions.surveillance.CaseReferral>) getParentRelationships(dss.vector.solutions.surveillance.CaseReferral.CLASS);
  }
  
  @SuppressWarnings("unchecked")
  public dss.vector.solutions.surveillance.CaseReferral getAggregatedCaseRel(dss.vector.solutions.surveillance.AggregatedCase aggregatedCase)
  {
    com.terraframe.mojo.query.OIterator<? extends dss.vector.solutions.surveillance.CaseReferral> iterator = (com.terraframe.mojo.query.OIterator<? extends dss.vector.solutions.surveillance.CaseReferral>) getRelationshipsWithParent(aggregatedCase, dss.vector.solutions.surveillance.CaseReferral.CLASS);
    try
    {
      if (iterator.hasNext())
      {
        return iterator.next();
      }
      else
      {
        return null;
      }
    }
    finally
    {
      iterator.close();
    }
  }
  
  public static ReferralGrid get(String id)
  {
    return (ReferralGrid) com.terraframe.mojo.business.Business.get(id);
  }
  
  public static dss.vector.solutions.surveillance.ReferralGrid[] getAll()
  {
    String msg = "This method should never be invoked.  It should be overwritten in dss.vector.solutions.surveillance.ReferralGrid.java";
    throw new com.terraframe.mojo.dataaccess.metadata.ForbiddenMethodException(msg);
  }
  
  public static ReferralGrid lock(java.lang.String id)
  {
    ReferralGrid _instance = ReferralGrid.get(id);
    _instance.lock();
    
    return _instance;
  }
  
  public static ReferralGrid unlock(java.lang.String id)
  {
    ReferralGrid _instance = ReferralGrid.get(id);
    _instance.unlock();
    
    return _instance;
  }
  
  public String toString()
  {
    if (this.isNew())
    {
      return "New: "+ this.getClassDisplayLabel();
    }
    else
    {
      return super.toString();
    }
  }
}
