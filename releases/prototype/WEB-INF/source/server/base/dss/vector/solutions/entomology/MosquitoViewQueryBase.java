package dss.vector.solutions.entomology;

/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to MosquitoView.java
 *
 * @author Autogenerated by TerraFrame
 */
public  abstract  class MosquitoViewQueryBase extends com.terraframe.mojo.query.GeneratedViewQuery
 implements com.terraframe.mojo.generation.loader.Reloadable
{
private static final long serialVersionUID = 1237423098990L;

  public MosquitoViewQueryBase(com.terraframe.mojo.query.QueryFactory componentQueryFactory)
  {
    super(componentQueryFactory);
  }

  public MosquitoViewQueryBase(com.terraframe.mojo.query.QueryFactory componentQueryFactory, com.terraframe.mojo.query.ViewQueryBuilder viewQueryBuilder)
  {
    super(componentQueryFactory, viewQueryBuilder);
  }
  public String getClassType()
  {
    return "dss.vector.solutions.entomology.MosquitoView";
  }
  public com.terraframe.mojo.query.AttributeIntegerIF getAEsterase()
  {
    return getAEsterase(null);

  }
 
  public com.terraframe.mojo.query.AttributeIntegerIF getAEsterase(String alias)
  {
    return (com.terraframe.mojo.query.AttributeIntegerIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.AESTERASE, alias);

  }
 
  public dss.vector.solutions.mo.BiochemicalMethodologyQuery.BiochemicalMethodologyQueryReferenceIF getAEsteraseMethod()
  {
    return getAEsteraseMethod(null);

  }
 
  public dss.vector.solutions.mo.BiochemicalMethodologyQuery.BiochemicalMethodologyQueryReferenceIF getAEsteraseMethod(String alias)
  {

    return (dss.vector.solutions.mo.BiochemicalMethodologyQuery.BiochemicalMethodologyQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.AESTERASEMETHOD, alias);

  }
  public dss.vector.solutions.mo.MolecularAssayResultQuery.MolecularAssayResultQueryReferenceIF getAcHEBiochemical()
  {
    return getAcHEBiochemical(null);

  }
 
  public dss.vector.solutions.mo.MolecularAssayResultQuery.MolecularAssayResultQueryReferenceIF getAcHEBiochemical(String alias)
  {

    return (dss.vector.solutions.mo.MolecularAssayResultQuery.MolecularAssayResultQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.ACHEBIOCHEMICAL, alias);

  }
  public dss.vector.solutions.mo.BiochemicalMethodologyQuery.BiochemicalMethodologyQueryReferenceIF getAcHEBiochemicalMethod()
  {
    return getAcHEBiochemicalMethod(null);

  }
 
  public dss.vector.solutions.mo.BiochemicalMethodologyQuery.BiochemicalMethodologyQueryReferenceIF getAcHEBiochemicalMethod(String alias)
  {

    return (dss.vector.solutions.mo.BiochemicalMethodologyQuery.BiochemicalMethodologyQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.ACHEBIOCHEMICALMETHOD, alias);

  }
  public dss.vector.solutions.mo.MolecularAssayResultQuery.MolecularAssayResultQueryReferenceIF getAcHEMolecular()
  {
    return getAcHEMolecular(null);

  }
 
  public dss.vector.solutions.mo.MolecularAssayResultQuery.MolecularAssayResultQueryReferenceIF getAcHEMolecular(String alias)
  {

    return (dss.vector.solutions.mo.MolecularAssayResultQuery.MolecularAssayResultQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.ACHEMOLECULAR, alias);

  }
  public dss.vector.solutions.mo.InsecticideMethodologyQuery.InsecticideMethodologyQueryReferenceIF getAcHEMolecularMethod()
  {
    return getAcHEMolecularMethod(null);

  }
 
  public dss.vector.solutions.mo.InsecticideMethodologyQuery.InsecticideMethodologyQueryReferenceIF getAcHEMolecularMethod(String alias)
  {

    return (dss.vector.solutions.mo.InsecticideMethodologyQuery.InsecticideMethodologyQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.ACHEMOLECULARMETHOD, alias);

  }
  public com.terraframe.mojo.query.AttributeIntegerIF getBEsterase()
  {
    return getBEsterase(null);

  }
 
  public com.terraframe.mojo.query.AttributeIntegerIF getBEsterase(String alias)
  {
    return (com.terraframe.mojo.query.AttributeIntegerIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.BESTERASE, alias);

  }
 
  public dss.vector.solutions.mo.BiochemicalMethodologyQuery.BiochemicalMethodologyQueryReferenceIF getBEsteraseMethod()
  {
    return getBEsteraseMethod(null);

  }
 
  public dss.vector.solutions.mo.BiochemicalMethodologyQuery.BiochemicalMethodologyQueryReferenceIF getBEsteraseMethod(String alias)
  {

    return (dss.vector.solutions.mo.BiochemicalMethodologyQuery.BiochemicalMethodologyQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.BESTERASEMETHOD, alias);

  }
  public dss.vector.solutions.entomology.AbstractMosquitoCollectionQuery.AbstractMosquitoCollectionQueryReferenceIF getCollection()
  {
    return getCollection(null);

  }
 
  public dss.vector.solutions.entomology.AbstractMosquitoCollectionQuery.AbstractMosquitoCollectionQueryReferenceIF getCollection(String alias)
  {

    return (dss.vector.solutions.entomology.AbstractMosquitoCollectionQuery.AbstractMosquitoCollectionQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.COLLECTION, alias);

  }
  public dss.vector.solutions.mo.MolecularAssayResultQuery.MolecularAssayResultQueryReferenceIF getEKDR()
  {
    return getEKDR(null);

  }
 
  public dss.vector.solutions.mo.MolecularAssayResultQuery.MolecularAssayResultQueryReferenceIF getEKDR(String alias)
  {

    return (dss.vector.solutions.mo.MolecularAssayResultQuery.MolecularAssayResultQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.EKDR, alias);

  }
  public dss.vector.solutions.mo.InsecticideMethodologyQuery.InsecticideMethodologyQueryReferenceIF getEKDRMethod()
  {
    return getEKDRMethod(null);

  }
 
  public dss.vector.solutions.mo.InsecticideMethodologyQuery.InsecticideMethodologyQueryReferenceIF getEKDRMethod(String alias)
  {

    return (dss.vector.solutions.mo.InsecticideMethodologyQuery.InsecticideMethodologyQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.EKDRMETHOD, alias);

  }
  public dss.vector.solutions.mo.MolecularAssayResultQuery.MolecularAssayResultQueryReferenceIF getGABA()
  {
    return getGABA(null);

  }
 
  public dss.vector.solutions.mo.MolecularAssayResultQuery.MolecularAssayResultQueryReferenceIF getGABA(String alias)
  {

    return (dss.vector.solutions.mo.MolecularAssayResultQuery.MolecularAssayResultQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.GABA, alias);

  }
  public dss.vector.solutions.mo.InsecticideMethodologyQuery.InsecticideMethodologyQueryReferenceIF getGABAMethod()
  {
    return getGABAMethod(null);

  }
 
  public dss.vector.solutions.mo.InsecticideMethodologyQuery.InsecticideMethodologyQueryReferenceIF getGABAMethod(String alias)
  {

    return (dss.vector.solutions.mo.InsecticideMethodologyQuery.InsecticideMethodologyQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.GABAMETHOD, alias);

  }
  public com.terraframe.mojo.query.AttributeIntegerIF getGST()
  {
    return getGST(null);

  }
 
  public com.terraframe.mojo.query.AttributeIntegerIF getGST(String alias)
  {
    return (com.terraframe.mojo.query.AttributeIntegerIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.GST, alias);

  }
 
  public dss.vector.solutions.mo.BiochemicalMethodologyQuery.BiochemicalMethodologyQueryReferenceIF getGSTMethod()
  {
    return getGSTMethod(null);

  }
 
  public dss.vector.solutions.mo.BiochemicalMethodologyQuery.BiochemicalMethodologyQueryReferenceIF getGSTMethod(String alias)
  {

    return (dss.vector.solutions.mo.BiochemicalMethodologyQuery.BiochemicalMethodologyQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.GSTMETHOD, alias);

  }
  public dss.vector.solutions.mo.GenerationQuery.GenerationQueryReferenceIF getGeneration()
  {
    return getGeneration(null);

  }
 
  public dss.vector.solutions.mo.GenerationQuery.GenerationQueryReferenceIF getGeneration(String alias)
  {

    return (dss.vector.solutions.mo.GenerationQuery.GenerationQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.GENERATION, alias);

  }
  public com.terraframe.mojo.query.AttributeCharIF getId()
  {
    return getId(null);

  }
 
  public com.terraframe.mojo.query.AttributeCharIF getId(String alias)
  {
    return (com.terraframe.mojo.query.AttributeCharIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.ID, alias);

  }
 
  public dss.vector.solutions.mo.IdentificationMethodQuery.IdentificationMethodQueryReferenceIF getIdentificationMethod()
  {
    return getIdentificationMethod(null);

  }
 
  public dss.vector.solutions.mo.IdentificationMethodQuery.IdentificationMethodQueryReferenceIF getIdentificationMethod(String alias)
  {

    return (dss.vector.solutions.mo.IdentificationMethodQuery.IdentificationMethodQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.IDENTIFICATIONMETHOD, alias);

  }
  public com.terraframe.mojo.query.AttributeBooleanIF getIsofemale()
  {
    return getIsofemale(null);

  }
 
  public com.terraframe.mojo.query.AttributeBooleanIF getIsofemale(String alias)
  {
    return (com.terraframe.mojo.query.AttributeBooleanIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.ISOFEMALE, alias);

  }
 
  public com.terraframe.mojo.query.AttributeIntegerIF getMonooxygenase()
  {
    return getMonooxygenase(null);

  }
 
  public com.terraframe.mojo.query.AttributeIntegerIF getMonooxygenase(String alias)
  {
    return (com.terraframe.mojo.query.AttributeIntegerIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.MONOOXYGENASE, alias);

  }
 
  public dss.vector.solutions.mo.BiochemicalMethodologyQuery.BiochemicalMethodologyQueryReferenceIF getMonooxygenaseMethod()
  {
    return getMonooxygenaseMethod(null);

  }
 
  public dss.vector.solutions.mo.BiochemicalMethodologyQuery.BiochemicalMethodologyQueryReferenceIF getMonooxygenaseMethod(String alias)
  {

    return (dss.vector.solutions.mo.BiochemicalMethodologyQuery.BiochemicalMethodologyQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.MONOOXYGENASEMETHOD, alias);

  }
  public com.terraframe.mojo.query.AttributeCharIF getMosquitoId()
  {
    return getMosquitoId(null);

  }
 
  public com.terraframe.mojo.query.AttributeCharIF getMosquitoId(String alias)
  {
    return (com.terraframe.mojo.query.AttributeCharIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.MOSQUITOID, alias);

  }
 
  public com.terraframe.mojo.query.AttributeBooleanIF getPFalciparum()
  {
    return getPFalciparum(null);

  }
 
  public com.terraframe.mojo.query.AttributeBooleanIF getPFalciparum(String alias)
  {
    return (com.terraframe.mojo.query.AttributeBooleanIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.PFALCIPARUM, alias);

  }
 
  public dss.vector.solutions.mo.InfectivityMethodologyQuery.InfectivityMethodologyQueryReferenceIF getPFalciparumMethod()
  {
    return getPFalciparumMethod(null);

  }
 
  public dss.vector.solutions.mo.InfectivityMethodologyQuery.InfectivityMethodologyQueryReferenceIF getPFalciparumMethod(String alias)
  {

    return (dss.vector.solutions.mo.InfectivityMethodologyQuery.InfectivityMethodologyQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.PFALCIPARUMMETHOD, alias);

  }
  public com.terraframe.mojo.query.AttributeBooleanIF getPMalariae()
  {
    return getPMalariae(null);

  }
 
  public com.terraframe.mojo.query.AttributeBooleanIF getPMalariae(String alias)
  {
    return (com.terraframe.mojo.query.AttributeBooleanIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.PMALARIAE, alias);

  }
 
  public dss.vector.solutions.mo.InfectivityMethodologyQuery.InfectivityMethodologyQueryReferenceIF getPMalariaeMethod()
  {
    return getPMalariaeMethod(null);

  }
 
  public dss.vector.solutions.mo.InfectivityMethodologyQuery.InfectivityMethodologyQueryReferenceIF getPMalariaeMethod(String alias)
  {

    return (dss.vector.solutions.mo.InfectivityMethodologyQuery.InfectivityMethodologyQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.PMALARIAEMETHOD, alias);

  }
  public com.terraframe.mojo.query.AttributeIntegerIF getPNPA()
  {
    return getPNPA(null);

  }
 
  public com.terraframe.mojo.query.AttributeIntegerIF getPNPA(String alias)
  {
    return (com.terraframe.mojo.query.AttributeIntegerIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.PNPA, alias);

  }
 
  public dss.vector.solutions.mo.BiochemicalMethodologyQuery.BiochemicalMethodologyQueryReferenceIF getPNPAMethod()
  {
    return getPNPAMethod(null);

  }
 
  public dss.vector.solutions.mo.BiochemicalMethodologyQuery.BiochemicalMethodologyQueryReferenceIF getPNPAMethod(String alias)
  {

    return (dss.vector.solutions.mo.BiochemicalMethodologyQuery.BiochemicalMethodologyQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.PNPAMETHOD, alias);

  }
  public com.terraframe.mojo.query.AttributeBooleanIF getPOvale()
  {
    return getPOvale(null);

  }
 
  public com.terraframe.mojo.query.AttributeBooleanIF getPOvale(String alias)
  {
    return (com.terraframe.mojo.query.AttributeBooleanIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.POVALE, alias);

  }
 
  public dss.vector.solutions.mo.InfectivityMethodologyQuery.InfectivityMethodologyQueryReferenceIF getPOvaleMethod()
  {
    return getPOvaleMethod(null);

  }
 
  public dss.vector.solutions.mo.InfectivityMethodologyQuery.InfectivityMethodologyQueryReferenceIF getPOvaleMethod(String alias)
  {

    return (dss.vector.solutions.mo.InfectivityMethodologyQuery.InfectivityMethodologyQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.POVALEMETHOD, alias);

  }
  public com.terraframe.mojo.query.AttributeBooleanIF getPVivax()
  {
    return getPVivax(null);

  }
 
  public com.terraframe.mojo.query.AttributeBooleanIF getPVivax(String alias)
  {
    return (com.terraframe.mojo.query.AttributeBooleanIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.PVIVAX, alias);

  }
 
  public dss.vector.solutions.mo.InfectivityMethodologyQuery.InfectivityMethodologyQueryReferenceIF getPVivaxMethod()
  {
    return getPVivaxMethod(null);

  }
 
  public dss.vector.solutions.mo.InfectivityMethodologyQuery.InfectivityMethodologyQueryReferenceIF getPVivaxMethod(String alias)
  {

    return (dss.vector.solutions.mo.InfectivityMethodologyQuery.InfectivityMethodologyQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.PVIVAXMETHOD, alias);

  }
  public dss.vector.solutions.entomology.SexMasterQuery.SexQueryIF getSex()
  {
    return getSex(null);

  }
 
  public dss.vector.solutions.entomology.SexMasterQuery.SexQueryIF getSex(String alias)
  {
    return (dss.vector.solutions.entomology.SexMasterQuery.SexQueryIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.SEX, alias);

  }
  public dss.vector.solutions.mo.SpecieQuery.SpecieQueryReferenceIF getSpecie()
  {
    return getSpecie(null);

  }
 
  public dss.vector.solutions.mo.SpecieQuery.SpecieQueryReferenceIF getSpecie(String alias)
  {

    return (dss.vector.solutions.mo.SpecieQuery.SpecieQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.SPECIE, alias);

  }
  public com.terraframe.mojo.query.AttributeMomentIF getTestDate()
  {
    return getTestDate(null);

  }
 
  public com.terraframe.mojo.query.AttributeMomentIF getTestDate(String alias)
  {
    return (com.terraframe.mojo.query.AttributeMomentIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.TESTDATE, alias);

  }
 
  public dss.vector.solutions.mo.MolecularAssayResultQuery.MolecularAssayResultQueryReferenceIF getWKDR()
  {
    return getWKDR(null);

  }
 
  public dss.vector.solutions.mo.MolecularAssayResultQuery.MolecularAssayResultQueryReferenceIF getWKDR(String alias)
  {

    return (dss.vector.solutions.mo.MolecularAssayResultQuery.MolecularAssayResultQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.WKDR, alias);

  }
  public dss.vector.solutions.mo.InsecticideMethodologyQuery.InsecticideMethodologyQueryReferenceIF getWKDRMethod()
  {
    return getWKDRMethod(null);

  }
 
  public dss.vector.solutions.mo.InsecticideMethodologyQuery.InsecticideMethodologyQueryReferenceIF getWKDRMethod(String alias)
  {

    return (dss.vector.solutions.mo.InsecticideMethodologyQuery.InsecticideMethodologyQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.WKDRMETHOD, alias);

  }
  /**  
   * Returns an iterator of Business objects that match the query criteria specified
   * on this query object. 
   * @return iterator of Business objects that match the query criteria specified
   * on this query object.
   */
  @java.lang.SuppressWarnings("unchecked")
  public com.terraframe.mojo.query.OIterator<? extends MosquitoView> getIterator()
  {
    com.terraframe.mojo.query.ValueIterator valueIterator;
    if (_pageSize != null && _pageNumber != null)
    {
      valueIterator = (com.terraframe.mojo.query.ValueIterator<com.terraframe.mojo.dataaccess.ValueObject>)this.getComponentQuery().getIterator(_pageSize, _pageNumber);
    }
    else
    {
      valueIterator = (com.terraframe.mojo.query.ValueIterator<com.terraframe.mojo.dataaccess.ValueObject>)this.getComponentQuery().getIterator();
    }
    return new com.terraframe.mojo.query.ViewIterator<MosquitoView>(this.getMdClassIF(), valueIterator);
  }

}
