package dss.vector.solutions.entomology;

/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to MosquitoView.java
 *
 * @author Autogenerated by TerraFrame
 */
public  abstract  class MosquitoViewQueryBase extends com.terraframe.mojo.query.GeneratedViewQuery
 implements com.terraframe.mojo.generation.loader.Reloadable
{
private static final long serialVersionUID = 1239075016269L;

  public MosquitoViewQueryBase(com.terraframe.mojo.query.QueryFactory componentQueryFactory)
  {
    super(componentQueryFactory);
  }

  public MosquitoViewQueryBase(com.terraframe.mojo.query.QueryFactory componentQueryFactory, com.terraframe.mojo.query.ViewQueryBuilder viewQueryBuilder)
  {
    super(componentQueryFactory, viewQueryBuilder);
  }
  public String getClassType()
  {
    return "dss.vector.solutions.entomology.MosquitoView";
  }
  public com.terraframe.mojo.query.AttributeBooleanIF getAAcetate()
  {
    return getAAcetate(null);

  }
 
  public com.terraframe.mojo.query.AttributeBooleanIF getAAcetate(String alias)
  {
    return (com.terraframe.mojo.query.AttributeBooleanIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.AACETATE, alias);

  }
 
  public dss.vector.solutions.mo.MolecularAssayResultQuery.MolecularAssayResultQueryReferenceIF getAcHES()
  {
    return getAcHES(null);

  }
 
  public dss.vector.solutions.mo.MolecularAssayResultQuery.MolecularAssayResultQueryReferenceIF getAcHES(String alias)
  {

    return (dss.vector.solutions.mo.MolecularAssayResultQuery.MolecularAssayResultQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.ACHES, alias);

  }
  public dss.vector.solutions.mo.InsecticideMethodologyQuery.InsecticideMethodologyQueryReferenceIF getAcHESMethod()
  {
    return getAcHESMethod(null);

  }
 
  public dss.vector.solutions.mo.InsecticideMethodologyQuery.InsecticideMethodologyQueryReferenceIF getAcHESMethod(String alias)
  {

    return (dss.vector.solutions.mo.InsecticideMethodologyQuery.InsecticideMethodologyQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.ACHESMETHOD, alias);

  }
  public dss.vector.solutions.mo.MolecularAssayResultQuery.MolecularAssayResultQueryReferenceIF getAcHEV()
  {
    return getAcHEV(null);

  }
 
  public dss.vector.solutions.mo.MolecularAssayResultQuery.MolecularAssayResultQueryReferenceIF getAcHEV(String alias)
  {

    return (dss.vector.solutions.mo.MolecularAssayResultQuery.MolecularAssayResultQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.ACHEV, alias);

  }
  public dss.vector.solutions.mo.InsecticideMethodologyQuery.InsecticideMethodologyQueryReferenceIF getAcHEVMethod()
  {
    return getAcHEVMethod(null);

  }
 
  public dss.vector.solutions.mo.InsecticideMethodologyQuery.InsecticideMethodologyQueryReferenceIF getAcHEVMethod(String alias)
  {

    return (dss.vector.solutions.mo.InsecticideMethodologyQuery.InsecticideMethodologyQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.ACHEVMETHOD, alias);

  }
  public dss.vector.solutions.mo.MolecularAssayResultQuery.MolecularAssayResultQueryReferenceIF getAcHEW()
  {
    return getAcHEW(null);

  }
 
  public dss.vector.solutions.mo.MolecularAssayResultQuery.MolecularAssayResultQueryReferenceIF getAcHEW(String alias)
  {

    return (dss.vector.solutions.mo.MolecularAssayResultQuery.MolecularAssayResultQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.ACHEW, alias);

  }
  public dss.vector.solutions.mo.InsecticideMethodologyQuery.InsecticideMethodologyQueryReferenceIF getAcHEWMethod()
  {
    return getAcHEWMethod(null);

  }
 
  public dss.vector.solutions.mo.InsecticideMethodologyQuery.InsecticideMethodologyQueryReferenceIF getAcHEWMethod(String alias)
  {

    return (dss.vector.solutions.mo.InsecticideMethodologyQuery.InsecticideMethodologyQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.ACHEWMETHOD, alias);

  }
  public com.terraframe.mojo.query.AttributeBooleanIF getBAcetate()
  {
    return getBAcetate(null);

  }
 
  public com.terraframe.mojo.query.AttributeBooleanIF getBAcetate(String alias)
  {
    return (com.terraframe.mojo.query.AttributeBooleanIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.BACETATE, alias);

  }
 
  public dss.vector.solutions.entomology.AbstractMosquitoCollectionQuery.AbstractMosquitoCollectionQueryReferenceIF getCollection()
  {
    return getCollection(null);

  }
 
  public dss.vector.solutions.entomology.AbstractMosquitoCollectionQuery.AbstractMosquitoCollectionQueryReferenceIF getCollection(String alias)
  {

    return (dss.vector.solutions.entomology.AbstractMosquitoCollectionQuery.AbstractMosquitoCollectionQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.COLLECTION, alias);

  }
  public dss.vector.solutions.mo.MolecularAssayResultQuery.MolecularAssayResultQueryReferenceIF getEKDR()
  {
    return getEKDR(null);

  }
 
  public dss.vector.solutions.mo.MolecularAssayResultQuery.MolecularAssayResultQueryReferenceIF getEKDR(String alias)
  {

    return (dss.vector.solutions.mo.MolecularAssayResultQuery.MolecularAssayResultQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.EKDR, alias);

  }
  public dss.vector.solutions.mo.InsecticideMethodologyQuery.InsecticideMethodologyQueryReferenceIF getEKDRMethod()
  {
    return getEKDRMethod(null);

  }
 
  public dss.vector.solutions.mo.InsecticideMethodologyQuery.InsecticideMethodologyQueryReferenceIF getEKDRMethod(String alias)
  {

    return (dss.vector.solutions.mo.InsecticideMethodologyQuery.InsecticideMethodologyQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.EKDRMETHOD, alias);

  }
  public dss.vector.solutions.mo.MolecularAssayResultQuery.MolecularAssayResultQueryReferenceIF getGABAG()
  {
    return getGABAG(null);

  }
 
  public dss.vector.solutions.mo.MolecularAssayResultQuery.MolecularAssayResultQueryReferenceIF getGABAG(String alias)
  {

    return (dss.vector.solutions.mo.MolecularAssayResultQuery.MolecularAssayResultQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.GABAG, alias);

  }
  public dss.vector.solutions.mo.InsecticideMethodologyQuery.InsecticideMethodologyQueryReferenceIF getGABAGMethod()
  {
    return getGABAGMethod(null);

  }
 
  public dss.vector.solutions.mo.InsecticideMethodologyQuery.InsecticideMethodologyQueryReferenceIF getGABAGMethod(String alias)
  {

    return (dss.vector.solutions.mo.InsecticideMethodologyQuery.InsecticideMethodologyQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.GABAGMETHOD, alias);

  }
  public dss.vector.solutions.mo.MolecularAssayResultQuery.MolecularAssayResultQueryReferenceIF getGABAS()
  {
    return getGABAS(null);

  }
 
  public dss.vector.solutions.mo.MolecularAssayResultQuery.MolecularAssayResultQueryReferenceIF getGABAS(String alias)
  {

    return (dss.vector.solutions.mo.MolecularAssayResultQuery.MolecularAssayResultQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.GABAS, alias);

  }
  public dss.vector.solutions.mo.InsecticideMethodologyQuery.InsecticideMethodologyQueryReferenceIF getGABASMethod()
  {
    return getGABASMethod(null);

  }
 
  public dss.vector.solutions.mo.InsecticideMethodologyQuery.InsecticideMethodologyQueryReferenceIF getGABASMethod(String alias)
  {

    return (dss.vector.solutions.mo.InsecticideMethodologyQuery.InsecticideMethodologyQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.GABASMETHOD, alias);

  }
  public com.terraframe.mojo.query.AttributeBooleanIF getGSTCDNB()
  {
    return getGSTCDNB(null);

  }
 
  public com.terraframe.mojo.query.AttributeBooleanIF getGSTCDNB(String alias)
  {
    return (com.terraframe.mojo.query.AttributeBooleanIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.GSTCDNB, alias);

  }
 
  public com.terraframe.mojo.query.AttributeBooleanIF getGSTDCNB()
  {
    return getGSTDCNB(null);

  }
 
  public com.terraframe.mojo.query.AttributeBooleanIF getGSTDCNB(String alias)
  {
    return (com.terraframe.mojo.query.AttributeBooleanIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.GSTDCNB, alias);

  }
 
  public dss.vector.solutions.mo.GenerationQuery.GenerationQueryReferenceIF getGeneration()
  {
    return getGeneration(null);

  }
 
  public dss.vector.solutions.mo.GenerationQuery.GenerationQueryReferenceIF getGeneration(String alias)
  {

    return (dss.vector.solutions.mo.GenerationQuery.GenerationQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.GENERATION, alias);

  }
  public com.terraframe.mojo.query.AttributeBooleanIF getHeme()
  {
    return getHeme(null);

  }
 
  public com.terraframe.mojo.query.AttributeBooleanIF getHeme(String alias)
  {
    return (com.terraframe.mojo.query.AttributeBooleanIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.HEME, alias);

  }
 
  public dss.vector.solutions.mo.MolecularAssayResultQuery.MolecularAssayResultQueryReferenceIF getIAcHE()
  {
    return getIAcHE(null);

  }
 
  public dss.vector.solutions.mo.MolecularAssayResultQuery.MolecularAssayResultQueryReferenceIF getIAcHE(String alias)
  {

    return (dss.vector.solutions.mo.MolecularAssayResultQuery.MolecularAssayResultQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.IACHE, alias);

  }
  public dss.vector.solutions.mo.InsecticideMethodologyQuery.InsecticideMethodologyQueryReferenceIF getIAcHEMethod()
  {
    return getIAcHEMethod(null);

  }
 
  public dss.vector.solutions.mo.InsecticideMethodologyQuery.InsecticideMethodologyQueryReferenceIF getIAcHEMethod(String alias)
  {

    return (dss.vector.solutions.mo.InsecticideMethodologyQuery.InsecticideMethodologyQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.IACHEMETHOD, alias);

  }
  public com.terraframe.mojo.query.AttributeCharIF getId()
  {
    return getId(null);

  }
 
  public com.terraframe.mojo.query.AttributeCharIF getId(String alias)
  {
    return (com.terraframe.mojo.query.AttributeCharIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.ID, alias);

  }
 
  public dss.vector.solutions.mo.IdentificationMethodQuery.IdentificationMethodQueryReferenceIF getIdentificationMethod()
  {
    return getIdentificationMethod(null);

  }
 
  public dss.vector.solutions.mo.IdentificationMethodQuery.IdentificationMethodQueryReferenceIF getIdentificationMethod(String alias)
  {

    return (dss.vector.solutions.mo.IdentificationMethodQuery.IdentificationMethodQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.IDENTIFICATIONMETHOD, alias);

  }
  public com.terraframe.mojo.query.AttributeBooleanIF getIsofemale()
  {
    return getIsofemale(null);

  }
 
  public com.terraframe.mojo.query.AttributeBooleanIF getIsofemale(String alias)
  {
    return (com.terraframe.mojo.query.AttributeBooleanIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.ISOFEMALE, alias);

  }
 
  public com.terraframe.mojo.query.AttributeCharIF getMosquitoId()
  {
    return getMosquitoId(null);

  }
 
  public com.terraframe.mojo.query.AttributeCharIF getMosquitoId(String alias)
  {
    return (com.terraframe.mojo.query.AttributeCharIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.MOSQUITOID, alias);

  }
 
  public com.terraframe.mojo.query.AttributeBooleanIF getP450()
  {
    return getP450(null);

  }
 
  public com.terraframe.mojo.query.AttributeBooleanIF getP450(String alias)
  {
    return (com.terraframe.mojo.query.AttributeBooleanIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.P450, alias);

  }
 
  public com.terraframe.mojo.query.AttributeBooleanIF getPFalciparum()
  {
    return getPFalciparum(null);

  }
 
  public com.terraframe.mojo.query.AttributeBooleanIF getPFalciparum(String alias)
  {
    return (com.terraframe.mojo.query.AttributeBooleanIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.PFALCIPARUM, alias);

  }
 
  public dss.vector.solutions.mo.InfectivityMethodologyQuery.InfectivityMethodologyQueryReferenceIF getPFalciparumMethod()
  {
    return getPFalciparumMethod(null);

  }
 
  public dss.vector.solutions.mo.InfectivityMethodologyQuery.InfectivityMethodologyQueryReferenceIF getPFalciparumMethod(String alias)
  {

    return (dss.vector.solutions.mo.InfectivityMethodologyQuery.InfectivityMethodologyQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.PFALCIPARUMMETHOD, alias);

  }
  public com.terraframe.mojo.query.AttributeBooleanIF getPMalariae()
  {
    return getPMalariae(null);

  }
 
  public com.terraframe.mojo.query.AttributeBooleanIF getPMalariae(String alias)
  {
    return (com.terraframe.mojo.query.AttributeBooleanIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.PMALARIAE, alias);

  }
 
  public dss.vector.solutions.mo.InfectivityMethodologyQuery.InfectivityMethodologyQueryReferenceIF getPMalariaeMethod()
  {
    return getPMalariaeMethod(null);

  }
 
  public dss.vector.solutions.mo.InfectivityMethodologyQuery.InfectivityMethodologyQueryReferenceIF getPMalariaeMethod(String alias)
  {

    return (dss.vector.solutions.mo.InfectivityMethodologyQuery.InfectivityMethodologyQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.PMALARIAEMETHOD, alias);

  }
  public com.terraframe.mojo.query.AttributeBooleanIF getPNPA()
  {
    return getPNPA(null);

  }
 
  public com.terraframe.mojo.query.AttributeBooleanIF getPNPA(String alias)
  {
    return (com.terraframe.mojo.query.AttributeBooleanIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.PNPA, alias);

  }
 
  public com.terraframe.mojo.query.AttributeBooleanIF getPOvale()
  {
    return getPOvale(null);

  }
 
  public com.terraframe.mojo.query.AttributeBooleanIF getPOvale(String alias)
  {
    return (com.terraframe.mojo.query.AttributeBooleanIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.POVALE, alias);

  }
 
  public dss.vector.solutions.mo.InfectivityMethodologyQuery.InfectivityMethodologyQueryReferenceIF getPOvaleMethod()
  {
    return getPOvaleMethod(null);

  }
 
  public dss.vector.solutions.mo.InfectivityMethodologyQuery.InfectivityMethodologyQueryReferenceIF getPOvaleMethod(String alias)
  {

    return (dss.vector.solutions.mo.InfectivityMethodologyQuery.InfectivityMethodologyQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.POVALEMETHOD, alias);

  }
  public com.terraframe.mojo.query.AttributeBooleanIF getPVivax()
  {
    return getPVivax(null);

  }
 
  public com.terraframe.mojo.query.AttributeBooleanIF getPVivax(String alias)
  {
    return (com.terraframe.mojo.query.AttributeBooleanIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.PVIVAX, alias);

  }
 
  public dss.vector.solutions.mo.InfectivityMethodologyQuery.InfectivityMethodologyQueryReferenceIF getPVivaxMethod()
  {
    return getPVivaxMethod(null);

  }
 
  public dss.vector.solutions.mo.InfectivityMethodologyQuery.InfectivityMethodologyQueryReferenceIF getPVivaxMethod(String alias)
  {

    return (dss.vector.solutions.mo.InfectivityMethodologyQuery.InfectivityMethodologyQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.PVIVAXMETHOD, alias);

  }
  public com.terraframe.mojo.query.AttributeCharIF getSampleId()
  {
    return getSampleId(null);

  }
 
  public com.terraframe.mojo.query.AttributeCharIF getSampleId(String alias)
  {
    return (com.terraframe.mojo.query.AttributeCharIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.SAMPLEID, alias);

  }
 
  public dss.vector.solutions.entomology.SexMasterQuery.SexQueryIF getSex()
  {
    return getSex(null);

  }
 
  public dss.vector.solutions.entomology.SexMasterQuery.SexQueryIF getSex(String alias)
  {
    return (dss.vector.solutions.entomology.SexMasterQuery.SexQueryIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.SEX, alias);

  }
  public dss.vector.solutions.mo.SpecieQuery.SpecieQueryReferenceIF getSpecie()
  {
    return getSpecie(null);

  }
 
  public dss.vector.solutions.mo.SpecieQuery.SpecieQueryReferenceIF getSpecie(String alias)
  {

    return (dss.vector.solutions.mo.SpecieQuery.SpecieQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.SPECIE, alias);

  }
  public com.terraframe.mojo.query.AttributeMomentIF getTestDate()
  {
    return getTestDate(null);

  }
 
  public com.terraframe.mojo.query.AttributeMomentIF getTestDate(String alias)
  {
    return (com.terraframe.mojo.query.AttributeMomentIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.TESTDATE, alias);

  }
 
  public dss.vector.solutions.mo.MolecularAssayResultQuery.MolecularAssayResultQueryReferenceIF getWKDR()
  {
    return getWKDR(null);

  }
 
  public dss.vector.solutions.mo.MolecularAssayResultQuery.MolecularAssayResultQueryReferenceIF getWKDR(String alias)
  {

    return (dss.vector.solutions.mo.MolecularAssayResultQuery.MolecularAssayResultQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.WKDR, alias);

  }
  public dss.vector.solutions.mo.InsecticideMethodologyQuery.InsecticideMethodologyQueryReferenceIF getWKDRMethod()
  {
    return getWKDRMethod(null);

  }
 
  public dss.vector.solutions.mo.InsecticideMethodologyQuery.InsecticideMethodologyQueryReferenceIF getWKDRMethod(String alias)
  {

    return (dss.vector.solutions.mo.InsecticideMethodologyQuery.InsecticideMethodologyQueryReferenceIF)this.getSelectable(dss.vector.solutions.entomology.MosquitoView.WKDRMETHOD, alias);

  }
  /**  
   * Returns an iterator of Business objects that match the query criteria specified
   * on this query object. 
   * @return iterator of Business objects that match the query criteria specified
   * on this query object.
   */
  @java.lang.SuppressWarnings("unchecked")
  public com.terraframe.mojo.query.OIterator<? extends MosquitoView> getIterator()
  {
    com.terraframe.mojo.query.ValueIterator valueIterator;
    if (_pageSize != null && _pageNumber != null)
    {
      valueIterator = (com.terraframe.mojo.query.ValueIterator<com.terraframe.mojo.dataaccess.ValueObject>)this.getComponentQuery().getIterator(_pageSize, _pageNumber);
    }
    else
    {
      valueIterator = (com.terraframe.mojo.query.ValueIterator<com.terraframe.mojo.dataaccess.ValueObject>)this.getComponentQuery().getIterator();
    }
    return new com.terraframe.mojo.query.ViewIterator<MosquitoView>(this.getMdClassIF(), valueIterator);
  }

}
